if(angular.module("pascalprecht.translate",["ng"]).run(["$translate",function(e){var a=e.storageKey(),n=e.storage(),t=function(){var t=e.preferredLanguage();angular.isString(t)?e.use(t):n.put(a,e.use())};n?n.get(a)?e.use(n.get(a))["catch"](t):t():angular.isString(e.preferredLanguage())&&e.use(e.preferredLanguage())}]),angular.module("pascalprecht.translate").provider("$translate",["$STORAGE_KEY",function(e){var a,n,t,o,i,r,s,d,l,c,m,u,f,h,p,b={},g=[],v=e,y=[],w=!1,A="translate-cloak",k=!1,S=".",C="2.5.2",M=function(){var e,a,n=window.navigator,t=["language","browserLanguage","systemLanguage","userLanguage"];if(angular.isArray(n.languages))for(e=0;e<n.languages.length;e++)if(a=n.languages[e],a&&a.length)return a;for(e=0;e<t.length;e++)if(a=n[t[e]],a&&a.length)return a;return null};M.displayName="angular-translate/service: getFirstBrowserLanguage";var T=function(){return(M()||"").split("-").join("_")};T.displayName="angular-translate/service: getLocale";var B=function(e,a){for(var n=0,t=e.length;t>n;n++)if(e[n]===a)return n;return-1},L=function(){return this.replace(/^\s+|\s+$/g,"")},P=function(e){for(var a=[],t=angular.lowercase(e),o=0,i=g.length;i>o;o++)a.push(angular.lowercase(g[o]));if(B(a,t)>-1)return e;if(n){var r;for(var s in n){var d=!1,l=Object.prototype.hasOwnProperty.call(n,s)&&angular.lowercase(s)===angular.lowercase(e);if("*"===s.slice(-1)&&(d=s.slice(0,-1)===e.slice(0,s.length-1)),(l||d)&&(r=n[s],B(a,angular.lowercase(r))>-1))return r}}var c=e.split("_");return c.length>1&&B(a,angular.lowercase(c[0]))>-1?c[0]:e},x=function(e,a){if(!e&&!a)return b;if(e&&!a){if(angular.isString(e))return b[e]}else angular.isObject(b[e])||(b[e]={}),angular.extend(b[e],N(a));return this};this.translations=x,this.cloakClassName=function(e){return e?(A=e,this):A};var N=function(e,a,n,t){var o,i,r,s;a||(a=[]),n||(n={});for(o in e)Object.prototype.hasOwnProperty.call(e,o)&&(s=e[o],angular.isObject(s)?N(s,a.concat(o),n,o):(i=a.length?""+a.join(S)+S+o:o,a.length&&o===t&&(r=""+a.join(S),n[r]="@:"+i),n[i]=s));return n};this.addInterpolation=function(e){return y.push(e),this},this.useMessageFormatInterpolation=function(){return this.useInterpolation("$translateMessageFormatInterpolation")},this.useInterpolation=function(e){return c=e,this},this.useSanitizeValueStrategy=function(e){return w=e,this},this.preferredLanguage=function(e){return $(e),this};var $=function(e){return e&&(a=e),a};this.translationNotFoundIndicator=function(e){return this.translationNotFoundIndicatorLeft(e),this.translationNotFoundIndicatorRight(e),this},this.translationNotFoundIndicatorLeft=function(e){return e?(f=e,this):f},this.translationNotFoundIndicatorRight=function(e){return e?(h=e,this):h},this.fallbackLanguage=function(e){return R(e),this};var R=function(e){return e?(angular.isString(e)?(o=!0,t=[e]):angular.isArray(e)&&(o=!1,t=e),angular.isString(a)&&B(t,a)<0&&t.push(a),this):o?t[0]:t};this.use=function(e){if(e){if(!b[e]&&!m)throw new Error("$translateProvider couldn't find translationTable for langKey: '"+e+"'");return i=e,this}return i};var D=function(e){return e?(v=e,void 0):d?d+v:v};this.storageKey=D,this.useUrlLoader=function(e,a){return this.useLoader("$translateUrlLoader",angular.extend({url:e},a))},this.useStaticFilesLoader=function(e){return this.useLoader("$translateStaticFilesLoader",e)},this.useLoader=function(e,a){return m=e,u=a||{},this},this.useLocalStorage=function(){return this.useStorage("$translateLocalStorage")},this.useCookieStorage=function(){return this.useStorage("$translateCookieStorage")},this.useStorage=function(e){return s=e,this},this.storagePrefix=function(e){return e?(d=e,this):e},this.useMissingTranslationHandlerLog=function(){return this.useMissingTranslationHandler("$translateMissingTranslationHandlerLog")},this.useMissingTranslationHandler=function(e){return l=e,this},this.usePostCompiling=function(e){return k=!!e,this},this.determinePreferredLanguage=function(e){var n=e&&angular.isFunction(e)?e():T();return a=g.length?P(n):n,this},this.registerAvailableLanguageKeys=function(e,a){return e?(g=e,a&&(n=a),this):g},this.useLoaderCache=function(e){return e===!1?p=void 0:e===!0?p=!0:"undefined"==typeof e?p="$translationCache":e&&(p=e),this},this.$get=["$log","$injector","$rootScope","$q",function(e,n,d,g){var S,M,T,E=n.get(c||"$translateDefaultInterpolation"),O=!1,K={},G={},I=function(e,n,o){if(angular.isArray(e)){var r=function(e){for(var a={},t=[],i=function(e){var t=g.defer(),i=function(n){a[e]=n,t.resolve([e,n])};return I(e,n,o).then(i,i),t.promise},r=0,s=e.length;s>r;r++)t.push(i(e[r]));return g.all(t).then(function(){return a})};return r(e)}var d=g.defer();e&&(e=L.apply(e));var l=function(){var e=a?G[a]:G[i];if(M=0,s&&!e){var n=S.get(v);if(e=G[n],t&&t.length){var o=B(t,n);M=0===o?1:0,B(t,a)<0&&t.push(a)}}return e}();return l?l.then(function(){q(e,n,o).then(d.resolve,d.reject)},d.reject):q(e,n,o).then(d.resolve,d.reject),d.promise},H=function(e){return f&&(e=[f,e].join(" ")),h&&(e=[e,h].join(" ")),e},F=function(e){i=e,d.$emit("$translateChangeSuccess",{language:e}),s&&S.put(I.storageKey(),i),E.setLocale(i),angular.forEach(K,function(e,a){K[a].setLocale(i)}),d.$emit("$translateChangeEnd",{language:e})},U=function(e){if(!e)throw"No language key specified for loading.";var a=g.defer();d.$emit("$translateLoadingStart",{language:e}),O=!0;var t=p;"string"==typeof t&&(t=n.get(t));var o=angular.extend({},u,{key:e,$http:angular.extend({},{cache:t},u.$http)});return n.get(m)(o).then(function(n){var t={};d.$emit("$translateLoadingSuccess",{language:e}),angular.isArray(n)?angular.forEach(n,function(e){angular.extend(t,N(e))}):angular.extend(t,N(n)),O=!1,a.resolve({key:e,table:t}),d.$emit("$translateLoadingEnd",{language:e})},function(e){d.$emit("$translateLoadingError",{language:e}),a.reject(e),d.$emit("$translateLoadingEnd",{language:e})}),a.promise};if(s&&(S=n.get(s),!S.get||!S.put))throw new Error("Couldn't use storage '"+s+"', missing get() or put() method!");angular.isFunction(E.useSanitizeValueStrategy)&&E.useSanitizeValueStrategy(w),y.length&&angular.forEach(y,function(e){var t=n.get(e);t.setLocale(a||i),angular.isFunction(t.useSanitizeValueStrategy)&&t.useSanitizeValueStrategy(w),K[t.getInterpolationIdentifier()]=t});var V=function(e){var a=g.defer();return Object.prototype.hasOwnProperty.call(b,e)?a.resolve(b[e]):G[e]?G[e].then(function(e){x(e.key,e.table),a.resolve(e.table)},a.reject):a.reject(),a.promise},z=function(e,a,n,t){var o=g.defer();return V(e).then(function(r){Object.prototype.hasOwnProperty.call(r,a)?(t.setLocale(e),o.resolve(t.interpolate(r[a],n)),t.setLocale(i)):o.reject()},o.reject),o.promise},j=function(e,a,n,t){var o,r=b[e];return r&&Object.prototype.hasOwnProperty.call(r,a)&&(t.setLocale(e),o=t.interpolate(r[a],n),t.setLocale(i)),o},W=function(e){if(l){var a=n.get(l)(e,i);return void 0!==a?a:e}return e},J=function(e,a,n,o){var i=g.defer();if(e<t.length){var r=t[e];z(r,a,n,o).then(i.resolve,function(){J(e+1,a,n,o).then(i.resolve)})}else i.resolve(W(a));return i.promise},Y=function(e,a,n,o){var i;if(e<t.length){var r=t[e];i=j(r,a,n,o),i||(i=Y(e+1,a,n,o))}return i},Z=function(e,a,n){return J(T>0?T:M,e,a,n)},_=function(e,a,n){return Y(T>0?T:M,e,a,n)},q=function(e,a,n){var o=g.defer(),r=i?b[i]:b,s=n?K[n]:E;if(r&&Object.prototype.hasOwnProperty.call(r,e)){var d=r[e];"@:"===d.substr(0,2)?I(d.substr(2),a,n).then(o.resolve,o.reject):o.resolve(s.interpolate(d,a))}else{var c;l&&!O&&(c=W(e)),i&&t&&t.length?Z(e,a,s).then(function(e){o.resolve(e)},function(e){o.reject(H(e))}):l&&!O&&c?o.resolve(c):o.reject(H(e))}return o.promise},Q=function(e,a,n){var o,r=i?b[i]:b,s=n?K[n]:E;if(r&&Object.prototype.hasOwnProperty.call(r,e)){var d=r[e];o="@:"===d.substr(0,2)?Q(d.substr(2),a,n):s.interpolate(d,a)}else{var c;l&&!O&&(c=W(e)),i&&t&&t.length?(M=0,o=_(e,a,s)):o=l&&!O&&c?c:H(e)}return o};if(I.preferredLanguage=function(e){return e&&$(e),a},I.cloakClassName=function(){return A},I.fallbackLanguage=function(e){if(void 0!==e&&null!==e){if(R(e),m&&t&&t.length)for(var a=0,n=t.length;n>a;a++)G[t[a]]||(G[t[a]]=U(t[a]));I.use(I.use())}return o?t[0]:t},I.useFallbackLanguage=function(e){if(void 0!==e&&null!==e)if(e){var a=B(t,e);a>-1&&(T=a)}else T=0},I.proposedLanguage=function(){return r},I.storage=function(){return S},I.use=function(e){if(!e)return i;var a=g.defer();d.$emit("$translateChangeStart",{language:e});var n=P(e);return n&&(e=n),b[e]||!m||G[e]?(a.resolve(e),F(e)):(r=e,G[e]=U(e).then(function(n){return x(n.key,n.table),a.resolve(n.key),F(n.key),r===e&&(r=void 0),n},function(e){r===e&&(r=void 0),d.$emit("$translateChangeError",{language:e}),a.reject(e),d.$emit("$translateChangeEnd",{language:e})})),a.promise},I.storageKey=function(){return D()},I.isPostCompilingEnabled=function(){return k},I.refresh=function(e){function a(){o.resolve(),d.$emit("$translateRefreshEnd",{language:e})}function n(){o.reject(),d.$emit("$translateRefreshEnd",{language:e})}if(!m)throw new Error("Couldn't refresh translation table, no loader registered!");var o=g.defer();if(d.$emit("$translateRefreshStart",{language:e}),e)b[e]?U(e).then(function(n){x(n.key,n.table),e===i&&F(i),a()},n):n();else{var r=[],s={};if(t&&t.length)for(var l=0,c=t.length;c>l;l++)r.push(U(t[l])),s[t[l]]=!0;i&&!s[i]&&r.push(U(i)),g.all(r).then(function(e){angular.forEach(e,function(e){b[e.key]&&delete b[e.key],x(e.key,e.table)}),i&&F(i),a()})}return o.promise},I.instant=function(e,n,o){if(null===e||angular.isUndefined(e))return e;if(angular.isArray(e)){for(var r={},s=0,d=e.length;d>s;s++)r[e[s]]=I.instant(e[s],n,o);return r}if(angular.isString(e)&&e.length<1)return e;e&&(e=L.apply(e));var c,m=[];a&&m.push(a),i&&m.push(i),t&&t.length&&(m=m.concat(t));for(var u=0,f=m.length;f>u;u++){var h=m[u];if(b[h]&&"undefined"!=typeof b[h][e]&&(c=Q(e,n,o)),"undefined"!=typeof c)break}return c||""===c||(c=E.interpolate(e,n),l&&!O&&(c=W(e))),c},I.versionInfo=function(){return C},I.loaderCache=function(){return p},m&&(angular.equals(b,{})&&I.use(I.use()),t&&t.length))for(var X=function(e){return x(e.key,e.table),d.$emit("$translateChangeEnd",{language:e.key}),e},ea=0,aa=t.length;aa>ea;ea++)G[t[ea]]=U(t[ea]).then(X);return I}]}]),angular.module("pascalprecht.translate").factory("$translateDefaultInterpolation",["$interpolate",function(e){var a,n={},t="default",o=null,i={escaped:function(e){var a={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(a[n]=angular.element("<div></div>").text(e[n]).html());return a}},r=function(e){var a;return a=angular.isFunction(i[o])?i[o](e):e};return n.setLocale=function(e){a=e},n.getInterpolationIdentifier=function(){return t},n.useSanitizeValueStrategy=function(e){return o=e,this},n.interpolate=function(a,n){return o&&(n=r(n)),e(a)(n||{})},n}]),angular.module("pascalprecht.translate").constant("$STORAGE_KEY","NG_TRANSLATE_LANG_KEY"),angular.module("pascalprecht.translate").directive("translate",["$translate","$q","$interpolate","$compile","$parse","$rootScope",function(e,a,n,t,o,i){return{restrict:"AE",scope:!0,compile:function(a,r){var s=r.translateValues?r.translateValues:void 0,d=r.translateInterpolation?r.translateInterpolation:void 0,l=a[0].outerHTML.match(/translate-value-+/i),c="^(.*)("+n.startSymbol()+".*"+n.endSymbol()+")(.*)",m="^(.*)"+n.startSymbol()+"(.*)"+n.endSymbol()+"(.*)";return function(a,u,f){a.interpolateParams={},a.preText="",a.postText="";var h={},p=function(e){if(angular.equals(e,"")||!angular.isDefined(e)){var t=u.text().match(c);angular.isArray(t)?(a.preText=t[1],a.postText=t[3],h.translate=n(t[2])(a.$parent),watcherMatches=u.text().match(m),angular.isArray(watcherMatches)&&watcherMatches[2]&&watcherMatches[2].length&&a.$watch(watcherMatches[2],function(e){h.translate=e,w()})):h.translate=u.text().replace(/^\s+|\s+$/g,"")}else h.translate=e;w()},b=function(e){f.$observe(e,function(a){h[e]=a,w()})};f.$observe("translate",function(e){p(e)});for(var g in f)f.hasOwnProperty(g)&&"translateAttr"===g.substr(0,13)&&b(g);if(f.$observe("translateDefault",function(e){a.defaultText=e}),s&&f.$observe("translateValues",function(e){e&&a.$parent.$watch(function(){angular.extend(a.interpolateParams,o(e)(a.$parent))})}),l){var v=function(e){f.$observe(e,function(n){var t=angular.lowercase(e.substr(14,1))+e.substr(15);a.interpolateParams[t]=n})};for(var y in f)Object.prototype.hasOwnProperty.call(f,y)&&"translateValue"===y.substr(0,14)&&"translateValues"!==y&&v(y)}var w=function(){for(var e in h)h.hasOwnProperty(e)&&h[e]&&A(e,h[e],a,a.interpolateParams)},A=function(a,n,t,o){e(n,o,d).then(function(e){k(e,t,!0,a)},function(e){k(e,t,!1,a)})},k=function(a,n,o,i){if("translate"===i){o||"undefined"==typeof n.defaultText||(a=n.defaultText),u.html(n.preText+a+n.postText);var s=e.isPostCompilingEnabled(),d="undefined"!=typeof r.translateCompile,l=d&&"false"!==r.translateCompile;(s&&!d||l)&&t(u.contents())(n)}else{o||"undefined"==typeof n.defaultText||(a=n.defaultText);var c=f.$attr[i].substr(15);u.attr(c,a)}};a.$watch("interpolateParams",w,!0);var S=i.$on("$translateChangeSuccess",w);u.text().length&&p(""),w(),a.$on("$destroy",S)}}}}]),angular.module("pascalprecht.translate").directive("translateCloak",["$rootScope","$translate",function(e,a){return{compile:function(n){var t=function(){n.addClass(a.cloakClassName())},o=function(){n.removeClass(a.cloakClassName())},i=e.$on("$translateChangeEnd",function(){o(),i(),i=null});return t(),function(e,n,i){i.translateCloak&&i.translateCloak.length&&i.$observe("translateCloak",function(e){a(e).then(o,t)})}}}}]),angular.module("pascalprecht.translate").filter("translate",["$parse","$translate",function(e,a){var n=function(n,t,o){return angular.isObject(t)||(t=e(t)(this)),a.instant(n,t,o)};return n.$stateful=!0,n}]),angular.module("pascalprecht.translate").factory("$translateStaticFilesLoader",["$q","$http",function(e,a){return function(n){if(!n||!angular.isString(n.prefix)||!angular.isString(n.suffix))throw new Error("Couldn't load static files, no prefix or suffix specified!");var t=e.defer();return a(angular.extend({url:[n.prefix,n.key,n.suffix].join(""),method:"GET",params:""},n.$http)).success(function(e){t.resolve(e)}).error(function(){t.reject(n.key)}),t.promise}}]),+function(e){"use strict";function a(a){return this.each(function(){var t=e(this),o=t.data("bs.affix"),i="object"==typeof a&&a;o||t.data("bs.affix",o=new n(this,i)),"string"==typeof a&&o[a]()})}var n=function(a,t){this.options=e.extend({},n.DEFAULTS,t),this.$target=e(this.options.target).on("scroll.bs.affix.data-api",e.proxy(this.checkPosition,this)).on("click.bs.affix.data-api",e.proxy(this.checkPositionWithEventLoop,this)),this.$element=e(a),this.affixed=this.unpin=this.pinnedOffset=null,this.checkPosition()};n.VERSION="3.2.0",n.RESET="affix affix-top affix-bottom",n.DEFAULTS={offset:0,target:window},n.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(n.RESET).addClass("affix");var e=this.$target.scrollTop(),a=this.$element.offset();return this.pinnedOffset=a.top-e},n.prototype.checkPositionWithEventLoop=function(){setTimeout(e.proxy(this.checkPosition,this),1)},n.prototype.checkPosition=function(){if(this.$element.is(":visible")){var a=e(document).height(),t=this.$target.scrollTop(),o=this.$element.offset(),i=this.options.offset,r=i.top,s=i.bottom;"object"!=typeof i&&(s=r=i),"function"==typeof r&&(r=i.top(this.$element)),"function"==typeof s&&(s=i.bottom(this.$element));var d=null!=this.unpin&&t+this.unpin<=o.top?!1:null!=s&&o.top+this.$element.height()>=a-s?"bottom":null!=r&&r>=t?"top":!1;if(this.affixed!==d){null!=this.unpin&&this.$element.css("top","");var l="affix"+(d?"-"+d:""),c=e.Event(l+".bs.affix");this.$element.trigger(c),c.isDefaultPrevented()||(this.affixed=d,this.unpin="bottom"==d?this.getPinnedOffset():null,this.$element.removeClass(n.RESET).addClass(l).trigger(e.Event(l.replace("affix","affixed"))),"bottom"==d&&this.$element.offset({top:a-this.$element.height()-s}))}}};var t=e.fn.affix;e.fn.affix=a,e.fn.affix.Constructor=n,e.fn.affix.noConflict=function(){return e.fn.affix=t,this},e(window).on("load",function(){e('[data-spy="affix"]').each(function(){var n=e(this),t=n.data();t.offset=t.offset||{},t.offsetBottom&&(t.offset.bottom=t.offsetBottom),t.offsetTop&&(t.offset.top=t.offsetTop),a.call(n,t)})})}(jQuery),+function(e){"use strict";function a(a){return this.each(function(){var n=e(this),o=n.data("bs.alert");o||n.data("bs.alert",o=new t(this)),"string"==typeof a&&o[a].call(n)})}var n='[data-dismiss="alert"]',t=function(a){e(a).on("click",n,this.close)};t.VERSION="3.2.0",t.prototype.close=function(a){function n(){i.detach().trigger("closed.bs.alert").remove()}var t=e(this),o=t.attr("data-target");o||(o=t.attr("href"),o=o&&o.replace(/.*(?=#[^\s]*$)/,""));var i=e(o);a&&a.preventDefault(),i.length||(i=t.hasClass("alert")?t:t.parent()),i.trigger(a=e.Event("close.bs.alert")),a.isDefaultPrevented()||(i.removeClass("in"),e.support.transition&&i.hasClass("fade")?i.one("bsTransitionEnd",n).emulateTransitionEnd(150):n())};var o=e.fn.alert;e.fn.alert=a,e.fn.alert.Constructor=t,e.fn.alert.noConflict=function(){return e.fn.alert=o,this},e(document).on("click.bs.alert.data-api",n,t.prototype.close)}(jQuery),+function(e){"use strict";function a(a){return this.each(function(){var t=e(this),o=t.data("bs.button"),i="object"==typeof a&&a;o||t.data("bs.button",o=new n(this,i)),"toggle"==a?o.toggle():a&&o.setState(a)})}var n=function(a,t){this.$element=e(a),this.options=e.extend({},n.DEFAULTS,t),this.isLoading=!1};n.VERSION="3.2.0",n.DEFAULTS={loadingText:"loading..."},n.prototype.setState=function(a){var n="disabled",t=this.$element,o=t.is("input")?"val":"html",i=t.data();a+="Text",null==i.resetText&&t.data("resetText",t[o]()),t[o](null==i[a]?this.options[a]:i[a]),setTimeout(e.proxy(function(){"loadingText"==a?(this.isLoading=!0,t.addClass(n).attr(n,n)):this.isLoading&&(this.isLoading=!1,t.removeClass(n).removeAttr(n))},this),0)},n.prototype.toggle=function(){var e=!0,a=this.$element.closest('[data-toggle="buttons"]');if(a.length){var n=this.$element.find("input");"radio"==n.prop("type")&&(n.prop("checked")&&this.$element.hasClass("active")?e=!1:a.find(".active").removeClass("active")),e&&n.prop("checked",!this.$element.hasClass("active")).trigger("change")}e&&this.$element.toggleClass("active")};var t=e.fn.button;e.fn.button=a,e.fn.button.Constructor=n,e.fn.button.noConflict=function(){return e.fn.button=t,this},e(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(n){var t=e(n.target);t.hasClass("btn")||(t=t.closest(".btn")),a.call(t,"toggle"),n.preventDefault()})}(jQuery),+function(e){"use strict";function a(a){return this.each(function(){var t=e(this),o=t.data("bs.carousel"),i=e.extend({},n.DEFAULTS,t.data(),"object"==typeof a&&a),r="string"==typeof a?a:i.slide;o||t.data("bs.carousel",o=new n(this,i)),"number"==typeof a?o.to(a):r?o[r]():i.interval&&o.pause().cycle()})}var n=function(a,n){this.$element=e(a).on("keydown.bs.carousel",e.proxy(this.keydown,this)),this.$indicators=this.$element.find(".carousel-indicators"),this.options=n,this.paused=this.sliding=this.interval=this.$active=this.$items=null,"hover"==this.options.pause&&this.$element.on("mouseenter.bs.carousel",e.proxy(this.pause,this)).on("mouseleave.bs.carousel",e.proxy(this.cycle,this))};n.VERSION="3.2.0",n.DEFAULTS={interval:5e3,pause:"hover",wrap:!0},n.prototype.keydown=function(e){switch(e.which){case 37:this.prev();break;case 39:this.next();break;default:return}e.preventDefault()},n.prototype.cycle=function(a){return a||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(e.proxy(this.next,this),this.options.interval)),this},n.prototype.getItemIndex=function(e){return this.$items=e.parent().children(".item"),this.$items.index(e||this.$active)},n.prototype.to=function(a){var n=this,t=this.getItemIndex(this.$active=this.$element.find(".item.active"));return a>this.$items.length-1||0>a?void 0:this.sliding?this.$element.one("slid.bs.carousel",function(){n.to(a)}):t==a?this.pause().cycle():this.slide(a>t?"next":"prev",e(this.$items[a]))},n.prototype.pause=function(a){return a||(this.paused=!0),this.$element.find(".next, .prev").length&&e.support.transition&&(this.$element.trigger(e.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},n.prototype.next=function(){return this.sliding?void 0:this.slide("next")},n.prototype.prev=function(){return this.sliding?void 0:this.slide("prev")},n.prototype.slide=function(a,n){var t=this.$element.find(".item.active"),o=n||t[a](),i=this.interval,r="next"==a?"left":"right",s="next"==a?"first":"last",d=this;if(!o.length){if(!this.options.wrap)return;o=this.$element.find(".item")[s]()}if(o.hasClass("active"))return this.sliding=!1;var l=o[0],c=e.Event("slide.bs.carousel",{relatedTarget:l,direction:r});if(this.$element.trigger(c),!c.isDefaultPrevented()){if(this.sliding=!0,i&&this.pause(),this.$indicators.length){this.$indicators.find(".active").removeClass("active");var m=e(this.$indicators.children()[this.getItemIndex(o)]);m&&m.addClass("active")}var u=e.Event("slid.bs.carousel",{relatedTarget:l,direction:r});return e.support.transition&&this.$element.hasClass("slide")?(o.addClass(a),o[0].offsetWidth,t.addClass(r),o.addClass(r),t.one("bsTransitionEnd",function(){o.removeClass([a,r].join(" ")).addClass("active"),t.removeClass(["active",r].join(" ")),d.sliding=!1,setTimeout(function(){d.$element.trigger(u)},0)}).emulateTransitionEnd(1e3*t.css("transition-duration").slice(0,-1))):(t.removeClass("active"),o.addClass("active"),this.sliding=!1,this.$element.trigger(u)),i&&this.cycle(),this}};var t=e.fn.carousel;e.fn.carousel=a,e.fn.carousel.Constructor=n,e.fn.carousel.noConflict=function(){return e.fn.carousel=t,this},e(document).on("click.bs.carousel.data-api","[data-slide], [data-slide-to]",function(n){var t,o=e(this),i=e(o.attr("data-target")||(t=o.attr("href"))&&t.replace(/.*(?=#[^\s]+$)/,""));if(i.hasClass("carousel")){var r=e.extend({},i.data(),o.data()),s=o.attr("data-slide-to");s&&(r.interval=!1),a.call(i,r),s&&i.data("bs.carousel").to(s),n.preventDefault()}}),e(window).on("load",function(){e('[data-ride="carousel"]').each(function(){var n=e(this);a.call(n,n.data())})})}(jQuery),+function(e){"use strict";function a(a){return this.each(function(){var t=e(this),o=t.data("bs.collapse"),i=e.extend({},n.DEFAULTS,t.data(),"object"==typeof a&&a);!o&&i.toggle&&"show"==a&&(a=!a),o||t.data("bs.collapse",o=new n(this,i)),"string"==typeof a&&o[a]()})}var n=function(a,t){this.$element=e(a),this.options=e.extend({},n.DEFAULTS,t),this.transitioning=null,this.options.parent&&(this.$parent=e(this.options.parent)),this.options.toggle&&this.toggle()};n.VERSION="3.2.0",n.DEFAULTS={toggle:!0},n.prototype.dimension=function(){var e=this.$element.hasClass("width");return e?"width":"height"},n.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var n=e.Event("show.bs.collapse");if(this.$element.trigger(n),!n.isDefaultPrevented()){var t=this.$parent&&this.$parent.find("> .panel > .in");if(t&&t.length){var o=t.data("bs.collapse");if(o&&o.transitioning)return;a.call(t,"hide"),o||t.data("bs.collapse",null)}var i=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[i](0),this.transitioning=1;var r=function(){this.$element.removeClass("collapsing").addClass("collapse in")[i](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!e.support.transition)return r.call(this);var s=e.camelCase(["scroll",i].join("-"));this.$element.one("bsTransitionEnd",e.proxy(r,this)).emulateTransitionEnd(350)[i](this.$element[0][s])}}},n.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var a=e.Event("hide.bs.collapse");if(this.$element.trigger(a),!a.isDefaultPrevented()){var n=this.dimension();this.$element[n](this.$element[n]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse").removeClass("in"),this.transitioning=1;var t=function(){this.transitioning=0,this.$element.trigger("hidden.bs.collapse").removeClass("collapsing").addClass("collapse")};return e.support.transition?(this.$element[n](0).one("bsTransitionEnd",e.proxy(t,this)).emulateTransitionEnd(350),void 0):t.call(this)}}},n.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()};var t=e.fn.collapse;e.fn.collapse=a,e.fn.collapse.Constructor=n,e.fn.collapse.noConflict=function(){return e.fn.collapse=t,this},e(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(n){var t,o=e(this),i=o.attr("data-target")||n.preventDefault()||(t=o.attr("href"))&&t.replace(/.*(?=#[^\s]+$)/,""),r=e(i),s=r.data("bs.collapse"),d=s?"toggle":o.data(),l=o.attr("data-parent"),c=l&&e(l);s&&s.transitioning||(c&&c.find('[data-toggle="collapse"][data-parent="'+l+'"]').not(o).addClass("collapsed"),o[r.hasClass("in")?"addClass":"removeClass"]("collapsed")),a.call(r,d)})}(jQuery),+function(e){"use strict";function a(a){a&&3===a.which||(e(o).remove(),e(i).each(function(){var t=n(e(this)),o={relatedTarget:this};t.hasClass("open")&&(t.trigger(a=e.Event("hide.bs.dropdown",o)),a.isDefaultPrevented()||t.removeClass("open").trigger("hidden.bs.dropdown",o))}))}function n(a){var n=a.attr("data-target");n||(n=a.attr("href"),n=n&&/#[A-Za-z]/.test(n)&&n.replace(/.*(?=#[^\s]*$)/,""));var t=n&&e(n);return t&&t.length?t:a.parent()}function t(a){return this.each(function(){var n=e(this),t=n.data("bs.dropdown");t||n.data("bs.dropdown",t=new r(this)),"string"==typeof a&&t[a].call(n)})}var o=".dropdown-backdrop",i='[data-toggle="dropdown"]',r=function(a){e(a).on("click.bs.dropdown",this.toggle)};r.VERSION="3.2.0",r.prototype.toggle=function(t){var o=e(this);if(!o.is(".disabled, :disabled")){var i=n(o),r=i.hasClass("open");if(a(),!r){"ontouchstart"in document.documentElement&&!i.closest(".navbar-nav").length&&e('<div class="dropdown-backdrop"/>').insertAfter(e(this)).on("click",a);var s={relatedTarget:this};if(i.trigger(t=e.Event("show.bs.dropdown",s)),t.isDefaultPrevented())return;o.trigger("focus"),i.toggleClass("open").trigger("shown.bs.dropdown",s)}return!1}},r.prototype.keydown=function(a){if(/(38|40|27)/.test(a.keyCode)){var t=e(this);if(a.preventDefault(),a.stopPropagation(),!t.is(".disabled, :disabled")){var o=n(t),r=o.hasClass("open");if(!r||r&&27==a.keyCode)return 27==a.which&&o.find(i).trigger("focus"),t.trigger("click");var s=" li:not(.divider):visible a",d=o.find('[role="menu"]'+s+', [role="listbox"]'+s);if(d.length){var l=d.index(d.filter(":focus"));38==a.keyCode&&l>0&&l--,40==a.keyCode&&l<d.length-1&&l++,~l||(l=0),d.eq(l).trigger("focus")}}}};var s=e.fn.dropdown;e.fn.dropdown=t,e.fn.dropdown.Constructor=r,e.fn.dropdown.noConflict=function(){return e.fn.dropdown=s,this},e(document).on("click.bs.dropdown.data-api",a).on("click.bs.dropdown.data-api",".dropdown form",function(e){e.stopPropagation()}).on("click.bs.dropdown.data-api",i,r.prototype.toggle).on("keydown.bs.dropdown.data-api",i+', [role="menu"], [role="listbox"]',r.prototype.keydown)}(jQuery),+function(e){"use strict";function a(a){return this.each(function(){var t=e(this),o=t.data("bs.tab");o||t.data("bs.tab",o=new n(this)),"string"==typeof a&&o[a]()})}var n=function(a){this.element=e(a)};n.VERSION="3.2.0",n.prototype.show=function(){var a=this.element,n=a.closest("ul:not(.dropdown-menu)"),t=a.data("target");if(t||(t=a.attr("href"),t=t&&t.replace(/.*(?=#[^\s]*$)/,"")),!a.parent("li").hasClass("active")){var o=n.find(".active:last a")[0],i=e.Event("show.bs.tab",{relatedTarget:o});if(a.trigger(i),!i.isDefaultPrevented()){var r=e(t);this.activate(a.closest("li"),n),this.activate(r,r.parent(),function(){a.trigger({type:"shown.bs.tab",relatedTarget:o})})}}},n.prototype.activate=function(a,n,t){function o(){i.removeClass("active").find("> .dropdown-menu > .active").removeClass("active"),a.addClass("active"),r?(a[0].offsetWidth,a.addClass("in")):a.removeClass("fade"),a.parent(".dropdown-menu")&&a.closest("li.dropdown").addClass("active"),t&&t()}var i=n.find("> .active"),r=t&&e.support.transition&&i.hasClass("fade");r?i.one("bsTransitionEnd",o).emulateTransitionEnd(150):o(),i.removeClass("in")};var t=e.fn.tab;e.fn.tab=a,e.fn.tab.Constructor=n,e.fn.tab.noConflict=function(){return e.fn.tab=t,this},e(document).on("click.bs.tab.data-api",'[data-toggle="tab"], [data-toggle="pill"]',function(n){n.preventDefault(),a.call(e(this),"show")})}(jQuery),+function(e){"use strict";function a(){var e=document.createElement("bootstrap"),a={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var n in a)if(void 0!==e.style[n])return{end:a[n]};return!1}e.fn.emulateTransitionEnd=function(a){var n=!1,t=this;e(this).one("bsTransitionEnd",function(){n=!0});var o=function(){n||e(t).trigger(e.support.transition.end)};return setTimeout(o,a),this},e(function(){e.support.transition=a(),e.support.transition&&(e.event.special.bsTransitionEnd={bindType:e.support.transition.end,delegateType:e.support.transition.end,handle:function(a){return e(a.target).is(this)?a.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),+function(e){"use strict";function a(n,t){var o=e.proxy(this.process,this);this.$body=e("body"),this.$scrollElement=e(n).is("body")?e(window):e(n),this.options=e.extend({},a.DEFAULTS,t),this.selector=(this.options.target||"")+" .nav li > a",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on("scroll.bs.scrollspy",o),this.refresh(),this.process()}function n(n){return this.each(function(){var t=e(this),o=t.data("bs.scrollspy"),i="object"==typeof n&&n;o||t.data("bs.scrollspy",o=new a(this,i)),"string"==typeof n&&o[n]()})}a.VERSION="3.2.0",a.DEFAULTS={offset:10},a.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},a.prototype.refresh=function(){var a="offset",n=0;e.isWindow(this.$scrollElement[0])||(a="position",n=this.$scrollElement.scrollTop()),this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight();var t=this;this.$body.find(this.selector).map(function(){var t=e(this),o=t.data("target")||t.attr("href"),i=/^#./.test(o)&&e(o);return i&&i.length&&i.is(":visible")&&[[i[a]().top+n,o]]||null}).sort(function(e,a){return e[0]-a[0]}).each(function(){t.offsets.push(this[0]),t.targets.push(this[1])})},a.prototype.process=function(){var e,a=this.$scrollElement.scrollTop()+this.options.offset,n=this.getScrollHeight(),t=this.options.offset+n-this.$scrollElement.height(),o=this.offsets,i=this.targets,r=this.activeTarget;if(this.scrollHeight!=n&&this.refresh(),a>=t)return r!=(e=i[i.length-1])&&this.activate(e);if(r&&a<=o[0])return r!=(e=i[0])&&this.activate(e);for(e=o.length;e--;)r!=i[e]&&a>=o[e]&&(!o[e+1]||a<=o[e+1])&&this.activate(i[e])},a.prototype.activate=function(a){this.activeTarget=a,e(this.selector).parentsUntil(this.options.target,".active").removeClass("active");var n=this.selector+'[data-target="'+a+'"],'+this.selector+'[href="'+a+'"]',t=e(n).parents("li").addClass("active");t.parent(".dropdown-menu").length&&(t=t.closest("li.dropdown").addClass("active")),t.trigger("activate.bs.scrollspy")};var t=e.fn.scrollspy;e.fn.scrollspy=n,e.fn.scrollspy.Constructor=a,e.fn.scrollspy.noConflict=function(){return e.fn.scrollspy=t,this},e(window).on("load.bs.scrollspy.data-api",function(){e('[data-spy="scroll"]').each(function(){var a=e(this);n.call(a,a.data())})})}(jQuery),+function(e){"use strict";function a(a,t){return this.each(function(){var o=e(this),i=o.data("bs.modal"),r=e.extend({},n.DEFAULTS,o.data(),"object"==typeof a&&a);i||o.data("bs.modal",i=new n(this,r)),"string"==typeof a?i[a](t):r.show&&i.show(t)})}var n=function(a,n){this.options=n,this.$body=e(document.body),this.$element=e(a),this.$backdrop=this.isShown=null,this.scrollbarWidth=0,this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,e.proxy(function(){this.$element.trigger("loaded.bs.modal")
},this))};n.VERSION="3.2.0",n.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},n.prototype.toggle=function(e){return this.isShown?this.hide():this.show(e)},n.prototype.show=function(a){var n=this,t=e.Event("show.bs.modal",{relatedTarget:a});this.$element.trigger(t),this.isShown||t.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.$body.addClass("modal-open"),this.setScrollbar(),this.escape(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',e.proxy(this.hide,this)),this.backdrop(function(){var t=e.support.transition&&n.$element.hasClass("fade");n.$element.parent().length||n.$element.appendTo(n.$body),n.$element.show().scrollTop(0),t&&n.$element[0].offsetWidth,n.$element.addClass("in").attr("aria-hidden",!1),n.enforceFocus();var o=e.Event("shown.bs.modal",{relatedTarget:a});t?n.$element.find(".modal-dialog").one("bsTransitionEnd",function(){n.$element.trigger("focus").trigger(o)}).emulateTransitionEnd(300):n.$element.trigger("focus").trigger(o)}))},n.prototype.hide=function(a){a&&a.preventDefault(),a=e.Event("hide.bs.modal"),this.$element.trigger(a),this.isShown&&!a.isDefaultPrevented()&&(this.isShown=!1,this.$body.removeClass("modal-open"),this.resetScrollbar(),this.escape(),e(document).off("focusin.bs.modal"),this.$element.removeClass("in").attr("aria-hidden",!0).off("click.dismiss.bs.modal"),e.support.transition&&this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",e.proxy(this.hideModal,this)).emulateTransitionEnd(300):this.hideModal())},n.prototype.enforceFocus=function(){e(document).off("focusin.bs.modal").on("focusin.bs.modal",e.proxy(function(e){this.$element[0]===e.target||this.$element.has(e.target).length||this.$element.trigger("focus")},this))},n.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keyup.dismiss.bs.modal",e.proxy(function(e){27==e.which&&this.hide()},this)):this.isShown||this.$element.off("keyup.dismiss.bs.modal")},n.prototype.hideModal=function(){var e=this;this.$element.hide(),this.backdrop(function(){e.$element.trigger("hidden.bs.modal")})},n.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},n.prototype.backdrop=function(a){var n=this,t=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var o=e.support.transition&&t;if(this.$backdrop=e('<div class="modal-backdrop '+t+'" />').appendTo(this.$body),this.$element.on("click.dismiss.bs.modal",e.proxy(function(e){e.target===e.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus.call(this.$element[0]):this.hide.call(this))},this)),o&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!a)return;o?this.$backdrop.one("bsTransitionEnd",a).emulateTransitionEnd(150):a()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass("in");var i=function(){n.removeBackdrop(),a&&a()};e.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",i).emulateTransitionEnd(150):i()}else a&&a()},n.prototype.checkScrollbar=function(){document.body.clientWidth>=window.innerWidth||(this.scrollbarWidth=this.scrollbarWidth||this.measureScrollbar())},n.prototype.setScrollbar=function(){var e=parseInt(this.$body.css("padding-right")||0,10);this.scrollbarWidth&&this.$body.css("padding-right",e+this.scrollbarWidth)},n.prototype.resetScrollbar=function(){this.$body.css("padding-right","")},n.prototype.measureScrollbar=function(){var e=document.createElement("div");e.className="modal-scrollbar-measure",this.$body.append(e);var a=e.offsetWidth-e.clientWidth;return this.$body[0].removeChild(e),a};var t=e.fn.modal;e.fn.modal=a,e.fn.modal.Constructor=n,e.fn.modal.noConflict=function(){return e.fn.modal=t,this},e(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(n){var t=e(this),o=t.attr("href"),i=e(t.attr("data-target")||o&&o.replace(/.*(?=#[^\s]+$)/,"")),r=i.data("bs.modal")?"toggle":e.extend({remote:!/#/.test(o)&&o},i.data(),t.data());t.is("a")&&n.preventDefault(),i.one("show.bs.modal",function(e){e.isDefaultPrevented()||i.one("hidden.bs.modal",function(){t.is(":visible")&&t.trigger("focus")})}),a.call(i,r,this)})}(jQuery),+function(e){"use strict";function a(a){return this.each(function(){var t=e(this),o=t.data("bs.tooltip"),i="object"==typeof a&&a;(o||"destroy"!=a)&&(o||t.data("bs.tooltip",o=new n(this,i)),"string"==typeof a&&o[a]())})}var n=function(e,a){this.type=this.options=this.enabled=this.timeout=this.hoverState=this.$element=null,this.init("tooltip",e,a)};n.VERSION="3.2.0",n.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0}},n.prototype.init=function(a,n,t){this.enabled=!0,this.type=a,this.$element=e(n),this.options=this.getOptions(t),this.$viewport=this.options.viewport&&e(this.options.viewport.selector||this.options.viewport);for(var o=this.options.trigger.split(" "),i=o.length;i--;){var r=o[i];if("click"==r)this.$element.on("click."+this.type,this.options.selector,e.proxy(this.toggle,this));else if("manual"!=r){var s="hover"==r?"mouseenter":"focusin",d="hover"==r?"mouseleave":"focusout";this.$element.on(s+"."+this.type,this.options.selector,e.proxy(this.enter,this)),this.$element.on(d+"."+this.type,this.options.selector,e.proxy(this.leave,this))}}this.options.selector?this._options=e.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},n.prototype.getDefaults=function(){return n.DEFAULTS},n.prototype.getOptions=function(a){return a=e.extend({},this.getDefaults(),this.$element.data(),a),a.delay&&"number"==typeof a.delay&&(a.delay={show:a.delay,hide:a.delay}),a},n.prototype.getDelegateOptions=function(){var a={},n=this.getDefaults();return this._options&&e.each(this._options,function(e,t){n[e]!=t&&(a[e]=t)}),a},n.prototype.enter=function(a){var n=a instanceof this.constructor?a:e(a.currentTarget).data("bs."+this.type);return n||(n=new this.constructor(a.currentTarget,this.getDelegateOptions()),e(a.currentTarget).data("bs."+this.type,n)),clearTimeout(n.timeout),n.hoverState="in",n.options.delay&&n.options.delay.show?(n.timeout=setTimeout(function(){"in"==n.hoverState&&n.show()},n.options.delay.show),void 0):n.show()},n.prototype.leave=function(a){var n=a instanceof this.constructor?a:e(a.currentTarget).data("bs."+this.type);return n||(n=new this.constructor(a.currentTarget,this.getDelegateOptions()),e(a.currentTarget).data("bs."+this.type,n)),clearTimeout(n.timeout),n.hoverState="out",n.options.delay&&n.options.delay.hide?(n.timeout=setTimeout(function(){"out"==n.hoverState&&n.hide()},n.options.delay.hide),void 0):n.hide()},n.prototype.show=function(){var a=e.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(a);var n=e.contains(document.documentElement,this.$element[0]);if(a.isDefaultPrevented()||!n)return;var t=this,o=this.tip(),i=this.getUID(this.type);this.setContent(),o.attr("id",i),this.$element.attr("aria-describedby",i),this.options.animation&&o.addClass("fade");var r="function"==typeof this.options.placement?this.options.placement.call(this,o[0],this.$element[0]):this.options.placement,s=/\s?auto?\s?/i,d=s.test(r);d&&(r=r.replace(s,"")||"top"),o.detach().css({top:0,left:0,display:"block"}).addClass(r).data("bs."+this.type,this),this.options.container?o.appendTo(this.options.container):o.insertAfter(this.$element);var l=this.getPosition(),c=o[0].offsetWidth,m=o[0].offsetHeight;if(d){var u=r,f=this.$element.parent(),h=this.getPosition(f);r="bottom"==r&&l.top+l.height+m-h.scroll>h.height?"top":"top"==r&&l.top-h.scroll-m<0?"bottom":"right"==r&&l.right+c>h.width?"left":"left"==r&&l.left-c<h.left?"right":r,o.removeClass(u).addClass(r)}var p=this.getCalculatedOffset(r,l,c,m);this.applyPlacement(p,r);var b=function(){t.$element.trigger("shown.bs."+t.type),t.hoverState=null};e.support.transition&&this.$tip.hasClass("fade")?o.one("bsTransitionEnd",b).emulateTransitionEnd(150):b()}},n.prototype.applyPlacement=function(a,n){var t=this.tip(),o=t[0].offsetWidth,i=t[0].offsetHeight,r=parseInt(t.css("margin-top"),10),s=parseInt(t.css("margin-left"),10);isNaN(r)&&(r=0),isNaN(s)&&(s=0),a.top=a.top+r,a.left=a.left+s,e.offset.setOffset(t[0],e.extend({using:function(e){t.css({top:Math.round(e.top),left:Math.round(e.left)})}},a),0),t.addClass("in");var d=t[0].offsetWidth,l=t[0].offsetHeight;"top"==n&&l!=i&&(a.top=a.top+i-l);var c=this.getViewportAdjustedDelta(n,a,d,l);c.left?a.left+=c.left:a.top+=c.top;var m=c.left?2*c.left-o+d:2*c.top-i+l,u=c.left?"left":"top",f=c.left?"offsetWidth":"offsetHeight";t.offset(a),this.replaceArrow(m,t[0][f],u)},n.prototype.replaceArrow=function(e,a,n){this.arrow().css(n,e?50*(1-e/a)+"%":"")},n.prototype.setContent=function(){var e=this.tip(),a=this.getTitle();e.find(".tooltip-inner")[this.options.html?"html":"text"](a),e.removeClass("fade in top bottom left right")},n.prototype.hide=function(){function a(){"in"!=n.hoverState&&t.detach(),n.$element.trigger("hidden.bs."+n.type)}var n=this,t=this.tip(),o=e.Event("hide.bs."+this.type);return this.$element.removeAttr("aria-describedby"),this.$element.trigger(o),o.isDefaultPrevented()?void 0:(t.removeClass("in"),e.support.transition&&this.$tip.hasClass("fade")?t.one("bsTransitionEnd",a).emulateTransitionEnd(150):a(),this.hoverState=null,this)},n.prototype.fixTitle=function(){var e=this.$element;(e.attr("title")||"string"!=typeof e.attr("data-original-title"))&&e.attr("data-original-title",e.attr("title")||"").attr("title","")},n.prototype.hasContent=function(){return this.getTitle()},n.prototype.getPosition=function(a){a=a||this.$element;var n=a[0],t="BODY"==n.tagName;return e.extend({},"function"==typeof n.getBoundingClientRect?n.getBoundingClientRect():null,{scroll:t?document.documentElement.scrollTop||document.body.scrollTop:a.scrollTop(),width:t?e(window).width():a.outerWidth(),height:t?e(window).height():a.outerHeight()},t?{top:0,left:0}:a.offset())},n.prototype.getCalculatedOffset=function(e,a,n,t){return"bottom"==e?{top:a.top+a.height,left:a.left+a.width/2-n/2}:"top"==e?{top:a.top-t,left:a.left+a.width/2-n/2}:"left"==e?{top:a.top+a.height/2-t/2,left:a.left-n}:{top:a.top+a.height/2-t/2,left:a.left+a.width}},n.prototype.getViewportAdjustedDelta=function(e,a,n,t){var o={top:0,left:0};if(!this.$viewport)return o;var i=this.options.viewport&&this.options.viewport.padding||0,r=this.getPosition(this.$viewport);if(/right|left/.test(e)){var s=a.top-i-r.scroll,d=a.top+i-r.scroll+t;s<r.top?o.top=r.top-s:d>r.top+r.height&&(o.top=r.top+r.height-d)}else{var l=a.left-i,c=a.left+i+n;l<r.left?o.left=r.left-l:c>r.width&&(o.left=r.left+r.width-c)}return o},n.prototype.getTitle=function(){var e,a=this.$element,n=this.options;return e=a.attr("data-original-title")||("function"==typeof n.title?n.title.call(a[0]):n.title)},n.prototype.getUID=function(e){do e+=~~(1e6*Math.random());while(document.getElementById(e));return e},n.prototype.tip=function(){return this.$tip=this.$tip||e(this.options.template)},n.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},n.prototype.validate=function(){this.$element[0].parentNode||(this.hide(),this.$element=null,this.options=null)},n.prototype.enable=function(){this.enabled=!0},n.prototype.disable=function(){this.enabled=!1},n.prototype.toggleEnabled=function(){this.enabled=!this.enabled},n.prototype.toggle=function(a){var n=this;a&&(n=e(a.currentTarget).data("bs."+this.type),n||(n=new this.constructor(a.currentTarget,this.getDelegateOptions()),e(a.currentTarget).data("bs."+this.type,n))),n.tip().hasClass("in")?n.leave(n):n.enter(n)},n.prototype.destroy=function(){clearTimeout(this.timeout),this.hide().$element.off("."+this.type).removeData("bs."+this.type)};var t=e.fn.tooltip;e.fn.tooltip=a,e.fn.tooltip.Constructor=n,e.fn.tooltip.noConflict=function(){return e.fn.tooltip=t,this}}(jQuery),+function(e){"use strict";function a(a){return this.each(function(){var t=e(this),o=t.data("bs.popover"),i="object"==typeof a&&a;(o||"destroy"!=a)&&(o||t.data("bs.popover",o=new n(this,i)),"string"==typeof a&&o[a]())})}var n=function(e,a){this.init("popover",e,a)};if(!e.fn.tooltip)throw new Error("Popover requires tooltip.js");n.VERSION="3.2.0",n.DEFAULTS=e.extend({},e.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),n.prototype=e.extend({},e.fn.tooltip.Constructor.prototype),n.prototype.constructor=n,n.prototype.getDefaults=function(){return n.DEFAULTS},n.prototype.setContent=function(){var e=this.tip(),a=this.getTitle(),n=this.getContent();e.find(".popover-title")[this.options.html?"html":"text"](a),e.find(".popover-content").empty()[this.options.html?"string"==typeof n?"html":"append":"text"](n),e.removeClass("fade top bottom left right in"),e.find(".popover-title").html()||e.find(".popover-title").hide()},n.prototype.hasContent=function(){return this.getTitle()||this.getContent()},n.prototype.getContent=function(){var e=this.$element,a=this.options;return e.attr("data-content")||("function"==typeof a.content?a.content.call(e[0]):a.content)},n.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")},n.prototype.tip=function(){return this.$tip||(this.$tip=e(this.options.template)),this.$tip};var t=e.fn.popover;e.fn.popover=a,e.fn.popover.Constructor=n,e.fn.popover.noConflict=function(){return e.fn.popover=t,this}}(jQuery),angular.module("ui.bootstrap",["ui.bootstrap.tpls","ui.bootstrap.transition","ui.bootstrap.collapse","ui.bootstrap.accordion","ui.bootstrap.alert","ui.bootstrap.bindHtml","ui.bootstrap.buttons","ui.bootstrap.carousel","ui.bootstrap.dateparser","ui.bootstrap.position","ui.bootstrap.datepicker","ui.bootstrap.dropdown","ui.bootstrap.modal","ui.bootstrap.pagination","ui.bootstrap.tooltip","ui.bootstrap.popover","ui.bootstrap.progressbar","ui.bootstrap.rating","ui.bootstrap.tabs","ui.bootstrap.timepicker","ui.bootstrap.typeahead"]),angular.module("ui.bootstrap.tpls",["template/accordion/accordion-group.html","template/accordion/accordion.html","template/alert/alert.html","template/carousel/carousel.html","template/carousel/slide.html","template/datepicker/datepicker.html","template/datepicker/day.html","template/datepicker/month.html","template/datepicker/popup.html","template/datepicker/year.html","template/modal/backdrop.html","template/modal/window.html","template/pagination/pager.html","template/pagination/pagination.html","template/tooltip/tooltip-html-unsafe-popup.html","template/tooltip/tooltip-popup.html","template/popover/popover.html","template/progressbar/bar.html","template/progressbar/progress.html","template/progressbar/progressbar.html","template/rating/rating.html","template/tabs/tab.html","template/tabs/tabset.html","template/timepicker/timepicker.html","template/typeahead/typeahead-match.html","template/typeahead/typeahead-popup.html"]),angular.module("ui.bootstrap.transition",[]).factory("$transition",["$q","$timeout","$rootScope",function(e,a,n){function t(e){for(var a in e)if(void 0!==i.style[a])return e[a]}var o=function(t,i,r){r=r||{};var s=e.defer(),d=o[r.animation?"animationEndEventName":"transitionEndEventName"],l=function(){n.$apply(function(){t.unbind(d,l),s.resolve(t)})};return d&&t.bind(d,l),a(function(){angular.isString(i)?t.addClass(i):angular.isFunction(i)?i(t):angular.isObject(i)&&t.css(i),d||s.resolve(t)}),s.promise.cancel=function(){d&&t.unbind(d,l),s.reject("Transition cancelled")},s.promise},i=document.createElement("trans"),r={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd",transition:"transitionend"},s={WebkitTransition:"webkitAnimationEnd",MozTransition:"animationend",OTransition:"oAnimationEnd",transition:"animationend"};return o.transitionEndEventName=t(r),o.animationEndEventName=t(s),o}]),angular.module("ui.bootstrap.collapse",["ui.bootstrap.transition"]).directive("collapse",["$transition",function(e){return{link:function(a,n,t){function o(a){function t(){l===o&&(l=void 0)}var o=e(n,a);return l&&l.cancel(),l=o,o.then(t,t),o}function i(){c?(c=!1,r()):(n.removeClass("collapse").addClass("collapsing"),o({height:n[0].scrollHeight+"px"}).then(r))}function r(){n.removeClass("collapsing"),n.addClass("collapse in"),n.css({height:"auto"})}function s(){if(c)c=!1,d(),n.css({height:0});else{n.css({height:n[0].scrollHeight+"px"});{n[0].offsetWidth}n.removeClass("collapse in").addClass("collapsing"),o({height:0}).then(d)}}function d(){n.removeClass("collapsing"),n.addClass("collapse")}var l,c=!0;a.$watch(t.collapse,function(e){e?s():i()})}}}]),angular.module("ui.bootstrap.accordion",["ui.bootstrap.collapse"]).constant("accordionConfig",{closeOthers:!0}).controller("AccordionController",["$scope","$attrs","accordionConfig",function(e,a,n){this.groups=[],this.closeOthers=function(t){var o=angular.isDefined(a.closeOthers)?e.$eval(a.closeOthers):n.closeOthers;o&&angular.forEach(this.groups,function(e){e!==t&&(e.isOpen=!1)})},this.addGroup=function(e){var a=this;this.groups.push(e),e.$on("$destroy",function(){a.removeGroup(e)})},this.removeGroup=function(e){var a=this.groups.indexOf(e);-1!==a&&this.groups.splice(a,1)}}]).directive("accordion",function(){return{restrict:"EA",controller:"AccordionController",transclude:!0,replace:!1,templateUrl:"template/accordion/accordion.html"}}).directive("accordionGroup",function(){return{require:"^accordion",restrict:"EA",transclude:!0,replace:!0,templateUrl:"template/accordion/accordion-group.html",scope:{heading:"@",isOpen:"=?",isDisabled:"=?"},controller:function(){this.setHeading=function(e){this.heading=e}},link:function(e,a,n,t){t.addGroup(e),e.$watch("isOpen",function(a){a&&t.closeOthers(e)}),e.toggleOpen=function(){e.isDisabled||(e.isOpen=!e.isOpen)}}}}).directive("accordionHeading",function(){return{restrict:"EA",transclude:!0,template:"",replace:!0,require:"^accordionGroup",link:function(e,a,n,t,o){t.setHeading(o(e,function(){}))}}}).directive("accordionTransclude",function(){return{require:"^accordionGroup",link:function(e,a,n,t){e.$watch(function(){return t[n.accordionTransclude]},function(e){e&&(a.html(""),a.append(e))})}}}),angular.module("ui.bootstrap.alert",[]).controller("AlertController",["$scope","$attrs",function(e,a){e.closeable="close"in a}]).directive("alert",function(){return{restrict:"EA",controller:"AlertController",templateUrl:"template/alert/alert.html",transclude:!0,replace:!0,scope:{type:"@",close:"&"}}}),angular.module("ui.bootstrap.bindHtml",[]).directive("bindHtmlUnsafe",function(){return function(e,a,n){a.addClass("ng-binding").data("$binding",n.bindHtmlUnsafe),e.$watch(n.bindHtmlUnsafe,function(e){a.html(e||"")})}}),angular.module("ui.bootstrap.buttons",[]).constant("buttonConfig",{activeClass:"active",toggleEvent:"click"}).controller("ButtonsController",["buttonConfig",function(e){this.activeClass=e.activeClass||"active",this.toggleEvent=e.toggleEvent||"click"}]).directive("btnRadio",function(){return{require:["btnRadio","ngModel"],controller:"ButtonsController",link:function(e,a,n,t){var o=t[0],i=t[1];i.$render=function(){a.toggleClass(o.activeClass,angular.equals(i.$modelValue,e.$eval(n.btnRadio)))},a.bind(o.toggleEvent,function(){var t=a.hasClass(o.activeClass);(!t||angular.isDefined(n.uncheckable))&&e.$apply(function(){i.$setViewValue(t?null:e.$eval(n.btnRadio)),i.$render()})})}}}).directive("btnCheckbox",function(){return{require:["btnCheckbox","ngModel"],controller:"ButtonsController",link:function(e,a,n,t){function o(){return r(n.btnCheckboxTrue,!0)}function i(){return r(n.btnCheckboxFalse,!1)}function r(a,n){var t=e.$eval(a);return angular.isDefined(t)?t:n}var s=t[0],d=t[1];d.$render=function(){a.toggleClass(s.activeClass,angular.equals(d.$modelValue,o()))},a.bind(s.toggleEvent,function(){e.$apply(function(){d.$setViewValue(a.hasClass(s.activeClass)?i():o()),d.$render()})})}}}),angular.module("ui.bootstrap.carousel",["ui.bootstrap.transition"]).controller("CarouselController",["$scope","$timeout","$transition",function(e,a,n){function t(){o();var n=+e.interval;!isNaN(n)&&n>=0&&(r=a(i,n))}function o(){r&&(a.cancel(r),r=null)}function i(){s?(e.next(),t()):e.pause()}var r,s,d=this,l=d.slides=e.slides=[],c=-1;d.currentSlide=null;var m=!1;d.select=e.select=function(o,i){function r(){if(!m){if(d.currentSlide&&angular.isString(i)&&!e.noTransition&&o.$element){o.$element.addClass(i);{o.$element[0].offsetWidth}angular.forEach(l,function(e){angular.extend(e,{direction:"",entering:!1,leaving:!1,active:!1})}),angular.extend(o,{direction:i,active:!0,entering:!0}),angular.extend(d.currentSlide||{},{direction:i,leaving:!0}),e.$currentTransition=n(o.$element,{}),function(a,n){e.$currentTransition.then(function(){s(a,n)},function(){s(a,n)})}(o,d.currentSlide)}else s(o,d.currentSlide);d.currentSlide=o,c=u,t()}}function s(a,n){angular.extend(a,{direction:"",active:!0,leaving:!1,entering:!1}),angular.extend(n||{},{direction:"",active:!1,leaving:!1,entering:!1}),e.$currentTransition=null}var u=l.indexOf(o);void 0===i&&(i=u>c?"next":"prev"),o&&o!==d.currentSlide&&(e.$currentTransition?(e.$currentTransition.cancel(),a(r)):r())},e.$on("$destroy",function(){m=!0}),d.indexOfSlide=function(e){return l.indexOf(e)},e.next=function(){var a=(c+1)%l.length;return e.$currentTransition?void 0:d.select(l[a],"next")},e.prev=function(){var a=0>c-1?l.length-1:c-1;return e.$currentTransition?void 0:d.select(l[a],"prev")},e.isActive=function(e){return d.currentSlide===e},e.$watch("interval",t),e.$on("$destroy",o),e.play=function(){s||(s=!0,t())},e.pause=function(){e.noPause||(s=!1,o())},d.addSlide=function(a,n){a.$element=n,l.push(a),1===l.length||a.active?(d.select(l[l.length-1]),1==l.length&&e.play()):a.active=!1},d.removeSlide=function(e){var a=l.indexOf(e);l.splice(a,1),l.length>0&&e.active?a>=l.length?d.select(l[a-1]):d.select(l[a]):c>a&&c--}}]).directive("carousel",[function(){return{restrict:"EA",transclude:!0,replace:!0,controller:"CarouselController",require:"carousel",templateUrl:"template/carousel/carousel.html",scope:{interval:"=",noTransition:"=",noPause:"="}}}]).directive("slide",function(){return{require:"^carousel",restrict:"EA",transclude:!0,replace:!0,templateUrl:"template/carousel/slide.html",scope:{active:"=?"},link:function(e,a,n,t){t.addSlide(e,a),e.$on("$destroy",function(){t.removeSlide(e)}),e.$watch("active",function(a){a&&t.select(e)})}}}),angular.module("ui.bootstrap.dateparser",[]).service("dateParser",["$locale","orderByFilter",function(e,a){function n(e,a,n){return 1===a&&n>28?29===n&&(e%4===0&&e%100!==0||e%400===0):3===a||5===a||8===a||10===a?31>n:!0}this.parsers={};var t={yyyy:{regex:"\\d{4}",apply:function(e){this.year=+e}},yy:{regex:"\\d{2}",apply:function(e){this.year=+e+2e3}},y:{regex:"\\d{1,4}",apply:function(e){this.year=+e}},MMMM:{regex:e.DATETIME_FORMATS.MONTH.join("|"),apply:function(a){this.month=e.DATETIME_FORMATS.MONTH.indexOf(a)}},MMM:{regex:e.DATETIME_FORMATS.SHORTMONTH.join("|"),apply:function(a){this.month=e.DATETIME_FORMATS.SHORTMONTH.indexOf(a)}},MM:{regex:"0[1-9]|1[0-2]",apply:function(e){this.month=e-1}},M:{regex:"[1-9]|1[0-2]",apply:function(e){this.month=e-1}},dd:{regex:"[0-2][0-9]{1}|3[0-1]{1}",apply:function(e){this.date=+e}},d:{regex:"[1-2]?[0-9]{1}|3[0-1]{1}",apply:function(e){this.date=+e}},EEEE:{regex:e.DATETIME_FORMATS.DAY.join("|")},EEE:{regex:e.DATETIME_FORMATS.SHORTDAY.join("|")}};this.createParser=function(e){var n=[],o=e.split("");return angular.forEach(t,function(a,t){var i=e.indexOf(t);if(i>-1){e=e.split(""),o[i]="("+a.regex+")",e[i]="$";for(var r=i+1,s=i+t.length;s>r;r++)o[r]="",e[r]="$";e=e.join(""),n.push({index:i,apply:a.apply})}}),{regex:new RegExp("^"+o.join("")+"$"),map:a(n,"index")}},this.parse=function(a,t){if(!angular.isString(a))return a;t=e.DATETIME_FORMATS[t]||t,this.parsers[t]||(this.parsers[t]=this.createParser(t));var o=this.parsers[t],i=o.regex,r=o.map,s=a.match(i);if(s&&s.length){for(var d,l={year:1900,month:0,date:1,hours:0},c=1,m=s.length;m>c;c++){var u=r[c-1];u.apply&&u.apply.call(l,s[c])}return n(l.year,l.month,l.date)&&(d=new Date(l.year,l.month,l.date,l.hours)),d}}}]),angular.module("ui.bootstrap.position",[]).factory("$position",["$document","$window",function(e,a){function n(e,n){return e.currentStyle?e.currentStyle[n]:a.getComputedStyle?a.getComputedStyle(e)[n]:e.style[n]}function t(e){return"static"===(n(e,"position")||"static")}var o=function(a){for(var n=e[0],o=a.offsetParent||n;o&&o!==n&&t(o);)o=o.offsetParent;return o||n};return{position:function(a){var n=this.offset(a),t={top:0,left:0},i=o(a[0]);i!=e[0]&&(t=this.offset(angular.element(i)),t.top+=i.clientTop-i.scrollTop,t.left+=i.clientLeft-i.scrollLeft);var r=a[0].getBoundingClientRect();return{width:r.width||a.prop("offsetWidth"),height:r.height||a.prop("offsetHeight"),top:n.top-t.top,left:n.left-t.left}},offset:function(n){var t=n[0].getBoundingClientRect();return{width:t.width||n.prop("offsetWidth"),height:t.height||n.prop("offsetHeight"),top:t.top+(a.pageYOffset||e[0].documentElement.scrollTop),left:t.left+(a.pageXOffset||e[0].documentElement.scrollLeft)}},positionElements:function(e,a,n,t){var o,i,r,s,d=n.split("-"),l=d[0],c=d[1]||"center";o=t?this.offset(e):this.position(e),i=a.prop("offsetWidth"),r=a.prop("offsetHeight");var m={center:function(){return o.left+o.width/2-i/2},left:function(){return o.left},right:function(){return o.left+o.width}},u={center:function(){return o.top+o.height/2-r/2},top:function(){return o.top},bottom:function(){return o.top+o.height}};switch(l){case"right":s={top:u[c](),left:m[l]()};break;case"left":s={top:u[c](),left:o.left-i};break;case"bottom":s={top:u[l](),left:m[c]()};break;default:s={top:o.top-r,left:m[c]()}}return s}}}]),angular.module("ui.bootstrap.datepicker",["ui.bootstrap.dateparser","ui.bootstrap.position"]).constant("datepickerConfig",{formatDay:"dd",formatMonth:"MMMM",formatYear:"yyyy",formatDayHeader:"EEE",formatDayTitle:"MMMM yyyy",formatMonthTitle:"yyyy",datepickerMode:"day",minMode:"day",maxMode:"year",showWeeks:!0,startingDay:0,yearRange:20,minDate:null,maxDate:null}).controller("DatepickerController",["$scope","$attrs","$parse","$interpolate","$timeout","$log","dateFilter","datepickerConfig",function(e,a,n,t,o,i,r,s){var d=this,l={$setViewValue:angular.noop};this.modes=["day","month","year"],angular.forEach(["formatDay","formatMonth","formatYear","formatDayHeader","formatDayTitle","formatMonthTitle","minMode","maxMode","showWeeks","startingDay","yearRange"],function(n,o){d[n]=angular.isDefined(a[n])?8>o?t(a[n])(e.$parent):e.$parent.$eval(a[n]):s[n]}),angular.forEach(["minDate","maxDate"],function(t){a[t]?e.$parent.$watch(n(a[t]),function(e){d[t]=e?new Date(e):null,d.refreshView()}):d[t]=s[t]?new Date(s[t]):null}),e.datepickerMode=e.datepickerMode||s.datepickerMode,e.uniqueId="datepicker-"+e.$id+"-"+Math.floor(1e4*Math.random()),this.activeDate=angular.isDefined(a.initDate)?e.$parent.$eval(a.initDate):new Date,e.isActive=function(a){return 0===d.compare(a.date,d.activeDate)?(e.activeDateId=a.uid,!0):!1},this.init=function(e){l=e,l.$render=function(){d.render()}},this.render=function(){if(l.$modelValue){var e=new Date(l.$modelValue),a=!isNaN(e);a?this.activeDate=e:i.error('Datepicker directive: "ng-model" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.'),l.$setValidity("date",a)}this.refreshView()},this.refreshView=function(){if(this.element){this._refreshView();var e=l.$modelValue?new Date(l.$modelValue):null;l.$setValidity("date-disabled",!e||this.element&&!this.isDisabled(e))}},this.createDateObject=function(e,a){var n=l.$modelValue?new Date(l.$modelValue):null;return{date:e,label:r(e,a),selected:n&&0===this.compare(e,n),disabled:this.isDisabled(e),current:0===this.compare(e,new Date)}},this.isDisabled=function(n){return this.minDate&&this.compare(n,this.minDate)<0||this.maxDate&&this.compare(n,this.maxDate)>0||a.dateDisabled&&e.dateDisabled({date:n,mode:e.datepickerMode})},this.split=function(e,a){for(var n=[];e.length>0;)n.push(e.splice(0,a));return n},e.select=function(a){if(e.datepickerMode===d.minMode){var n=l.$modelValue?new Date(l.$modelValue):new Date(0,0,0,0,0,0,0);n.setFullYear(a.getFullYear(),a.getMonth(),a.getDate()),l.$setViewValue(n),l.$render()}else d.activeDate=a,e.datepickerMode=d.modes[d.modes.indexOf(e.datepickerMode)-1]},e.move=function(e){var a=d.activeDate.getFullYear()+e*(d.step.years||0),n=d.activeDate.getMonth()+e*(d.step.months||0);d.activeDate.setFullYear(a,n,1),d.refreshView()},e.toggleMode=function(a){a=a||1,e.datepickerMode===d.maxMode&&1===a||e.datepickerMode===d.minMode&&-1===a||(e.datepickerMode=d.modes[d.modes.indexOf(e.datepickerMode)+a])},e.keys={13:"enter",32:"space",33:"pageup",34:"pagedown",35:"end",36:"home",37:"left",38:"up",39:"right",40:"down"};var c=function(){o(function(){d.element[0].focus()},0,!1)};e.$on("datepicker.focus",c),e.keydown=function(a){var n=e.keys[a.which];if(n&&!a.shiftKey&&!a.altKey)if(a.preventDefault(),a.stopPropagation(),"enter"===n||"space"===n){if(d.isDisabled(d.activeDate))return;e.select(d.activeDate),c()}else!a.ctrlKey||"up"!==n&&"down"!==n?(d.handleKeyDown(n,a),d.refreshView()):(e.toggleMode("up"===n?1:-1),c())}}]).directive("datepicker",function(){return{restrict:"EA",replace:!0,templateUrl:"template/datepicker/datepicker.html",scope:{datepickerMode:"=?",dateDisabled:"&"},require:["datepicker","?^ngModel"],controller:"DatepickerController",link:function(e,a,n,t){var o=t[0],i=t[1];i&&o.init(i)}}}).directive("daypicker",["dateFilter",function(e){return{restrict:"EA",replace:!0,templateUrl:"template/datepicker/day.html",require:"^datepicker",link:function(a,n,t,o){function i(e,a){return 1!==a||e%4!==0||e%100===0&&e%400!==0?d[a]:29}function r(e,a){var n=new Array(a),t=new Date(e),o=0;for(t.setHours(12);a>o;)n[o++]=new Date(t),t.setDate(t.getDate()+1);return n}function s(e){var a=new Date(e);a.setDate(a.getDate()+4-(a.getDay()||7));var n=a.getTime();return a.setMonth(0),a.setDate(1),Math.floor(Math.round((n-a)/864e5)/7)+1}a.showWeeks=o.showWeeks,o.step={months:1},o.element=n;var d=[31,28,31,30,31,30,31,31,30,31,30,31];o._refreshView=function(){var n=o.activeDate.getFullYear(),t=o.activeDate.getMonth(),i=new Date(n,t,1),d=o.startingDay-i.getDay(),l=d>0?7-d:-d,c=new Date(i);l>0&&c.setDate(-l+1);for(var m=r(c,42),u=0;42>u;u++)m[u]=angular.extend(o.createDateObject(m[u],o.formatDay),{secondary:m[u].getMonth()!==t,uid:a.uniqueId+"-"+u});a.labels=new Array(7);for(var f=0;7>f;f++)a.labels[f]={abbr:e(m[f].date,o.formatDayHeader),full:e(m[f].date,"EEEE")};if(a.title=e(o.activeDate,o.formatDayTitle),a.rows=o.split(m,7),a.showWeeks){a.weekNumbers=[];for(var h=s(a.rows[0][0].date),p=a.rows.length;a.weekNumbers.push(h++)<p;);}},o.compare=function(e,a){return new Date(e.getFullYear(),e.getMonth(),e.getDate())-new Date(a.getFullYear(),a.getMonth(),a.getDate())},o.handleKeyDown=function(e){var a=o.activeDate.getDate();if("left"===e)a-=1;else if("up"===e)a-=7;else if("right"===e)a+=1;else if("down"===e)a+=7;else if("pageup"===e||"pagedown"===e){var n=o.activeDate.getMonth()+("pageup"===e?-1:1);o.activeDate.setMonth(n,1),a=Math.min(i(o.activeDate.getFullYear(),o.activeDate.getMonth()),a)}else"home"===e?a=1:"end"===e&&(a=i(o.activeDate.getFullYear(),o.activeDate.getMonth()));o.activeDate.setDate(a)},o.refreshView()}}}]).directive("monthpicker",["dateFilter",function(e){return{restrict:"EA",replace:!0,templateUrl:"template/datepicker/month.html",require:"^datepicker",link:function(a,n,t,o){o.step={years:1},o.element=n,o._refreshView=function(){for(var n=new Array(12),t=o.activeDate.getFullYear(),i=0;12>i;i++)n[i]=angular.extend(o.createDateObject(new Date(t,i,1),o.formatMonth),{uid:a.uniqueId+"-"+i});a.title=e(o.activeDate,o.formatMonthTitle),a.rows=o.split(n,3)},o.compare=function(e,a){return new Date(e.getFullYear(),e.getMonth())-new Date(a.getFullYear(),a.getMonth())
},o.handleKeyDown=function(e){var a=o.activeDate.getMonth();if("left"===e)a-=1;else if("up"===e)a-=3;else if("right"===e)a+=1;else if("down"===e)a+=3;else if("pageup"===e||"pagedown"===e){var n=o.activeDate.getFullYear()+("pageup"===e?-1:1);o.activeDate.setFullYear(n)}else"home"===e?a=0:"end"===e&&(a=11);o.activeDate.setMonth(a)},o.refreshView()}}}]).directive("yearpicker",["dateFilter",function(){return{restrict:"EA",replace:!0,templateUrl:"template/datepicker/year.html",require:"^datepicker",link:function(e,a,n,t){function o(e){return parseInt((e-1)/i,10)*i+1}var i=t.yearRange;t.step={years:i},t.element=a,t._refreshView=function(){for(var a=new Array(i),n=0,r=o(t.activeDate.getFullYear());i>n;n++)a[n]=angular.extend(t.createDateObject(new Date(r+n,0,1),t.formatYear),{uid:e.uniqueId+"-"+n});e.title=[a[0].label,a[i-1].label].join(" - "),e.rows=t.split(a,5)},t.compare=function(e,a){return e.getFullYear()-a.getFullYear()},t.handleKeyDown=function(e){var a=t.activeDate.getFullYear();"left"===e?a-=1:"up"===e?a-=5:"right"===e?a+=1:"down"===e?a+=5:"pageup"===e||"pagedown"===e?a+=("pageup"===e?-1:1)*t.step.years:"home"===e?a=o(t.activeDate.getFullYear()):"end"===e&&(a=o(t.activeDate.getFullYear())+i-1),t.activeDate.setFullYear(a)},t.refreshView()}}}]).constant("datepickerPopupConfig",{datepickerPopup:"yyyy-MM-dd",currentText:"Today",clearText:"Clear",closeText:"Done",closeOnDateSelection:!0,appendToBody:!1,showButtonBar:!0}).directive("datepickerPopup",["$compile","$parse","$document","$position","dateFilter","dateParser","datepickerPopupConfig",function(e,a,n,t,o,i,r){return{restrict:"EA",require:"ngModel",scope:{isOpen:"=?",currentText:"@",clearText:"@",closeText:"@",dateDisabled:"&"},link:function(s,d,l,c){function m(e){return e.replace(/([A-Z])/g,function(e){return"-"+e.toLowerCase()})}function u(e){if(e){if(angular.isDate(e)&&!isNaN(e))return c.$setValidity("date",!0),e;if(angular.isString(e)){var a=i.parse(e,f)||new Date(e);return isNaN(a)?(c.$setValidity("date",!1),void 0):(c.$setValidity("date",!0),a)}return c.$setValidity("date",!1),void 0}return c.$setValidity("date",!0),null}var f,h=angular.isDefined(l.closeOnDateSelection)?s.$parent.$eval(l.closeOnDateSelection):r.closeOnDateSelection,p=angular.isDefined(l.datepickerAppendToBody)?s.$parent.$eval(l.datepickerAppendToBody):r.appendToBody;s.showButtonBar=angular.isDefined(l.showButtonBar)?s.$parent.$eval(l.showButtonBar):r.showButtonBar,s.getText=function(e){return s[e+"Text"]||r[e+"Text"]},l.$observe("datepickerPopup",function(e){f=e||r.datepickerPopup,c.$render()});var b=angular.element("<div datepicker-popup-wrap><div datepicker></div></div>");b.attr({"ng-model":"date","ng-change":"dateSelection()"});var g=angular.element(b.children()[0]);l.datepickerOptions&&angular.forEach(s.$parent.$eval(l.datepickerOptions),function(e,a){g.attr(m(a),e)}),angular.forEach(["minDate","maxDate"],function(e){l[e]&&(s.$parent.$watch(a(l[e]),function(a){s[e]=a}),g.attr(m(e),e))}),l.dateDisabled&&g.attr("date-disabled","dateDisabled({ date: date, mode: mode })"),c.$parsers.unshift(u),s.dateSelection=function(e){angular.isDefined(e)&&(s.date=e),c.$setViewValue(s.date),c.$render(),h&&(s.isOpen=!1,d[0].focus())},d.bind("input change keyup",function(){s.$apply(function(){s.date=c.$modelValue})}),c.$render=function(){var e=c.$viewValue?o(c.$viewValue,f):"";d.val(e),s.date=u(c.$modelValue)};var v=function(e){s.isOpen&&e.target!==d[0]&&s.$apply(function(){s.isOpen=!1})},y=function(e){s.keydown(e)};d.bind("keydown",y),s.keydown=function(e){27===e.which?(e.preventDefault(),e.stopPropagation(),s.close()):40!==e.which||s.isOpen||(s.isOpen=!0)},s.$watch("isOpen",function(e){e?(s.$broadcast("datepicker.focus"),s.position=p?t.offset(d):t.position(d),s.position.top=s.position.top+d.prop("offsetHeight"),n.bind("click",v)):n.unbind("click",v)}),s.select=function(e){if("today"===e){var a=new Date;angular.isDate(c.$modelValue)?(e=new Date(c.$modelValue),e.setFullYear(a.getFullYear(),a.getMonth(),a.getDate())):e=new Date(a.setHours(0,0,0,0))}s.dateSelection(e)},s.close=function(){s.isOpen=!1,d[0].focus()};var w=e(b)(s);p?n.find("body").append(w):d.after(w),s.$on("$destroy",function(){w.remove(),d.unbind("keydown",y),n.unbind("click",v)})}}}]).directive("datepickerPopupWrap",function(){return{restrict:"EA",replace:!0,transclude:!0,templateUrl:"template/datepicker/popup.html",link:function(e,a){a.bind("click",function(e){e.preventDefault(),e.stopPropagation()})}}}),angular.module("ui.bootstrap.dropdown",[]).constant("dropdownConfig",{openClass:"open"}).service("dropdownService",["$document",function(e){var a=null;this.open=function(o){a||(e.bind("click",n),e.bind("keydown",t)),a&&a!==o&&(a.isOpen=!1),a=o},this.close=function(o){a===o&&(a=null,e.unbind("click",n),e.unbind("keydown",t))};var n=function(e){e&&e.isDefaultPrevented()||a.$apply(function(){a.isOpen=!1})},t=function(e){27===e.which&&(a.focusToggleElement(),n())}}]).controller("DropdownController",["$scope","$attrs","$parse","dropdownConfig","dropdownService","$animate",function(e,a,n,t,o,i){var r,s=this,d=e.$new(),l=t.openClass,c=angular.noop,m=a.onToggle?n(a.onToggle):angular.noop;this.init=function(t){s.$element=t,a.isOpen&&(r=n(a.isOpen),c=r.assign,e.$watch(r,function(e){d.isOpen=!!e}))},this.toggle=function(e){return d.isOpen=arguments.length?!!e:!d.isOpen},this.isOpen=function(){return d.isOpen},d.focusToggleElement=function(){s.toggleElement&&s.toggleElement[0].focus()},d.$watch("isOpen",function(a,n){i[a?"addClass":"removeClass"](s.$element,l),a?(d.focusToggleElement(),o.open(d)):o.close(d),c(e,a),angular.isDefined(a)&&a!==n&&m(e,{open:!!a})}),e.$on("$locationChangeSuccess",function(){d.isOpen=!1}),e.$on("$destroy",function(){d.$destroy()})}]).directive("dropdown",function(){return{restrict:"CA",controller:"DropdownController",link:function(e,a,n,t){t.init(a)}}}).directive("dropdownToggle",function(){return{restrict:"CA",require:"?^dropdown",link:function(e,a,n,t){if(t){t.toggleElement=a;var o=function(o){o.preventDefault(),a.hasClass("disabled")||n.disabled||e.$apply(function(){t.toggle()})};a.bind("click",o),a.attr({"aria-haspopup":!0,"aria-expanded":!1}),e.$watch(t.isOpen,function(e){a.attr("aria-expanded",!!e)}),e.$on("$destroy",function(){a.unbind("click",o)})}}}}),angular.module("ui.bootstrap.modal",["ui.bootstrap.transition"]).factory("$$stackedMap",function(){return{createNew:function(){var e=[];return{add:function(a,n){e.push({key:a,value:n})},get:function(a){for(var n=0;n<e.length;n++)if(a==e[n].key)return e[n]},keys:function(){for(var a=[],n=0;n<e.length;n++)a.push(e[n].key);return a},top:function(){return e[e.length-1]},remove:function(a){for(var n=-1,t=0;t<e.length;t++)if(a==e[t].key){n=t;break}return e.splice(n,1)[0]},removeTop:function(){return e.splice(e.length-1,1)[0]},length:function(){return e.length}}}}}).directive("modalBackdrop",["$timeout",function(e){return{restrict:"EA",replace:!0,templateUrl:"template/modal/backdrop.html",link:function(a){a.animate=!1,e(function(){a.animate=!0})}}}]).directive("modalWindow",["$modalStack","$timeout",function(e,a){return{restrict:"EA",scope:{index:"@",animate:"="},replace:!0,transclude:!0,templateUrl:function(e,a){return a.templateUrl||"template/modal/window.html"},link:function(n,t,o){t.addClass(o.windowClass||""),n.size=o.size,a(function(){n.animate=!0,t[0].focus()}),n.close=function(a){var n=e.getTop();n&&n.value.backdrop&&"static"!=n.value.backdrop&&a.target===a.currentTarget&&(a.preventDefault(),a.stopPropagation(),e.dismiss(n.key,"backdrop click"))}}}}]).factory("$modalStack",["$transition","$timeout","$document","$compile","$rootScope","$$stackedMap",function(e,a,n,t,o,i){function r(){for(var e=-1,a=f.keys(),n=0;n<a.length;n++)f.get(a[n]).value.backdrop&&(e=n);return e}function s(e){var a=n.find("body").eq(0),t=f.get(e).value;f.remove(e),l(t.modalDomEl,t.modalScope,300,function(){t.modalScope.$destroy(),a.toggleClass(u,f.length()>0),d()})}function d(){if(c&&-1==r()){var e=m;l(c,m,150,function(){e.$destroy(),e=null}),c=void 0,m=void 0}}function l(n,t,o,i){function r(){r.done||(r.done=!0,n.remove(),i&&i())}t.animate=!1;var s=e.transitionEndEventName;if(s){var d=a(r,o);n.bind(s,function(){a.cancel(d),r(),t.$apply()})}else a(r,0)}var c,m,u="modal-open",f=i.createNew(),h={};return o.$watch(r,function(e){m&&(m.index=e)}),n.bind("keydown",function(e){var a;27===e.which&&(a=f.top(),a&&a.value.keyboard&&(e.preventDefault(),o.$apply(function(){h.dismiss(a.key,"escape key press")})))}),h.open=function(e,a){f.add(e,{deferred:a.deferred,modalScope:a.scope,backdrop:a.backdrop,keyboard:a.keyboard});var i=n.find("body").eq(0),s=r();s>=0&&!c&&(m=o.$new(!0),m.index=s,c=t("<div modal-backdrop></div>")(m),i.append(c));var d=angular.element("<div modal-window></div>");d.attr({"template-url":a.windowTemplateUrl,"window-class":a.windowClass,size:a.size,index:f.length()-1,animate:"animate"}).html(a.content);var l=t(d)(a.scope);f.top().value.modalDomEl=l,i.append(l),i.addClass(u)},h.close=function(e,a){var n=f.get(e).value;n&&(n.deferred.resolve(a),s(e))},h.dismiss=function(e,a){var n=f.get(e).value;n&&(n.deferred.reject(a),s(e))},h.dismissAll=function(e){for(var a=this.getTop();a;)this.dismiss(a.key,e),a=this.getTop()},h.getTop=function(){return f.top()},h}]).provider("$modal",function(){var e={options:{backdrop:!0,keyboard:!0},$get:["$injector","$rootScope","$q","$http","$templateCache","$controller","$modalStack",function(a,n,t,o,i,r,s){function d(e){return e.template?t.when(e.template):o.get(e.templateUrl,{cache:i}).then(function(e){return e.data})}function l(e){var n=[];return angular.forEach(e,function(e){(angular.isFunction(e)||angular.isArray(e))&&n.push(t.when(a.invoke(e)))}),n}var c={};return c.open=function(a){var o=t.defer(),i=t.defer(),c={result:o.promise,opened:i.promise,close:function(e){s.close(c,e)},dismiss:function(e){s.dismiss(c,e)}};if(a=angular.extend({},e.options,a),a.resolve=a.resolve||{},!a.template&&!a.templateUrl)throw new Error("One of template or templateUrl options is required.");var m=t.all([d(a)].concat(l(a.resolve)));return m.then(function(e){var t=(a.scope||n).$new();t.$close=c.close,t.$dismiss=c.dismiss;var i,d={},l=1;a.controller&&(d.$scope=t,d.$modalInstance=c,angular.forEach(a.resolve,function(a,n){d[n]=e[l++]}),i=r(a.controller,d)),s.open(c,{scope:t,deferred:o,content:e[0],backdrop:a.backdrop,keyboard:a.keyboard,windowClass:a.windowClass,windowTemplateUrl:a.windowTemplateUrl,size:a.size})},function(e){o.reject(e)}),m.then(function(){i.resolve(!0)},function(){i.reject(!1)}),c},c}]};return e}),angular.module("ui.bootstrap.pagination",[]).controller("PaginationController",["$scope","$attrs","$parse",function(e,a,n){var t=this,o={$setViewValue:angular.noop},i=a.numPages?n(a.numPages).assign:angular.noop;this.init=function(i,r){o=i,this.config=r,o.$render=function(){t.render()},a.itemsPerPage?e.$parent.$watch(n(a.itemsPerPage),function(a){t.itemsPerPage=parseInt(a,10),e.totalPages=t.calculateTotalPages()}):this.itemsPerPage=r.itemsPerPage},this.calculateTotalPages=function(){var a=this.itemsPerPage<1?1:Math.ceil(e.totalItems/this.itemsPerPage);return Math.max(a||0,1)},this.render=function(){e.page=parseInt(o.$viewValue,10)||1},e.selectPage=function(a){e.page!==a&&a>0&&a<=e.totalPages&&(o.$setViewValue(a),o.$render())},e.getText=function(a){return e[a+"Text"]||t.config[a+"Text"]},e.noPrevious=function(){return 1===e.page},e.noNext=function(){return e.page===e.totalPages},e.$watch("totalItems",function(){e.totalPages=t.calculateTotalPages()}),e.$watch("totalPages",function(a){i(e.$parent,a),e.page>a?e.selectPage(a):o.$render()})}]).constant("paginationConfig",{itemsPerPage:10,boundaryLinks:!1,directionLinks:!0,firstText:"First",previousText:"Previous",nextText:"Next",lastText:"Last",rotate:!0}).directive("pagination",["$parse","paginationConfig",function(e,a){return{restrict:"EA",scope:{totalItems:"=",firstText:"@",previousText:"@",nextText:"@",lastText:"@"},require:["pagination","?ngModel"],controller:"PaginationController",templateUrl:"template/pagination/pagination.html",replace:!0,link:function(n,t,o,i){function r(e,a,n){return{number:e,text:a,active:n}}function s(e,a){var n=[],t=1,o=a,i=angular.isDefined(c)&&a>c;i&&(m?(t=Math.max(e-Math.floor(c/2),1),o=t+c-1,o>a&&(o=a,t=o-c+1)):(t=(Math.ceil(e/c)-1)*c+1,o=Math.min(t+c-1,a)));for(var s=t;o>=s;s++){var d=r(s,s,s===e);n.push(d)}if(i&&!m){if(t>1){var l=r(t-1,"...",!1);n.unshift(l)}if(a>o){var u=r(o+1,"...",!1);n.push(u)}}return n}var d=i[0],l=i[1];if(l){var c=angular.isDefined(o.maxSize)?n.$parent.$eval(o.maxSize):a.maxSize,m=angular.isDefined(o.rotate)?n.$parent.$eval(o.rotate):a.rotate;n.boundaryLinks=angular.isDefined(o.boundaryLinks)?n.$parent.$eval(o.boundaryLinks):a.boundaryLinks,n.directionLinks=angular.isDefined(o.directionLinks)?n.$parent.$eval(o.directionLinks):a.directionLinks,d.init(l,a),o.maxSize&&n.$parent.$watch(e(o.maxSize),function(e){c=parseInt(e,10),d.render()});var u=d.render;d.render=function(){u(),n.page>0&&n.page<=n.totalPages&&(n.pages=s(n.page,n.totalPages))}}}}}]).constant("pagerConfig",{itemsPerPage:10,previousText:"« Previous",nextText:"Next »",align:!0}).directive("pager",["pagerConfig",function(e){return{restrict:"EA",scope:{totalItems:"=",previousText:"@",nextText:"@"},require:["pager","?ngModel"],controller:"PaginationController",templateUrl:"template/pagination/pager.html",replace:!0,link:function(a,n,t,o){var i=o[0],r=o[1];r&&(a.align=angular.isDefined(t.align)?a.$parent.$eval(t.align):e.align,i.init(r,e))}}}]),angular.module("ui.bootstrap.tooltip",["ui.bootstrap.position","ui.bootstrap.bindHtml"]).provider("$tooltip",function(){function e(e){var a=/[A-Z]/g,n="-";return e.replace(a,function(e,a){return(a?n:"")+e.toLowerCase()})}var a={placement:"top",animation:!0,popupDelay:0},n={mouseenter:"mouseleave",click:"click",focus:"blur"},t={};this.options=function(e){angular.extend(t,e)},this.setTriggers=function(e){angular.extend(n,e)},this.$get=["$window","$compile","$timeout","$parse","$document","$position","$interpolate",function(o,i,r,s,d,l,c){return function(o,m,u){function f(e){var a=e||h.trigger||u,t=n[a]||a;return{show:a,hide:t}}var h=angular.extend({},a,t),p=e(o),b=c.startSymbol(),g=c.endSymbol(),v="<div "+p+'-popup title="'+b+"tt_title"+g+'" content="'+b+"tt_content"+g+'" placement="'+b+"tt_placement"+g+'" animation="tt_animation" is-open="tt_isOpen"></div>';return{restrict:"EA",scope:!0,compile:function(){var e=i(v);return function(a,n,t){function i(){a.tt_isOpen?u():c()}function c(){(!C||a.$eval(t[m+"Enable"]))&&(a.tt_popupDelay?A||(A=r(p,a.tt_popupDelay,!1),A.then(function(e){e()})):p()())}function u(){a.$apply(function(){b()})}function p(){return A=null,w&&(r.cancel(w),w=null),a.tt_content?(g(),y.css({top:0,left:0,display:"block"}),k?d.find("body").append(y):n.after(y),M(),a.tt_isOpen=!0,a.$digest(),M):angular.noop}function b(){a.tt_isOpen=!1,r.cancel(A),A=null,a.tt_animation?w||(w=r(v,500)):v()}function g(){y&&v(),y=e(a,function(){}),a.$digest()}function v(){w=null,y&&(y.remove(),y=null)}var y,w,A,k=angular.isDefined(h.appendToBody)?h.appendToBody:!1,S=f(void 0),C=angular.isDefined(t[m+"Enable"]),M=function(){var e=l.positionElements(n,y,a.tt_placement,k);e.top+="px",e.left+="px",y.css(e)};a.tt_isOpen=!1,t.$observe(o,function(e){a.tt_content=e,!e&&a.tt_isOpen&&b()}),t.$observe(m+"Title",function(e){a.tt_title=e}),t.$observe(m+"Placement",function(e){a.tt_placement=angular.isDefined(e)?e:h.placement}),t.$observe(m+"PopupDelay",function(e){var n=parseInt(e,10);a.tt_popupDelay=isNaN(n)?h.popupDelay:n});var T=function(){n.unbind(S.show,c),n.unbind(S.hide,u)};t.$observe(m+"Trigger",function(e){T(),S=f(e),S.show===S.hide?n.bind(S.show,i):(n.bind(S.show,c),n.bind(S.hide,u))});var B=a.$eval(t[m+"Animation"]);a.tt_animation=angular.isDefined(B)?!!B:h.animation,t.$observe(m+"AppendToBody",function(e){k=angular.isDefined(e)?s(e)(a):k}),k&&a.$on("$locationChangeSuccess",function(){a.tt_isOpen&&b()}),a.$on("$destroy",function(){r.cancel(w),r.cancel(A),T(),v()})}}}}}]}).directive("tooltipPopup",function(){return{restrict:"EA",replace:!0,scope:{content:"@",placement:"@",animation:"&",isOpen:"&"},templateUrl:"template/tooltip/tooltip-popup.html"}}).directive("tooltip",["$tooltip",function(e){return e("tooltip","tooltip","mouseenter")}]).directive("tooltipHtmlUnsafePopup",function(){return{restrict:"EA",replace:!0,scope:{content:"@",placement:"@",animation:"&",isOpen:"&"},templateUrl:"template/tooltip/tooltip-html-unsafe-popup.html"}}).directive("tooltipHtmlUnsafe",["$tooltip",function(e){return e("tooltipHtmlUnsafe","tooltip","mouseenter")}]),angular.module("ui.bootstrap.popover",["ui.bootstrap.tooltip"]).directive("popoverPopup",function(){return{restrict:"EA",replace:!0,scope:{title:"@",content:"@",placement:"@",animation:"&",isOpen:"&"},templateUrl:"template/popover/popover.html"}}).directive("popover",["$tooltip",function(e){return e("popover","popover","click")}]),angular.module("ui.bootstrap.progressbar",[]).constant("progressConfig",{animate:!0,max:100}).controller("ProgressController",["$scope","$attrs","progressConfig",function(e,a,n){var t=this,o=angular.isDefined(a.animate)?e.$parent.$eval(a.animate):n.animate;this.bars=[],e.max=angular.isDefined(a.max)?e.$parent.$eval(a.max):n.max,this.addBar=function(a,n){o||n.css({transition:"none"}),this.bars.push(a),a.$watch("value",function(n){a.percent=+(100*n/e.max).toFixed(2)}),a.$on("$destroy",function(){n=null,t.removeBar(a)})},this.removeBar=function(e){this.bars.splice(this.bars.indexOf(e),1)}}]).directive("progress",function(){return{restrict:"EA",replace:!0,transclude:!0,controller:"ProgressController",require:"progress",scope:{},templateUrl:"template/progressbar/progress.html"}}).directive("bar",function(){return{restrict:"EA",replace:!0,transclude:!0,require:"^progress",scope:{value:"=",type:"@"},templateUrl:"template/progressbar/bar.html",link:function(e,a,n,t){t.addBar(e,a)}}}).directive("progressbar",function(){return{restrict:"EA",replace:!0,transclude:!0,controller:"ProgressController",scope:{value:"=",type:"@"},templateUrl:"template/progressbar/progressbar.html",link:function(e,a,n,t){t.addBar(e,angular.element(a.children()[0]))}}}),angular.module("ui.bootstrap.rating",[]).constant("ratingConfig",{max:5,stateOn:null,stateOff:null}).controller("RatingController",["$scope","$attrs","ratingConfig",function(e,a,n){var t={$setViewValue:angular.noop};this.init=function(o){t=o,t.$render=this.render,this.stateOn=angular.isDefined(a.stateOn)?e.$parent.$eval(a.stateOn):n.stateOn,this.stateOff=angular.isDefined(a.stateOff)?e.$parent.$eval(a.stateOff):n.stateOff;var i=angular.isDefined(a.ratingStates)?e.$parent.$eval(a.ratingStates):new Array(angular.isDefined(a.max)?e.$parent.$eval(a.max):n.max);e.range=this.buildTemplateObjects(i)},this.buildTemplateObjects=function(e){for(var a=0,n=e.length;n>a;a++)e[a]=angular.extend({index:a},{stateOn:this.stateOn,stateOff:this.stateOff},e[a]);return e},e.rate=function(a){!e.readonly&&a>=0&&a<=e.range.length&&(t.$setViewValue(a),t.$render())},e.enter=function(a){e.readonly||(e.value=a),e.onHover({value:a})},e.reset=function(){e.value=t.$viewValue,e.onLeave()},e.onKeydown=function(a){/(37|38|39|40)/.test(a.which)&&(a.preventDefault(),a.stopPropagation(),e.rate(e.value+(38===a.which||39===a.which?1:-1)))},this.render=function(){e.value=t.$viewValue}}]).directive("rating",function(){return{restrict:"EA",require:["rating","ngModel"],scope:{readonly:"=?",onHover:"&",onLeave:"&"},controller:"RatingController",templateUrl:"template/rating/rating.html",replace:!0,link:function(e,a,n,t){var o=t[0],i=t[1];i&&o.init(i)}}}),angular.module("ui.bootstrap.tabs",[]).controller("TabsetController",["$scope",function(e){var a=this,n=a.tabs=e.tabs=[];a.select=function(e){angular.forEach(n,function(a){a.active&&a!==e&&(a.active=!1,a.onDeselect())}),e.active=!0,e.onSelect()},a.addTab=function(e){n.push(e),1===n.length?e.active=!0:e.active&&a.select(e)},a.removeTab=function(e){var t=n.indexOf(e);if(e.active&&n.length>1){var o=t==n.length-1?t-1:t+1;a.select(n[o])}n.splice(t,1)}}]).directive("tabset",function(){return{restrict:"EA",transclude:!0,replace:!0,scope:{type:"@"},controller:"TabsetController",templateUrl:"template/tabs/tabset.html",link:function(e,a,n){e.vertical=angular.isDefined(n.vertical)?e.$parent.$eval(n.vertical):!1,e.justified=angular.isDefined(n.justified)?e.$parent.$eval(n.justified):!1}}}).directive("tab",["$parse",function(e){return{require:"^tabset",restrict:"EA",replace:!0,templateUrl:"template/tabs/tab.html",transclude:!0,scope:{active:"=?",heading:"@",onSelect:"&select",onDeselect:"&deselect"},controller:function(){},compile:function(a,n,t){return function(a,n,o,i){a.$watch("active",function(e){e&&i.select(a)}),a.disabled=!1,o.disabled&&a.$parent.$watch(e(o.disabled),function(e){a.disabled=!!e}),a.select=function(){a.disabled||(a.active=!0)},i.addTab(a),a.$on("$destroy",function(){i.removeTab(a)}),a.$transcludeFn=t}}}}]).directive("tabHeadingTransclude",[function(){return{restrict:"A",require:"^tab",link:function(e,a){e.$watch("headingElement",function(e){e&&(a.html(""),a.append(e))})}}}]).directive("tabContentTransclude",function(){function e(e){return e.tagName&&(e.hasAttribute("tab-heading")||e.hasAttribute("data-tab-heading")||"tab-heading"===e.tagName.toLowerCase()||"data-tab-heading"===e.tagName.toLowerCase())}return{restrict:"A",require:"^tabset",link:function(a,n,t){var o=a.$eval(t.tabContentTransclude);o.$transcludeFn(o.$parent,function(a){angular.forEach(a,function(a){e(a)?o.headingElement=a:n.append(a)})})}}}),angular.module("ui.bootstrap.timepicker",[]).constant("timepickerConfig",{hourStep:1,minuteStep:1,showMeridian:!0,meridians:null,readonlyInput:!1,mousewheel:!0}).controller("TimepickerController",["$scope","$attrs","$parse","$log","$locale","timepickerConfig",function(e,a,n,t,o,i){function r(){var a=parseInt(e.hours,10),n=e.showMeridian?a>0&&13>a:a>=0&&24>a;return n?(e.showMeridian&&(12===a&&(a=0),e.meridian===p[1]&&(a+=12)),a):void 0}function s(){var a=parseInt(e.minutes,10);return a>=0&&60>a?a:void 0}function d(e){return angular.isDefined(e)&&e.toString().length<2?"0"+e:e}function l(e){c(),h.$setViewValue(new Date(f)),m(e)}function c(){h.$setValidity("time",!0),e.invalidHours=!1,e.invalidMinutes=!1}function m(a){var n=f.getHours(),t=f.getMinutes();e.showMeridian&&(n=0===n||12===n?12:n%12),e.hours="h"===a?n:d(n),e.minutes="m"===a?t:d(t),e.meridian=f.getHours()<12?p[0]:p[1]}function u(e){var a=new Date(f.getTime()+6e4*e);f.setHours(a.getHours(),a.getMinutes()),l()}var f=new Date,h={$setViewValue:angular.noop},p=angular.isDefined(a.meridians)?e.$parent.$eval(a.meridians):i.meridians||o.DATETIME_FORMATS.AMPMS;this.init=function(n,t){h=n,h.$render=this.render;var o=t.eq(0),r=t.eq(1),s=angular.isDefined(a.mousewheel)?e.$parent.$eval(a.mousewheel):i.mousewheel;s&&this.setupMousewheelEvents(o,r),e.readonlyInput=angular.isDefined(a.readonlyInput)?e.$parent.$eval(a.readonlyInput):i.readonlyInput,this.setupInputEvents(o,r)};var b=i.hourStep;a.hourStep&&e.$parent.$watch(n(a.hourStep),function(e){b=parseInt(e,10)});var g=i.minuteStep;a.minuteStep&&e.$parent.$watch(n(a.minuteStep),function(e){g=parseInt(e,10)}),e.showMeridian=i.showMeridian,a.showMeridian&&e.$parent.$watch(n(a.showMeridian),function(a){if(e.showMeridian=!!a,h.$error.time){var n=r(),t=s();angular.isDefined(n)&&angular.isDefined(t)&&(f.setHours(n),l())}else m()}),this.setupMousewheelEvents=function(a,n){var t=function(e){e.originalEvent&&(e=e.originalEvent);var a=e.wheelDelta?e.wheelDelta:-e.deltaY;return e.detail||a>0};a.bind("mousewheel wheel",function(a){e.$apply(t(a)?e.incrementHours():e.decrementHours()),a.preventDefault()}),n.bind("mousewheel wheel",function(a){e.$apply(t(a)?e.incrementMinutes():e.decrementMinutes()),a.preventDefault()})},this.setupInputEvents=function(a,n){if(e.readonlyInput)return e.updateHours=angular.noop,e.updateMinutes=angular.noop,void 0;var t=function(a,n){h.$setViewValue(null),h.$setValidity("time",!1),angular.isDefined(a)&&(e.invalidHours=a),angular.isDefined(n)&&(e.invalidMinutes=n)};e.updateHours=function(){var e=r();angular.isDefined(e)?(f.setHours(e),l("h")):t(!0)},a.bind("blur",function(){!e.invalidHours&&e.hours<10&&e.$apply(function(){e.hours=d(e.hours)})}),e.updateMinutes=function(){var e=s();angular.isDefined(e)?(f.setMinutes(e),l("m")):t(void 0,!0)},n.bind("blur",function(){!e.invalidMinutes&&e.minutes<10&&e.$apply(function(){e.minutes=d(e.minutes)})})},this.render=function(){var e=h.$modelValue?new Date(h.$modelValue):null;isNaN(e)?(h.$setValidity("time",!1),t.error('Timepicker directive: "ng-model" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.')):(e&&(f=e),c(),m())},e.incrementHours=function(){u(60*b)},e.decrementHours=function(){u(60*-b)},e.incrementMinutes=function(){u(g)},e.decrementMinutes=function(){u(-g)},e.toggleMeridian=function(){u(720*(f.getHours()<12?1:-1))}}]).directive("timepicker",function(){return{restrict:"EA",require:["timepicker","?^ngModel"],controller:"TimepickerController",replace:!0,scope:{},templateUrl:"template/timepicker/timepicker.html",link:function(e,a,n,t){var o=t[0],i=t[1];i&&o.init(i,a.find("input"))}}}),angular.module("ui.bootstrap.typeahead",["ui.bootstrap.position","ui.bootstrap.bindHtml"]).factory("typeaheadParser",["$parse",function(e){var a=/^\s*(.*?)(?:\s+as\s+(.*?))?\s+for\s+(?:([\$\w][\$\w\d]*))\s+in\s+(.*)$/;return{parse:function(n){var t=n.match(a);if(!t)throw new Error('Expected typeahead specification in form of "_modelValue_ (as _label_)? for _item_ in _collection_" but got "'+n+'".');return{itemName:t[3],source:e(t[4]),viewMapper:e(t[2]||t[1]),modelMapper:e(t[1])}}}}]).directive("typeahead",["$compile","$parse","$q","$timeout","$document","$position","typeaheadParser",function(e,a,n,t,o,i,r){var s=[9,13,27,38,40];return{require:"ngModel",link:function(d,l,c,m){var u,f=d.$eval(c.typeaheadMinLength)||1,h=d.$eval(c.typeaheadWaitMs)||0,p=d.$eval(c.typeaheadEditable)!==!1,b=a(c.typeaheadLoading).assign||angular.noop,g=a(c.typeaheadOnSelect),v=c.typeaheadInputFormatter?a(c.typeaheadInputFormatter):void 0,y=c.typeaheadAppendToBody?d.$eval(c.typeaheadAppendToBody):!1,w=a(c.ngModel).assign,A=r.parse(c.typeahead),k=d.$new();d.$on("$destroy",function(){k.$destroy()});var S="typeahead-"+k.$id+"-"+Math.floor(1e4*Math.random());l.attr({"aria-autocomplete":"list","aria-expanded":!1,"aria-owns":S});var C=angular.element("<div typeahead-popup></div>");C.attr({id:S,matches:"matches",active:"activeIdx",select:"select(activeIdx)",query:"query",position:"position"}),angular.isDefined(c.typeaheadTemplateUrl)&&C.attr("template-url",c.typeaheadTemplateUrl);var M=function(){k.matches=[],k.activeIdx=-1,l.attr("aria-expanded",!1)},T=function(e){return S+"-option-"+e};k.$watch("activeIdx",function(e){0>e?l.removeAttr("aria-activedescendant"):l.attr("aria-activedescendant",T(e))});var B=function(e){var a={$viewValue:e};b(d,!0),n.when(A.source(d,a)).then(function(n){var t=e===m.$viewValue;if(t&&u)if(n.length>0){k.activeIdx=0,k.matches.length=0;for(var o=0;o<n.length;o++)a[A.itemName]=n[o],k.matches.push({id:T(o),label:A.viewMapper(k,a),model:n[o]});k.query=e,k.position=y?i.offset(l):i.position(l),k.position.top=k.position.top+l.prop("offsetHeight"),l.attr("aria-expanded",!0)}else M();t&&b(d,!1)},function(){M(),b(d,!1)})};M(),k.query=void 0;var L;m.$parsers.unshift(function(e){return u=!0,e&&e.length>=f?h>0?(L&&t.cancel(L),L=t(function(){B(e)},h)):B(e):(b(d,!1),M()),p?e:e?(m.$setValidity("editable",!1),void 0):(m.$setValidity("editable",!0),e)}),m.$formatters.push(function(e){var a,n,t={};return v?(t.$model=e,v(d,t)):(t[A.itemName]=e,a=A.viewMapper(d,t),t[A.itemName]=void 0,n=A.viewMapper(d,t),a!==n?a:e)}),k.select=function(e){var a,n,o={};o[A.itemName]=n=k.matches[e].model,a=A.modelMapper(d,o),w(d,a),m.$setValidity("editable",!0),g(d,{$item:n,$model:a,$label:A.viewMapper(d,o)}),M(),t(function(){l[0].focus()},0,!1)},l.bind("keydown",function(e){0!==k.matches.length&&-1!==s.indexOf(e.which)&&(e.preventDefault(),40===e.which?(k.activeIdx=(k.activeIdx+1)%k.matches.length,k.$digest()):38===e.which?(k.activeIdx=(k.activeIdx?k.activeIdx:k.matches.length)-1,k.$digest()):13===e.which||9===e.which?k.$apply(function(){k.select(k.activeIdx)}):27===e.which&&(e.stopPropagation(),M(),k.$digest()))}),l.bind("blur",function(){u=!1});var P=function(e){l[0]!==e.target&&(M(),k.$digest())};o.bind("click",P),d.$on("$destroy",function(){o.unbind("click",P)});var x=e(C)(k);y?o.find("body").append(x):l.after(x)}}}]).directive("typeaheadPopup",function(){return{restrict:"EA",scope:{matches:"=",query:"=",active:"=",position:"=",select:"&"},replace:!0,templateUrl:"template/typeahead/typeahead-popup.html",link:function(e,a,n){e.templateUrl=n.templateUrl,e.isOpen=function(){return e.matches.length>0},e.isActive=function(a){return e.active==a},e.selectActive=function(a){e.active=a},e.selectMatch=function(a){e.select({activeIdx:a})}}}}).directive("typeaheadMatch",["$http","$templateCache","$compile","$parse",function(e,a,n,t){return{restrict:"EA",scope:{index:"=",match:"=",query:"="},link:function(o,i,r){var s=t(r.templateUrl)(o.$parent)||"template/typeahead/typeahead-match.html";e.get(s,{cache:a}).success(function(e){i.replaceWith(n(e.trim())(o))})}}}]).filter("typeaheadHighlight",function(){function e(e){return e.replace(/([.?*+^$[\]\\(){}|-])/g,"\\$1")}return function(a,n){return n?(""+a).replace(new RegExp(e(n),"gi"),"<strong>$&</strong>"):a}}),angular.module("template/accordion/accordion-group.html",[]).run(["$templateCache",function(e){e.put("template/accordion/accordion-group.html",'<div class="panel panel-default">\n  <div class="panel-heading">\n    <h4 class="panel-title">\n      <a class="accordion-toggle" ng-click="toggleOpen()" accordion-transclude="heading"><span ng-class="{\'text-muted\': isDisabled}">{{heading}}</span></a>\n    </h4>\n  </div>\n  <div class="panel-collapse" collapse="!isOpen">\n	  <div class="panel-body" ng-transclude></div>\n  </div>\n</div>')}]),angular.module("template/accordion/accordion.html",[]).run(["$templateCache",function(e){e.put("template/accordion/accordion.html",'<div class="panel-group" ng-transclude></div>')}]),angular.module("template/alert/alert.html",[]).run(["$templateCache",function(e){e.put("template/alert/alert.html",'<div class="alert" ng-class="{\'alert-{{type || \'warning\'}}\': true, \'alert-dismissable\': closeable}" role="alert">\n    <button ng-show="closeable" type="button" class="close" ng-click="close()">\n        <span aria-hidden="true">&times;</span>\n        <span class="sr-only">Close</span>\n    </button>\n    <div ng-transclude></div>\n</div>\n')}]),angular.module("template/carousel/carousel.html",[]).run(["$templateCache",function(e){e.put("template/carousel/carousel.html",'<div ng-mouseenter="pause()" ng-mouseleave="play()" class="carousel" ng-swipe-right="prev()" ng-swipe-left="next()">\n    <ol class="carousel-indicators" ng-show="slides.length > 1">\n        <li ng-repeat="slide in slides track by $index" ng-class="{active: isActive(slide)}" ng-click="select(slide)"></li>\n    </ol>\n    <div class="carousel-inner" ng-transclude></div>\n    <a class="left carousel-control" ng-click="prev()" ng-show="slides.length > 1"><span class="glyphicon glyphicon-chevron-left"></span></a>\n    <a class="right carousel-control" ng-click="next()" ng-show="slides.length > 1"><span class="glyphicon glyphicon-chevron-right"></span></a>\n</div>\n')}]),angular.module("template/carousel/slide.html",[]).run(["$templateCache",function(e){e.put("template/carousel/slide.html","<div ng-class=\"{\n    'active': leaving || (active && !entering),\n    'prev': (next || active) && direction=='prev',\n    'next': (next || active) && direction=='next',\n    'right': direction=='prev',\n    'left': direction=='next'\n  }\" class=\"item text-center\" ng-transclude></div>\n")}]),angular.module("template/datepicker/datepicker.html",[]).run(["$templateCache",function(e){e.put("template/datepicker/datepicker.html",'<div ng-switch="datepickerMode" role="application" ng-keydown="keydown($event)">\n  <daypicker ng-switch-when="day" tabindex="0"></daypicker>\n  <monthpicker ng-switch-when="month" tabindex="0"></monthpicker>\n  <yearpicker ng-switch-when="year" tabindex="0"></yearpicker>\n</div>')
}]),angular.module("template/datepicker/day.html",[]).run(["$templateCache",function(e){e.put("template/datepicker/day.html",'<table role="grid" aria-labelledby="{{uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th colspan="{{5 + showWeeks}}"><button id="{{uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n    <tr>\n      <th ng-show="showWeeks" class="text-center"></th>\n      <th ng-repeat="label in labels track by $index" class="text-center"><small aria-label="{{label.full}}">{{label.abbr}}</small></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-show="showWeeks" class="text-center h6"><em>{{ weekNumbers[$index] }}</em></td>\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{dt.uid}}" aria-disabled="{{!!dt.disabled}}">\n        <button type="button" style="width:100%;" class="btn btn-default btn-sm" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="{\'text-muted\': dt.secondary, \'text-info\': dt.current}">{{dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n')}]),angular.module("template/datepicker/month.html",[]).run(["$templateCache",function(e){e.put("template/datepicker/month.html",'<table role="grid" aria-labelledby="{{uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th><button id="{{uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{dt.uid}}" aria-disabled="{{!!dt.disabled}}">\n        <button type="button" style="width:100%;" class="btn btn-default" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="{\'text-info\': dt.current}">{{dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n')}]),angular.module("template/datepicker/popup.html",[]).run(["$templateCache",function(e){e.put("template/datepicker/popup.html",'<ul class="dropdown-menu" ng-style="{display: (isOpen && \'block\') || \'none\', top: position.top+\'px\', left: position.left+\'px\'}" ng-keydown="keydown($event)">\n	<li ng-transclude></li>\n	<li ng-if="showButtonBar" style="padding:10px 9px 2px">\n		<span class="btn-group">\n			<button type="button" class="btn btn-sm btn-info" ng-click="select(\'today\')">{{ getText(\'current\') }}</button>\n			<button type="button" class="btn btn-sm btn-danger" ng-click="select(null)">{{ getText(\'clear\') }}</button>\n		</span>\n		<button type="button" class="btn btn-sm btn-success pull-right" ng-click="close()">{{ getText(\'close\') }}</button>\n	</li>\n</ul>\n')}]),angular.module("template/datepicker/year.html",[]).run(["$templateCache",function(e){e.put("template/datepicker/year.html",'<table role="grid" aria-labelledby="{{uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th colspan="3"><button id="{{uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{dt.uid}}" aria-disabled="{{!!dt.disabled}}">\n        <button type="button" style="width:100%;" class="btn btn-default" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="{\'text-info\': dt.current}">{{dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n')}]),angular.module("template/modal/backdrop.html",[]).run(["$templateCache",function(e){e.put("template/modal/backdrop.html",'<div class="modal-backdrop fade"\n     ng-class="{in: animate}"\n     ng-style="{\'z-index\': 1040 + (index && 1 || 0) + index*10}"\n></div>\n')}]),angular.module("template/modal/window.html",[]).run(["$templateCache",function(e){e.put("template/modal/window.html",'<div tabindex="-1" role="dialog" class="modal fade" ng-class="{in: animate}" ng-style="{\'z-index\': 1050 + index*10, display: \'block\'}" ng-click="close($event)">\n    <div class="modal-dialog" ng-class="{\'modal-sm\': size == \'sm\', \'modal-lg\': size == \'lg\'}"><div class="modal-content" ng-transclude></div></div>\n</div>')}]),angular.module("template/pagination/pager.html",[]).run(["$templateCache",function(e){e.put("template/pagination/pager.html",'<ul class="pager">\n  <li ng-class="{disabled: noPrevious(), previous: align}"><a href ng-click="selectPage(page - 1)">{{getText(\'previous\')}}</a></li>\n  <li ng-class="{disabled: noNext(), next: align}"><a href ng-click="selectPage(page + 1)">{{getText(\'next\')}}</a></li>\n</ul>')}]),angular.module("template/pagination/pagination.html",[]).run(["$templateCache",function(e){e.put("template/pagination/pagination.html",'<ul class="pagination">\n  <li ng-if="boundaryLinks" ng-class="{disabled: noPrevious()}"><a href ng-click="selectPage(1)">{{getText(\'first\')}}</a></li>\n  <li ng-if="directionLinks" ng-class="{disabled: noPrevious()}"><a href ng-click="selectPage(page - 1)">{{getText(\'previous\')}}</a></li>\n  <li ng-repeat="page in pages track by $index" ng-class="{active: page.active}"><a href ng-click="selectPage(page.number)">{{page.text}}</a></li>\n  <li ng-if="directionLinks" ng-class="{disabled: noNext()}"><a href ng-click="selectPage(page + 1)">{{getText(\'next\')}}</a></li>\n  <li ng-if="boundaryLinks" ng-class="{disabled: noNext()}"><a href ng-click="selectPage(totalPages)">{{getText(\'last\')}}</a></li>\n</ul>')}]),angular.module("template/tooltip/tooltip-html-unsafe-popup.html",[]).run(["$templateCache",function(e){e.put("template/tooltip/tooltip-html-unsafe-popup.html",'<div class="tooltip {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" bind-html-unsafe="content"></div>\n</div>\n')}]),angular.module("template/tooltip/tooltip-popup.html",[]).run(["$templateCache",function(e){e.put("template/tooltip/tooltip-popup.html",'<div class="tooltip {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" ng-bind="content"></div>\n</div>\n')}]),angular.module("template/popover/popover.html",[]).run(["$templateCache",function(e){e.put("template/popover/popover.html",'<div class="popover {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">\n  <div class="arrow"></div>\n\n  <div class="popover-inner">\n      <h3 class="popover-title" ng-bind="title" ng-show="title"></h3>\n      <div class="popover-content" ng-bind="content"></div>\n  </div>\n</div>\n')}]),angular.module("template/progressbar/bar.html",[]).run(["$templateCache",function(e){e.put("template/progressbar/bar.html",'<div class="progress-bar" ng-class="type && \'progress-bar-\' + type" role="progressbar" aria-valuenow="{{value}}" aria-valuemin="0" aria-valuemax="{{max}}" ng-style="{width: percent + \'%\'}" aria-valuetext="{{percent | number:0}}%" ng-transclude></div>')}]),angular.module("template/progressbar/progress.html",[]).run(["$templateCache",function(e){e.put("template/progressbar/progress.html",'<div class="progress" ng-transclude></div>')}]),angular.module("template/progressbar/progressbar.html",[]).run(["$templateCache",function(e){e.put("template/progressbar/progressbar.html",'<div class="progress">\n  <div class="progress-bar" ng-class="type && \'progress-bar-\' + type" role="progressbar" aria-valuenow="{{value}}" aria-valuemin="0" aria-valuemax="{{max}}" ng-style="{width: percent + \'%\'}" aria-valuetext="{{percent | number:0}}%" ng-transclude></div>\n</div>')}]),angular.module("template/rating/rating.html",[]).run(["$templateCache",function(e){e.put("template/rating/rating.html",'<span ng-mouseleave="reset()" ng-keydown="onKeydown($event)" tabindex="0" role="slider" aria-valuemin="0" aria-valuemax="{{range.length}}" aria-valuenow="{{value}}">\n    <i ng-repeat="r in range track by $index" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon" ng-class="$index < value && (r.stateOn || \'glyphicon-star\') || (r.stateOff || \'glyphicon-star-empty\')">\n        <span class="sr-only">({{ $index < value ? \'*\' : \' \' }})</span>\n    </i>\n</span>')}]),angular.module("template/tabs/tab.html",[]).run(["$templateCache",function(e){e.put("template/tabs/tab.html",'<li ng-class="{active: active, disabled: disabled}">\n  <a ng-click="select()" tab-heading-transclude>{{heading}}</a>\n</li>\n')}]),angular.module("template/tabs/tabset-titles.html",[]).run(["$templateCache",function(e){e.put("template/tabs/tabset-titles.html","<ul class=\"nav {{type && 'nav-' + type}}\" ng-class=\"{'nav-stacked': vertical}\">\n</ul>\n")}]),angular.module("template/tabs/tabset.html",[]).run(["$templateCache",function(e){e.put("template/tabs/tabset.html",'\n<div>\n  <ul class="nav nav-{{type || \'tabs\'}}" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude></ul>\n  <div class="tab-content">\n    <div class="tab-pane" \n         ng-repeat="tab in tabs" \n         ng-class="{active: tab.active}"\n         tab-content-transclude="tab">\n    </div>\n  </div>\n</div>\n')}]),angular.module("template/timepicker/timepicker.html",[]).run(["$templateCache",function(e){e.put("template/timepicker/timepicker.html",'<table>\n	<tbody>\n		<tr class="text-center">\n			<td><a ng-click="incrementHours()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n			<td>&nbsp;</td>\n			<td><a ng-click="incrementMinutes()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n			<td ng-show="showMeridian"></td>\n		</tr>\n		<tr>\n			<td style="width:50px;" class="form-group" ng-class="{\'has-error\': invalidHours}">\n				<input type="text" ng-model="hours" ng-change="updateHours()" class="form-control text-center" ng-mousewheel="incrementHours()" ng-readonly="readonlyInput" maxlength="2">\n			</td>\n			<td>:</td>\n			<td style="width:50px;" class="form-group" ng-class="{\'has-error\': invalidMinutes}">\n				<input type="text" ng-model="minutes" ng-change="updateMinutes()" class="form-control text-center" ng-readonly="readonlyInput" maxlength="2">\n			</td>\n			<td ng-show="showMeridian"><button type="button" class="btn btn-default text-center" ng-click="toggleMeridian()">{{meridian}}</button></td>\n		</tr>\n		<tr class="text-center">\n			<td><a ng-click="decrementHours()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n			<td>&nbsp;</td>\n			<td><a ng-click="decrementMinutes()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n			<td ng-show="showMeridian"></td>\n		</tr>\n	</tbody>\n</table>\n')}]),angular.module("template/typeahead/typeahead-match.html",[]).run(["$templateCache",function(e){e.put("template/typeahead/typeahead-match.html",'<a tabindex="-1" bind-html-unsafe="match.label | typeaheadHighlight:query"></a>')}]),angular.module("template/typeahead/typeahead-popup.html",[]).run(["$templateCache",function(e){e.put("template/typeahead/typeahead-popup.html",'<ul class="dropdown-menu" ng-if="isOpen()" ng-style="{top: position.top+\'px\', left: position.left+\'px\'}" style="display: block;" role="listbox" aria-hidden="{{!isOpen()}}">\n    <li ng-repeat="match in matches track by $index" ng-class="{active: isActive($index) }" ng-mouseenter="selectActive($index)" ng-click="selectMatch($index)" role="option" id="{{match.id}}">\n        <div typeahead-match index="$index" match="match" query="query" template-url="templateUrl"></div>\n    </li>\n</ul>')}]),!function(e){"use strict";e.expr[":"].icontains=function(a,n,t){return e(a).text().toUpperCase().indexOf(t[3].toUpperCase())>=0};var a=function(n,t,o){o&&(o.stopPropagation(),o.preventDefault()),this.$element=e(n),this.$newElement=null,this.$button=null,this.$menu=null,this.$lis=null,this.options=e.extend({},e.fn.selectpicker.defaults,this.$element.data(),"object"==typeof t&&t),null===this.options.title&&(this.options.title=this.$element.attr("title")),this.val=a.prototype.val,this.render=a.prototype.render,this.refresh=a.prototype.refresh,this.setStyle=a.prototype.setStyle,this.selectAll=a.prototype.selectAll,this.deselectAll=a.prototype.deselectAll,this.init()};a.prototype={constructor:a,init:function(){var a=this,n=this.$element.attr("id");this.$element.hide(),this.multiple=this.$element.prop("multiple"),this.autofocus=this.$element.prop("autofocus"),this.$newElement=this.createView(),this.$element.after(this.$newElement),this.$menu=this.$newElement.find("> .dropdown-menu"),this.$button=this.$newElement.find("> button"),this.$searchbox=this.$newElement.find("input"),void 0!==n&&(this.$button.attr("data-id",n),e('label[for="'+n+'"]').click(function(e){e.preventDefault(),a.$button.focus()})),this.checkDisabled(),this.clickListener(),this.options.liveSearch&&this.liveSearchListener(),this.render(),this.liHeight(),this.setStyle(),this.setWidth(),this.options.container&&this.selectPosition(),this.$menu.data("this",this),this.$newElement.data("this",this)},createDropdown:function(){var a=this.multiple?" show-tick":"",n=this.$element.parent().hasClass("input-group")?" input-group-btn":"",t=this.autofocus?" autofocus":"",o=this.options.header?'<div class="popover-title"><button type="button" class="close" aria-hidden="true">&times;</button>'+this.options.header+"</div>":"",i=this.options.liveSearch?'<div class="bootstrap-select-searchbox"><input type="text" class="input-block-level form-control" autocomplete="off" /></div>':"",r=this.options.actionsBox?'<div class="bs-actionsbox"><div class="btn-group btn-block"><button class="actions-btn bs-select-all btn btn-sm btn-default">Select All</button><button class="actions-btn bs-deselect-all btn btn-sm btn-default">Deselect All</button></div></div>':"",s='<div class="btn-group bootstrap-select'+a+n+'"><button type="button" class="btn dropdown-toggle selectpicker" data-toggle="dropdown"'+t+'><span class="filter-option pull-left"></span>&nbsp;<span class="caret"></span></button><div class="dropdown-menu open">'+o+i+r+'<ul class="dropdown-menu inner selectpicker" role="menu"></ul></div></div>';return e(s)},createView:function(){var e=this.createDropdown(),a=this.createLi();return e.find("ul").append(a),e},reloadLi:function(){this.destroyLi();var e=this.createLi();this.$menu.find("ul").append(e)},destroyLi:function(){this.$menu.find("li").remove()},createLi:function(){var a=this,n=[],t="";return this.$element.find("option").each(function(){var t=e(this),o=t.attr("class")||"",i=t.attr("style")||"",r=t.data("content")?t.data("content"):t.html(),s=void 0!==t.data("subtext")?'<small class="muted text-muted">'+t.data("subtext")+"</small>":"",d=void 0!==t.data("icon")?'<i class="'+a.options.iconBase+" "+t.data("icon")+'"></i> ':"";if(""!==d&&(t.is(":disabled")||t.parent().is(":disabled"))&&(d="<span>"+d+"</span>"),t.data("content")||(r=d+'<span class="text">'+r+s+"</span>"),a.options.hideDisabled&&(t.is(":disabled")||t.parent().is(":disabled")))n.push('<a style="min-height: 0; padding: 0"></a>');else if(t.parent().is("optgroup")&&t.data("divider")!==!0)if(0===t.index()){var l=t.parent().attr("label"),c=void 0!==t.parent().data("subtext")?'<small class="muted text-muted">'+t.parent().data("subtext")+"</small>":"",m=t.parent().data("icon")?'<i class="'+t.parent().data("icon")+'"></i> ':"";l=m+'<span class="text">'+l+c+"</span>",0!==t[0].index?n.push('<div class="div-contain"><div class="divider"></div></div><dt>'+l+"</dt>"+a.createA(r,"opt "+o,i)):n.push("<dt>"+l+"</dt>"+a.createA(r,"opt "+o,i))}else n.push(a.createA(r,"opt "+o,i));else t.data("divider")===!0?n.push('<div class="div-contain"><div class="divider"></div></div>'):e(this).data("hidden")===!0?n.push("<a></a>"):n.push(a.createA(r,o,i))}),e.each(n,function(e,a){var n="<a></a>"===a?'class="hide is-hidden"':"";t+='<li rel="'+e+'"'+n+">"+a+"</li>"}),this.multiple||0!==this.$element.find("option:selected").length||this.options.title||this.$element.find("option").eq(0).prop("selected",!0).attr("selected","selected"),e(t)},createA:function(e,a,n){return'<a tabindex="0" class="'+a+'" style="'+n+'">'+e+'<i class="'+this.options.iconBase+" "+this.options.tickIcon+' icon-ok check-mark"></i></a>'},render:function(a){var n=this;a!==!1&&this.$element.find("option").each(function(a){n.setDisabled(a,e(this).is(":disabled")||e(this).parent().is(":disabled")),n.setSelected(a,e(this).is(":selected"))}),this.tabIndex();var t=this.$element.find("option:selected").map(function(){var a,t=e(this),o=t.data("icon")&&n.options.showIcon?'<i class="'+n.options.iconBase+" "+t.data("icon")+'"></i> ':"";return a=n.options.showSubtext&&t.attr("data-subtext")&&!n.multiple?' <small class="muted text-muted">'+t.data("subtext")+"</small>":"",t.data("content")&&n.options.showContent?t.data("content"):void 0!==t.attr("title")?t.attr("title"):o+t.html()+a}).toArray(),o=this.multiple?t.join(this.options.multipleSeparator):t[0];if(this.multiple&&this.options.selectedTextFormat.indexOf("count")>-1){var i=this.options.selectedTextFormat.split(">"),r=this.options.hideDisabled?":not([disabled])":"";(i.length>1&&t.length>i[1]||1==i.length&&t.length>=2)&&(o=this.options.countSelectedText.replace("{0}",t.length).replace("{1}",this.$element.find('option:not([data-divider="true"]):not([data-hidden="true"])'+r).length))}this.options.title=this.$element.attr("title"),o||(o=void 0!==this.options.title?this.options.title:this.options.noneSelectedText),this.$button.attr("title",e.trim(o)),this.$newElement.find(".filter-option").html(o)},setStyle:function(e,a){this.$element.attr("class")&&this.$newElement.addClass(this.$element.attr("class").replace(/selectpicker|mobile-device|validate\[.*\]/gi,""));var n=e?e:this.options.style;"add"==a?this.$button.addClass(n):"remove"==a?this.$button.removeClass(n):(this.$button.removeClass(this.options.style),this.$button.addClass(n))},liHeight:function(){if(this.options.size!==!1){var e=this.$menu.parent().clone().find("> .dropdown-toggle").prop("autofocus",!1).end().appendTo("body"),a=e.addClass("open").find("> .dropdown-menu"),n=a.find("li > a").outerHeight(),t=this.options.header?a.find(".popover-title").outerHeight():0,o=this.options.liveSearch?a.find(".bootstrap-select-searchbox").outerHeight():0,i=this.options.actionsBox?a.find(".bs-actionsbox").outerHeight():0;e.remove(),this.$newElement.data("liHeight",n).data("headerHeight",t).data("searchHeight",o).data("actionsHeight",i)}},setSize:function(){var a,n,t,o=this,i=this.$menu,r=i.find(".inner"),s=this.$newElement.outerHeight(),d=this.$newElement.data("liHeight"),l=this.$newElement.data("headerHeight"),c=this.$newElement.data("searchHeight"),m=this.$newElement.data("actionsHeight"),u=i.find("li .divider").outerHeight(!0),f=parseInt(i.css("padding-top"))+parseInt(i.css("padding-bottom"))+parseInt(i.css("border-top-width"))+parseInt(i.css("border-bottom-width")),h=this.options.hideDisabled?":not(.disabled)":"",p=e(window),b=f+parseInt(i.css("margin-top"))+parseInt(i.css("margin-bottom"))+2,g=function(){n=o.$newElement.offset().top-p.scrollTop(),t=p.height()-n-s};if(g(),this.options.header&&i.css("padding-top",0),"auto"==this.options.size){var v=function(){var e,s=o.$lis.not(".hide");g(),a=t-b,o.options.dropupAuto&&o.$newElement.toggleClass("dropup",n>t&&a-b<i.height()),o.$newElement.hasClass("dropup")&&(a=n-b),e=s.length+s.find("dt").length>3?3*d+b-2:0,i.css({"max-height":a+"px",overflow:"hidden","min-height":e+l+c+m+"px"}),r.css({"max-height":a-l-c-m-f+"px","overflow-y":"auto","min-height":Math.max(e-f,0)+"px"})};v(),this.$searchbox.off("input.getSize propertychange.getSize").on("input.getSize propertychange.getSize",v),e(window).off("resize.getSize").on("resize.getSize",v),e(window).off("scroll.getSize").on("scroll.getSize",v)}else if(this.options.size&&"auto"!=this.options.size&&i.find("li"+h).length>this.options.size){var y=i.find("li"+h+" > *").filter(":not(.div-contain)").slice(0,this.options.size).last().parent().index(),w=i.find("li").slice(0,y+1).find(".div-contain").length;a=d*this.options.size+w*u+f,o.options.dropupAuto&&this.$newElement.toggleClass("dropup",n>t&&a<i.height()),i.css({"max-height":a+l+c+m+"px",overflow:"hidden"}),r.css({"max-height":a-f+"px","overflow-y":"auto"})}},setWidth:function(){if("auto"==this.options.width){this.$menu.css("min-width","0");var e=this.$newElement.clone().appendTo("body"),a=e.find("> .dropdown-menu").css("width"),n=e.css("width","auto").find("> button").css("width");e.remove(),this.$newElement.css("width",Math.max(parseInt(a),parseInt(n))+"px")}else"fit"==this.options.width?(this.$menu.css("min-width",""),this.$newElement.css("width","").addClass("fit-width")):this.options.width?(this.$menu.css("min-width",""),this.$newElement.css("width",this.options.width)):(this.$menu.css("min-width",""),this.$newElement.css("width",""));this.$newElement.hasClass("fit-width")&&"fit"!==this.options.width&&this.$newElement.removeClass("fit-width")},selectPosition:function(){var a,n,t=this,o="<div />",i=e(o),r=function(e){i.addClass(e.attr("class").replace(/form-control/gi,"")).toggleClass("dropup",e.hasClass("dropup")),a=e.offset(),n=e.hasClass("dropup")?0:e[0].offsetHeight,i.css({top:a.top+n,left:a.left,width:e[0].offsetWidth,position:"absolute"})};this.$newElement.on("click",function(){t.isDisabled()||(r(e(this)),i.appendTo(t.options.container),i.toggleClass("open",!e(this).hasClass("open")),i.append(t.$menu))}),e(window).resize(function(){r(t.$newElement)}),e(window).on("scroll",function(){r(t.$newElement)}),e("html").on("click",function(a){e(a.target).closest(t.$newElement).length<1&&i.removeClass("open")})},mobile:function(){this.$element.addClass("mobile-device").appendTo(this.$newElement),this.options.container&&this.$menu.hide()},refresh:function(){this.$lis=null,this.reloadLi(),this.render(),this.setWidth(),this.setStyle(),this.checkDisabled(),this.liHeight()},update:function(){this.reloadLi(),this.setWidth(),this.setStyle(),this.checkDisabled(),this.liHeight()},setSelected:function(a,n){null==this.$lis&&(this.$lis=this.$menu.find("li")),e(this.$lis[a]).toggleClass("selected",n)},setDisabled:function(a,n){null==this.$lis&&(this.$lis=this.$menu.find("li")),n?e(this.$lis[a]).addClass("disabled").find("a").attr("href","#").attr("tabindex",-1):e(this.$lis[a]).removeClass("disabled").find("a").removeAttr("href").attr("tabindex",0)},isDisabled:function(){return this.$element.is(":disabled")},checkDisabled:function(){var e=this;this.isDisabled()?this.$button.addClass("disabled").attr("tabindex",-1):(this.$button.hasClass("disabled")&&this.$button.removeClass("disabled"),-1==this.$button.attr("tabindex")&&(this.$element.data("tabindex")||this.$button.removeAttr("tabindex"))),this.$button.click(function(){return!e.isDisabled()})},tabIndex:function(){this.$element.is("[tabindex]")&&(this.$element.data("tabindex",this.$element.attr("tabindex")),this.$button.attr("tabindex",this.$element.data("tabindex")))},clickListener:function(){var a=this;e("body").on("touchstart.dropdown",".dropdown-menu",function(e){e.stopPropagation()}),this.$newElement.on("click",function(){a.setSize(),a.options.liveSearch||a.multiple||setTimeout(function(){a.$menu.find(".selected a").focus()},10)}),this.$menu.on("click","li a",function(n){var t=e(this).parent().index(),o=a.$element.val(),i=a.$element.prop("selectedIndex");if(a.multiple&&n.stopPropagation(),n.preventDefault(),!a.isDisabled()&&!e(this).parent().hasClass("disabled")){var r=a.$element.find("option"),s=r.eq(t),d=s.prop("selected"),l=s.parent("optgroup"),c=a.options.maxOptions,m=l.data("maxOptions")||!1;if(a.multiple){if(s.prop("selected",!d),a.setSelected(t,!d),c!==!1||m!==!1){var u=c<r.filter(":selected").length,f=m<l.find("option:selected").length,h=a.options.maxOptionsText,p=h[0].replace("{n}",c),b=h[1].replace("{n}",m),g=e('<div class="notify"></div>');(c&&u||m&&f)&&(h[2]&&(p=p.replace("{var}",h[2][c>1?0:1]),b=b.replace("{var}",h[2][m>1?0:1])),s.prop("selected",!1),a.$menu.append(g),c&&u&&(g.append(e("<div>"+p+"</div>")),a.$element.trigger("maxReached.bs.select")),m&&f&&(g.append(e("<div>"+b+"</div>")),a.$element.trigger("maxReachedGrp.bs.select")),setTimeout(function(){a.setSelected(t,!1)},10),g.delay(750).fadeOut(300,function(){e(this).remove()}))}}else r.prop("selected",!1),s.prop("selected",!0),a.$menu.find(".selected").removeClass("selected"),a.setSelected(t,!0);a.multiple?a.options.liveSearch&&a.$searchbox.focus():a.$button.focus(),(o!=a.$element.val()&&a.multiple||i!=a.$element.prop("selectedIndex")&&!a.multiple)&&a.$element.change()}}),this.$menu.on("click","li.disabled a, li dt, li .div-contain, .popover-title, .popover-title :not(.close)",function(e){e.target==this&&(e.preventDefault(),e.stopPropagation(),a.options.liveSearch?a.$searchbox.focus():a.$button.focus())}),this.$menu.on("click",".popover-title .close",function(){a.$button.focus()}),this.$searchbox.on("click",function(e){e.stopPropagation()}),this.$menu.on("click",".actions-btn",function(n){a.options.liveSearch?a.$searchbox.focus():a.$button.focus(),n.preventDefault(),n.stopPropagation(),e(this).is(".bs-select-all")?a.selectAll():a.deselectAll(),a.$element.change()}),this.$element.change(function(){a.render(!1)})},liveSearchListener:function(){var a=this,n=e('<li class="no-results"></li>');this.$newElement.on("click.dropdown.data-api",function(){a.$menu.find(".active").removeClass("active"),a.$searchbox.val()&&(a.$searchbox.val(""),a.$lis.not(".is-hidden").removeClass("hide"),n.parent().length&&n.remove()),a.multiple||a.$menu.find(".selected").addClass("active"),setTimeout(function(){a.$searchbox.focus()},10)}),this.$searchbox.on("input propertychange",function(){a.$searchbox.val()?(a.$lis.not(".is-hidden").removeClass("hide").find("a").not(":icontains("+a.$searchbox.val()+")").parent().addClass("hide"),a.$menu.find("li").filter(":visible:not(.no-results)").length?n.parent().length&&n.remove():(n.parent().length&&n.remove(),n.html(a.options.noneResultsText+' "'+a.$searchbox.val()+'"').show(),a.$menu.find("li").last().after(n))):(a.$lis.not(".is-hidden").removeClass("hide"),n.parent().length&&n.remove()),a.$menu.find("li.active").removeClass("active"),a.$menu.find("li").filter(":visible:not(.divider)").eq(0).addClass("active").find("a").focus(),e(this).focus()}),this.$menu.on("mouseenter","a",function(n){a.$menu.find(".active").removeClass("active"),e(n.currentTarget).parent().not(".disabled").addClass("active")}),this.$menu.on("mouseleave","a",function(){a.$menu.find(".active").removeClass("active")})},val:function(e){return void 0!==e?(this.$element.val(e),this.$element.change(),this.$element):this.$element.val()},selectAll:function(){null==this.$lis&&(this.$lis=this.$menu.find("li")),this.$element.find("option:enabled").prop("selected",!0),e(this.$lis).filter(":not(.disabled)").addClass("selected"),this.render(!1)},deselectAll:function(){null==this.$lis&&(this.$lis=this.$menu.find("li")),this.$element.find("option:enabled").prop("selected",!1),e(this.$lis).filter(":not(.disabled)").removeClass("selected"),this.render(!1)},keydown:function(a){var n,t,o,i,r,s,d,l,c,m,u,f,h={32:" ",48:"0",49:"1",50:"2",51:"3",52:"4",53:"5",54:"6",55:"7",56:"8",57:"9",59:";",65:"a",66:"b",67:"c",68:"d",69:"e",70:"f",71:"g",72:"h",73:"i",74:"j",75:"k",76:"l",77:"m",78:"n",79:"o",80:"p",81:"q",82:"r",83:"s",84:"t",85:"u",86:"v",87:"w",88:"x",89:"y",90:"z",96:"0",97:"1",98:"2",99:"3",100:"4",101:"5",102:"6",103:"7",104:"8",105:"9"};if(n=e(this),o=n.parent(),n.is("input")&&(o=n.parent().parent()),m=o.data("this"),m.options.liveSearch&&(o=n.parent().parent()),m.options.container&&(o=m.$menu),t=e("[role=menu] li:not(.divider) a",o),f=m.$menu.parent().hasClass("open"),!f&&/([0-9]|[A-z])/.test(String.fromCharCode(a.keyCode))&&(m.options.container?m.$newElement.trigger("click"):(m.setSize(),m.$menu.parent().addClass("open"),f=m.$menu.parent().hasClass("open")),m.$searchbox.focus()),m.options.liveSearch&&(/(^9$|27)/.test(a.keyCode)&&f&&0===m.$menu.find(".active").length&&(a.preventDefault(),m.$menu.parent().removeClass("open"),m.$button.focus()),t=e("[role=menu] li:not(.divider):visible",o),n.val()||/(38|40)/.test(a.keyCode)||0===t.filter(".active").length&&(t=m.$newElement.find("li").filter(":icontains("+h[a.keyCode]+")"))),t.length){if(/(38|40)/.test(a.keyCode))i=t.index(t.filter(":focus")),s=t.parent(":not(.disabled):visible").first().index(),d=t.parent(":not(.disabled):visible").last().index(),r=t.eq(i).parent().nextAll(":not(.disabled):visible").eq(0).index(),l=t.eq(i).parent().prevAll(":not(.disabled):visible").eq(0).index(),c=t.eq(r).parent().prevAll(":not(.disabled):visible").eq(0).index(),m.options.liveSearch&&(t.each(function(a){e(this).is(":not(.disabled)")&&e(this).data("index",a)}),i=t.index(t.filter(".active")),s=t.filter(":not(.disabled):visible").first().data("index"),d=t.filter(":not(.disabled):visible").last().data("index"),r=t.eq(i).nextAll(":not(.disabled):visible").eq(0).data("index"),l=t.eq(i).prevAll(":not(.disabled):visible").eq(0).data("index"),c=t.eq(r).prevAll(":not(.disabled):visible").eq(0).data("index")),u=n.data("prevIndex"),38==a.keyCode&&(m.options.liveSearch&&(i-=1),i!=c&&i>l&&(i=l),s>i&&(i=s),i==u&&(i=d)),40==a.keyCode&&(m.options.liveSearch&&(i+=1),-1==i&&(i=0),i!=c&&r>i&&(i=r),i>d&&(i=d),i==u&&(i=s)),n.data("prevIndex",i),m.options.liveSearch?(a.preventDefault(),n.is(".dropdown-toggle")||(t.removeClass("active"),t.eq(i).addClass("active").find("a").focus(),n.focus())):t.eq(i).focus();else if(!n.is("input")){var p,b,g=[];t.each(function(){e(this).parent().is(":not(.disabled)")&&e.trim(e(this).text().toLowerCase()).substring(0,1)==h[a.keyCode]&&g.push(e(this).parent().index())}),p=e(document).data("keycount"),p++,e(document).data("keycount",p),b=e.trim(e(":focus").text().toLowerCase()).substring(0,1),b!=h[a.keyCode]?(p=1,e(document).data("keycount",p)):p>=g.length&&(e(document).data("keycount",0),p>g.length&&(p=1)),t.eq(g[p-1]).focus()}/(13|32|^9$)/.test(a.keyCode)&&f&&(/(32)/.test(a.keyCode)||a.preventDefault(),m.options.liveSearch?/(32)/.test(a.keyCode)||(m.$menu.find(".active a").click(),n.focus()):e(":focus").click(),e(document).data("keycount",0)),(/(^9$|27)/.test(a.keyCode)&&f&&(m.multiple||m.options.liveSearch)||/(27)/.test(a.keyCode)&&!f)&&(m.$menu.parent().removeClass("open"),m.$button.focus())
}},hide:function(){this.$newElement.hide()},show:function(){this.$newElement.show()},destroy:function(){this.$newElement.remove(),this.$element.remove()}},e.fn.selectpicker=function(n,t){var o,i=arguments,r=this.each(function(){if(e(this).is("select")){var r=e(this),s=r.data("selectpicker"),d="object"==typeof n&&n;if(s){if(d)for(var l in d)s.options[l]=d[l]}else r.data("selectpicker",s=new a(this,d,t));if("string"==typeof n){var c=n;s[c]instanceof Function?([].shift.apply(i),o=s[c].apply(s,i)):o=s.options[c]}}});return void 0!==o?o:r},e.fn.selectpicker.defaults={style:"btn-default",size:"auto",title:null,selectedTextFormat:"values",noneSelectedText:"Nothing selected",noneResultsText:"No results match",countSelectedText:"{0} of {1} selected",maxOptionsText:["Limit reached ({n} {var} max)","Group limit reached ({n} {var} max)",["items","item"]],width:!1,container:!1,hideDisabled:!1,showSubtext:!1,showIcon:!0,showContent:!0,dropupAuto:!0,header:!1,liveSearch:!1,actionsBox:!1,multipleSeparator:", ",iconBase:"glyphicon",tickIcon:"glyphicon-ok",maxOptions:!1},e(document).data("keycount",0).on("keydown",".bootstrap-select [data-toggle=dropdown], .bootstrap-select [role=menu], .bootstrap-select-searchbox input",a.prototype.keydown).on("focusin.modal",".bootstrap-select [data-toggle=dropdown], .bootstrap-select [role=menu], .bootstrap-select-searchbox input",function(e){e.stopPropagation()})}(window.jQuery),function(e,a,n){"use strict";function t(e,n,t,o){for(var i=[],r=0;r<e.length;r++){var s=e[r];if(s){var d=tinycolor(s),l=d.toHsl().l<.5?"sp-thumb-el sp-thumb-dark":"sp-thumb-el sp-thumb-light";l+=tinycolor.equals(n,s)?" sp-thumb-active":"";var c=d.toString(o.preferredFormat||"rgb"),m=g?"background-color:"+d.toRgbString():"filter:"+d.toFilter();i.push('<span title="'+c+'" data-color="'+d.toRgbString()+'" class="'+l+'"><span class="sp-thumb-inner" style="'+m+';" /></span>')}else{var u="sp-clear-display";i.push(a("<div />").append(a('<span data-color="" style="background-color:transparent;" class="'+u+'"></span>').attr("title",o.noColorSelectedText)).html())}}return"<div class='sp-cf "+t+"'>"+i.join("")+"</div>"}function o(){for(var e=0;e<p.length;e++)p[e]&&p[e].hide()}function i(e,n){var t=a.extend({},h,e);return t.callbacks={move:c(t.move,n),change:c(t.change,n),show:c(t.show,n),hide:c(t.hide,n),beforeShow:c(t.beforeShow,n)},"text"===t.type?f=["<div class='sp-replacer text-color-picker'>","<div class='sp-preview'>","<div class='sp-preview-inner'>","<div class='sp-preview-char'>A</div>","</div>","</div>","<b class='caret'></b>","</div>"].join(""):"highlight"===t.type?f=["<div class='sp-replacer highlight-color-picker'>","<div class='sp-preview'>","<div class='sp-preview-inner'>","<img src='http://s3.amazonaws.com/rise-common-test/scripts/spectrum/images/text-highlight.png'>","</div>","</div>","<b class='caret'></b>","</div>"].join(""):"background"===t.type&&(f=["<div class='sp-replacer background-color-picker'>","<div class='sp-preview'>","<div class='sp-preview-inner'></div>","</div>","<b class='caret'></b>","</div>"].join("")),t}function r(r,d){function c(){if(z.showPaletteOnly&&(z.showPalette=!0),z.palette){ca=z.palette.slice(0),ma=a.isArray(ca[0])?ca:[ca],ua={};for(var e=0;e<ma.length;e++)for(var n=0;n<ma[e].length;n++){var t=tinycolor(ma[e][n]).toRgbString();ua[t]=!0}}wa.toggleClass("sp-flat",j),wa.toggleClass("sp-input-disabled",!z.showInput),wa.toggleClass("sp-alpha-enabled",z.showAlpha),wa.toggleClass("sp-clear-enabled",Wa),wa.toggleClass("sp-buttons-disabled",!z.showButtons),wa.toggleClass("sp-palette-disabled",!z.showPalette),wa.toggleClass("sp-palette-only",z.showPaletteOnly),wa.toggleClass("sp-initial-disabled",!z.showInitial),wa.addClass(z.className).addClass(z.containerClassName),I()}function h(){function e(e){return e.data&&e.data.ignore?($(a(e.target).closest(".sp-thumb-el").data("color")),E()):($(a(e.target).closest(".sp-thumb-el").data("color")),E(),G(!0),x()),!1}if(b&&wa.find("*:not(input)").attr("unselectable","on"),c(),Oa&&va.after(Ka).hide(),Wa||$a.hide(),j)va.after(wa).hide();else{var n="parent"===z.appendTo?va.parent():a(z.appendTo);1!==n.length&&(n=a("body")),n.append(wa)}w(),Ga.bind("click.spectrum touchstart.spectrum",function(e){ya||L(),e.stopPropagation(),a(e.target).is("input")||e.preventDefault()}),(va.is(":disabled")||z.disabled===!0)&&V(),wa.click(l),La.change(B),La.bind("paste",function(){setTimeout(B,1)}),La.keydown(function(e){13==e.keyCode&&B()}),Na[0].innerHTML=z.cancelText+" "+Na[0].innerHTML,Na.bind("click.spectrum",function(e){e.stopPropagation(),e.preventDefault(),x("cancel")}),$a.attr("title",z.clearText),$a.bind("click.spectrum",function(e){e.stopPropagation(),e.preventDefault(),ja=!0,E(),j&&G(!0)}),Ra[0].innerHTML=z.chooseText+" "+Ra[0].innerHTML,Ra.bind("click.spectrum",function(e){e.stopPropagation(),e.preventDefault(),D()&&(G(!0),x())}),m(Ta,function(e,a,n){la=e/ta,ja=!1,n.shiftKey&&(la=Math.round(10*la)/10),E()},M,T),m(Sa,function(e,a){ra=parseFloat(a/aa),ja=!1,z.showAlpha||(la=1),E()},M,T),m(Aa,function(e,a,n){if(n.shiftKey){if(!ba){var t=sa*Q,o=X-da*X,i=Math.abs(e-t)>Math.abs(a-o);ba=i?"x":"y"}}else ba=null;var r=!ba||"x"===ba,s=!ba||"y"===ba;r&&(sa=parseFloat(e/Q)),s&&(da=parseFloat((X-a)/X)),ja=!1,z.showAlpha||(la=1),E()},M,T),Ha?($(Ha),O(),Va=Ua||tinycolor(Ha).format,A(Ha)):O(),j&&P();var t=b?"mousedown.spectrum":"click.spectrum touchstart.spectrum";Pa.delegate(".sp-thumb-el",t,e),xa.delegate(".sp-thumb-el:nth-child(1)",t,{ignore:!0},e)}function w(){if(J&&e.localStorage){try{var n=e.localStorage[J].split(",#");n.length>1&&(delete e.localStorage[J],a.each(n,function(e,a){A(a)}))}catch(t){}try{fa=e.localStorage[J].split(";")}catch(t){}}}function A(n){if(W){var t=tinycolor(n).toRgbString();if(!ua[t]&&-1===a.inArray(t,fa))for(fa.push(t);fa.length>ha;)fa.shift();if(J&&e.localStorage)try{e.localStorage[J]=fa.join(";")}catch(o){}}}function k(){var e=[];if(z.showPalette)for(var a=0;a<fa.length;a++){var n=tinycolor(fa[a]).toRgbString();ua[n]||e.push(fa[a])}return e.reverse().slice(0,z.maxSelectionSize)}function S(){var e=R(),n=a.map(ma,function(a,n){return t(a,e,"sp-palette-row sp-palette-row-"+n,z)});w(),fa&&n.push(t(k(),e,"sp-palette-row sp-palette-row-selection",z)),Pa.html(n.join(""))}function C(){if(z.showInitial){var e=Fa,a=R();xa.html(t([e,a],a,"sp-palette-row-initial",z))}}function M(){(0>=X||0>=Q||0>=aa)&&I(),wa.addClass(pa),ba=null,va.trigger("dragstart.spectrum",[R()])}function T(){wa.removeClass(pa),va.trigger("dragstop.spectrum",[R()])}function B(){var e=La.val();if(null!==e&&""!==e||!Wa){var a=tinycolor(e);a.isValid()?($(a),G(!0)):La.addClass("sp-validation-error")}else $(null),G(!0)}function L(){q?x():P()}function P(){var n=a.Event("beforeShow.spectrum");return q?(I(),void 0):(va.trigger(n,[R()]),Z.beforeShow(R())===!1||n.isDefaultPrevented()||(o(),q=!0,a(ga).bind("click.spectrum",x),a(e).bind("resize.spectrum",_),Ka.addClass("sp-active"),wa.removeClass("sp-hidden"),I(),O(),Fa=R(),C(),Z.show(Fa),va.trigger("show.spectrum",[Fa])),void 0)}function x(n){if((!n||"click"!=n.type||2!=n.button)&&q&&!j){q=!1,a(ga).unbind("click.spectrum",x),a(e).unbind("resize.spectrum",_),Ka.removeClass("sp-active"),wa.addClass("sp-hidden");var t=!tinycolor.equals(R(),Fa);t&&(za&&"cancel"!==n?G(!0):N()),Z.hide(R()),va.trigger("hide.spectrum",[R()])}}function N(){$(Fa,!0)}function $(e,a){if(tinycolor.equals(e,R()))return O(),void 0;var n,t;!e&&Wa?ja=!0:(ja=!1,n=tinycolor(e),t=n.toHsv(),ra=t.h%360/360,sa=t.s,da=t.v,la=t.a),O(),n&&n.isValid()&&!a&&(Va=Ua||n.getFormat())}function R(e){return e=e||{},Wa&&ja?null:tinycolor.fromRatio({h:ra,s:sa,v:da,a:Math.round(100*la)/100},{format:e.format||Va})}function D(){return!La.hasClass("sp-validation-error")}function E(){O(),Z.move(R()),va.trigger("move.spectrum",[R()])}function O(){La.removeClass("sp-validation-error"),K();var e=tinycolor.fromRatio({h:ra,s:1,v:1});Aa.css("background-color",e.toHexString());var a=Va;1>la&&(0!==la||"name"!==a)&&("hex"===a||"hex3"===a||"hex6"===a||"name"===a)&&(a="rgb");var n=R({format:a}),t="";if(Ia.removeClass("sp-clear-display"),"text"===z.type?Ia.css("border-color","transparent"):Ia.css("background-color","transparent"),!n&&Wa)Ia.addClass("sp-clear-display");else{var o=n.toHexString(),i=n.toRgbString();if(g||1===n.alpha?"text"===z.type?Ia.css("border-color",i):Ia.css("background-color",i):("text"===z.type?Ia.css("border-color","transparent"):Ia.css("background-color","transparent"),Ia.css("filter",n.toFilter())),z.showAlpha){var r=n.toRgb();r.a=0;var s=tinycolor(r).toRgbString(),d="linear-gradient(left, "+s+", "+o+")";b?Ma.css("filter",tinycolor(s).toFilter({gradientType:1},o)):(Ma.css("background","-webkit-"+d),Ma.css("background","-moz-"+d),Ma.css("background","-ms-"+d),Ma.css("background","linear-gradient(to right, "+s+", "+o+")"))}t=n.toString(a)}z.showInput&&La.val(t),z.showPalette&&S(),C()}function K(){var e=sa,a=da;if(Wa&&ja)Ba.hide(),Ca.hide(),ka.hide();else{Ba.show(),Ca.show(),ka.show();var n=e*Q,t=X-a*X;n=Math.max(-ea,Math.min(Q-ea,n-ea)),t=Math.max(-ea,Math.min(X-ea,t-ea)),ka.css({top:t+"px",left:n+"px"});var o=la*ta;Ba.css({left:o-oa/2+"px"});var i=ra*aa;Ca.css({top:i-ia+"px"})}}function G(e){var a=R(),n="",t=!tinycolor.equals(a,Fa);a&&(n=a.toString(Va),A(a)),Da&&va.val(n),Fa=a,e&&t&&(Z.change(a),va.trigger("change",[a]))}function I(){Q=Aa.width(),X=Aa.height(),ea=ka.height(),na=Sa.width(),aa=Sa.height(),ia=Ca.height(),ta=Ta.width(),oa=Ba.width(),j||(wa.css("position","absolute"),wa.offset(s(wa,Ga))),K(),z.showPalette&&S(),va.trigger("reflow.spectrum")}function H(){va.show(),Ga.unbind("click.spectrum touchstart.spectrum"),wa.remove(),Ka.remove(),p[Ja.id]=null}function F(e,t){return e===n?a.extend({},z):t===n?z[e]:(z[e]=t,c(),void 0)}function U(){ya=!1,va.attr("disabled",!1),Ga.removeClass("sp-disabled")}function V(){x(),ya=!0,va.attr("disabled",!0),Ga.addClass("sp-disabled")}var z=i(d,r),j=z.flat,W=z.showSelectionPalette,J=z.localStorageKey,Y=z.theme,Z=z.callbacks,_=u(I,10),q=!1,Q=0,X=0,ea=0,aa=0,na=0,ta=0,oa=0,ia=0,ra=0,sa=0,da=0,la=1,ca=[],ma=[],ua={},fa=z.selectionPalette.slice(0),ha=z.maxSelectionSize,pa="sp-dragging",ba=null,ga=r.ownerDocument,va=(ga.body,a(r)),ya=!1,wa=a(y,ga).addClass(Y),Aa=wa.find(".sp-color"),ka=wa.find(".sp-dragger"),Sa=wa.find(".sp-hue"),Ca=wa.find(".sp-slider"),Ma=wa.find(".sp-alpha-inner"),Ta=wa.find(".sp-alpha"),Ba=wa.find(".sp-alpha-handle"),La=wa.find(".sp-input"),Pa=wa.find(".sp-palette"),xa=wa.find(".sp-initial"),Na=wa.find(".sp-cancel"),$a=wa.find(".sp-clear"),Ra=wa.find(".sp-choose"),Da=va.is("input"),Ea=Da&&v&&"color"===va.attr("type"),Oa=Da&&!j,Ka=Oa?a(f).addClass(Y).addClass(z.className).addClass(z.replacerClassName):a([]),Ga=Oa?Ka:va,Ia="text"===z.type?Ka.find(".sp-preview"):Ka.find(".sp-preview-inner"),Ha=z.color||Da&&va.val(),Fa=!1,Ua=z.preferredFormat,Va=Ua,za=!z.showButtons||z.clickoutFiresChange,ja=!Ha,Wa=z.allowEmpty&&!Ea;h();var Ja={show:P,hide:x,toggle:L,reflow:I,option:F,enable:U,disable:V,set:function(e){$(e),G()},get:R,destroy:H,container:wa};return Ja.id=p.push(Ja)-1,Ja}function s(e,n){var t=0,o=e.outerWidth(),i=e.outerHeight(),r=n.outerHeight(),s=e[0].ownerDocument,d=s.documentElement,l=d.clientWidth+a(s).scrollLeft(),c=d.clientHeight+a(s).scrollTop(),m=n.offset();return m.top+=r,m.left-=Math.min(m.left,m.left+o>l&&l>o?Math.abs(m.left+o-l):0),m.top-=Math.min(m.top,m.top+i>c&&c>i?Math.abs(i+r-t):t),m}function d(){}function l(e){e.stopPropagation()}function c(e,a){var n=Array.prototype.slice,t=n.call(arguments,2);return function(){return e.apply(a,t.concat(n.call(arguments)))}}function m(n,t,o,i){function r(e){e.stopPropagation&&e.stopPropagation(),e.preventDefault&&e.preventDefault(),e.returnValue=!1}function s(e){if(m){if(b&&document.documentMode<9&&!e.button)return l();var a=e.originalEvent.touches,o=a?a[0].pageX:e.pageX,i=a?a[0].pageY:e.pageY,s=Math.max(0,Math.min(o-u.left,h)),d=Math.max(0,Math.min(i-u.top,f));p&&r(e),t.apply(n,[s,d,e])}}function d(e){{var t=e.which?3==e.which:2==e.button;e.originalEvent.touches}t||m||o.apply(n,arguments)!==!1&&(m=!0,f=a(n).height(),h=a(n).width(),u=a(n).offset(),a(c).bind(g),a(c.body).addClass("sp-dragging"),p||s(e),r(e))}function l(){m&&(a(c).unbind(g),a(c.body).removeClass("sp-dragging"),i.apply(n,arguments)),m=!1}t=t||function(){},o=o||function(){},i=i||function(){};var c=n.ownerDocument||document,m=!1,u={},f=0,h=0,p="ontouchstart"in e,g={};g.selectstart=r,g.dragstart=r,g["touchmove mousemove"]=s,g["touchend mouseup"]=l,a(n).bind("touchstart mousedown",d)}function u(e,a,n){var t;return function(){var o=this,i=arguments,r=function(){t=null,e.apply(o,i)};n&&clearTimeout(t),(n||!t)&&(t=setTimeout(r,a))}}var f,h={beforeShow:d,move:d,change:d,show:d,hide:d,color:!1,flat:!1,showInput:!1,allowEmpty:!1,showButtons:!0,clickoutFiresChange:!1,showInitial:!1,showPalette:!1,showPaletteOnly:!1,showSelectionPalette:!0,localStorageKey:!1,appendTo:"body",maxSelectionSize:7,cancelText:"cancel",chooseText:"choose",clearText:"Clear Color Selection",noColorSelectedText:"No Color Selected",preferredFormat:!1,className:"",containerClassName:"",replacerClassName:"",type:"text",showAlpha:!1,theme:"sp-light",palette:[["#ffffff","#000000","#ff0000","#ff8000","#ffff00","#008000","#0000ff","#4b0082","#9400d3"]],selectionPalette:[],disabled:!1},p=[],b=!!/msie/i.exec(e.navigator.userAgent),g=function(){function e(e,a){return!!~(""+e).indexOf(a)}var a=document.createElement("div"),n=a.style;return n.cssText="background-color:rgba(0,0,0,.5)",e(n.backgroundColor,"rgba")||e(n.backgroundColor,"hsla")}(),v=function(){var e=a("<input type='color' value='!' />")[0];return"color"===e.type&&"!"!==e.value}(),y=function(){var e="";if(b)for(var a=1;6>=a;a++)e+="<div class='sp-"+a+"'></div>";return["<div class='sp-container sp-hidden'>","<div class='sp-palette-container'>","<div class='sp-palette sp-thumb sp-cf'></div>","</div>","<div class='sp-picker-container'>","<div class='sp-top sp-cf'>","<div class='sp-fill'></div>","<div class='sp-top-inner'>","<div class='sp-color'>","<div class='sp-sat'>","<div class='sp-val'>","<div class='sp-dragger'></div>","</div>","</div>","</div>","<div class='sp-clear sp-clear-display'>","</div>","<div class='sp-hue'>","<div class='sp-slider'></div>",e,"</div>","</div>","<div class='sp-alpha'><div class='sp-alpha-inner'><div class='sp-alpha-handle'></div></div></div>","</div>","<div class='sp-input-container sp-cf'>","<input class='sp-input' type='text' spellcheck='false'  />","</div>","<div class='sp-initial sp-thumb sp-cf'></div>","<div class='sp-button-container sp-cf'>","<button type='button' class='sp-choose'><i class='fa fa-check fa-white '></i></button>","<span class='sp-btn-spacer'/>","<button type='button' class='sp-cancel'><i class='fa fa-times fa-white '></i></button>","</div>","</div>","</div>"].join("")}(),w="spectrum.id";a.fn.spectrum=function(e){if("string"==typeof e){var n=this,t=Array.prototype.slice.call(arguments,1);return this.each(function(){var o=p[a(this).data(w)];if(o){var i=o[e];if(!i)throw new Error("Spectrum: no such method: '"+e+"'");"get"==e?n=o.get():"container"==e?n=o.container:"option"==e?n=o.option.apply(o,t):"destroy"==e?(o.destroy(),a(this).removeData(w)):i.apply(o,t)}}),n}return this.spectrum("destroy").each(function(){var n=a.extend({},e,a(this).data()),t=r(this,n);a(this).data(w,t.id)})},a.fn.spectrum.load=!0,a.fn.spectrum.loadOpts={},a.fn.spectrum.draggable=m,a.fn.spectrum.defaults=h,a.spectrum={},a.spectrum.localization={},a.spectrum.palettes={},a.fn.spectrum.processNativeColorInputs=function(){v||a("input[type=color]").spectrum({preferredFormat:"hex6"})},function(){function a(e){var a={r:0,g:0,b:0},t=1,i=!1,s=!1;return"string"==typeof e&&(e=w(e)),"object"==typeof e&&(e.hasOwnProperty("r")&&e.hasOwnProperty("g")&&e.hasOwnProperty("b")?(a=n(e.r,e.g,e.b),i=!0,s="%"===String(e.r).substr(-1)?"prgb":"rgb"):e.hasOwnProperty("h")&&e.hasOwnProperty("s")&&e.hasOwnProperty("v")?(e.s=g(e.s),e.v=g(e.v),a=r(e.h,e.s,e.v),i=!0,s="hsv"):e.hasOwnProperty("h")&&e.hasOwnProperty("s")&&e.hasOwnProperty("l")&&(e.s=g(e.s),e.l=g(e.l),a=o(e.h,e.s,e.l),i=!0,s="hsl"),e.hasOwnProperty("a")&&(t=e.a)),t=c(t),{ok:i,format:e.format||s,r:T(255,B(a.r,0)),g:T(255,B(a.g,0)),b:T(255,B(a.b,0)),a:t}}function n(e,a,n){return{r:255*m(e,255),g:255*m(a,255),b:255*m(n,255)}}function t(e,a,n){e=m(e,255),a=m(a,255),n=m(n,255);var t,o,i=B(e,a,n),r=T(e,a,n),s=(i+r)/2;if(i==r)t=o=0;else{var d=i-r;switch(o=s>.5?d/(2-i-r):d/(i+r),i){case e:t=(a-n)/d+(n>a?6:0);break;case a:t=(n-e)/d+2;break;case n:t=(e-a)/d+4}t/=6}return{h:t,s:o,l:s}}function o(e,a,n){function t(e,a,n){return 0>n&&(n+=1),n>1&&(n-=1),1/6>n?e+6*(a-e)*n:.5>n?a:2/3>n?e+(a-e)*(2/3-n)*6:e}var o,i,r;if(e=m(e,360),a=m(a,100),n=m(n,100),0===a)o=i=r=n;else{var s=.5>n?n*(1+a):n+a-n*a,d=2*n-s;o=t(d,s,e+1/3),i=t(d,s,e),r=t(d,s,e-1/3)}return{r:255*o,g:255*i,b:255*r}}function i(e,a,n){e=m(e,255),a=m(a,255),n=m(n,255);var t,o,i=B(e,a,n),r=T(e,a,n),s=i,d=i-r;if(o=0===i?0:d/i,i==r)t=0;else{switch(i){case e:t=(a-n)/d+(n>a?6:0);break;case a:t=(n-e)/d+2;break;case n:t=(e-a)/d+4}t/=6}return{h:t,s:o,v:s}}function r(e,a,n){e=6*m(e,360),a=m(a,100),n=m(n,100);var t=C.floor(e),o=e-t,i=n*(1-a),r=n*(1-o*a),s=n*(1-(1-o)*a),d=t%6,l=[n,r,i,i,s,n][d],c=[s,n,n,r,i,i][d],u=[i,i,s,n,n,r][d];return{r:255*l,g:255*c,b:255*u}}function s(e,a,n,t){var o=[b(M(e).toString(16)),b(M(a).toString(16)),b(M(n).toString(16))];return t&&o[0].charAt(0)==o[0].charAt(1)&&o[1].charAt(0)==o[1].charAt(1)&&o[2].charAt(0)==o[2].charAt(1)?o[0].charAt(0)+o[1].charAt(0)+o[2].charAt(0):o.join("")}function d(e,a,n,t){var o=[b(v(t)),b(M(e).toString(16)),b(M(a).toString(16)),b(M(n).toString(16))];return o.join("")}function l(e){var a={};for(var n in e)e.hasOwnProperty(n)&&(a[e[n]]=n);return a}function c(e){return e=parseFloat(e),(isNaN(e)||0>e||e>1)&&(e=1),e}function m(e,a){h(e)&&(e="100%");var n=p(e);return e=T(a,B(0,parseFloat(e))),n&&(e=parseInt(e*a,10)/100),C.abs(e-a)<1e-6?1:e%a/parseFloat(a)}function u(e){return T(1,B(0,e))}function f(e){return parseInt(e,16)}function h(e){return"string"==typeof e&&-1!=e.indexOf(".")&&1===parseFloat(e)}function p(e){return"string"==typeof e&&-1!=e.indexOf("%")}function b(e){return 1==e.length?"0"+e:""+e}function g(e){return 1>=e&&(e=100*e+"%"),e}function v(e){return Math.round(255*parseFloat(e)).toString(16)}function y(e){return f(e)/255}function w(e){e=e.replace(A,"").replace(k,"").toLowerCase();var a=!1;if(x[e])e=x[e],a=!0;else if("transparent"==e)return{r:0,g:0,b:0,a:0,format:"name"};var n;return(n=$.rgb.exec(e))?{r:n[1],g:n[2],b:n[3]}:(n=$.rgba.exec(e))?{r:n[1],g:n[2],b:n[3],a:n[4]}:(n=$.hsl.exec(e))?{h:n[1],s:n[2],l:n[3]}:(n=$.hsla.exec(e))?{h:n[1],s:n[2],l:n[3],a:n[4]}:(n=$.hsv.exec(e))?{h:n[1],s:n[2],v:n[3]}:(n=$.hex8.exec(e))?{a:y(n[1]),r:f(n[2]),g:f(n[3]),b:f(n[4]),format:a?"name":"hex8"}:(n=$.hex6.exec(e))?{r:f(n[1]),g:f(n[2]),b:f(n[3]),format:a?"name":"hex"}:(n=$.hex3.exec(e))?{r:f(n[1]+""+n[1]),g:f(n[2]+""+n[2]),b:f(n[3]+""+n[3]),format:a?"name":"hex"}:!1}var A=/^[\s,#]+/,k=/\s+$/,S=0,C=Math,M=C.round,T=C.min,B=C.max,L=C.random,P=function R(e,n){if(e=e?e:"",n=n||{},e instanceof R)return e;if(!(this instanceof R))return new R(e,n);var t=a(e);this._r=t.r,this._g=t.g,this._b=t.b,this._a=t.a,this._roundA=M(100*this._a)/100,this._format=n.format||t.format,this._gradientType=n.gradientType,this._r<1&&(this._r=M(this._r)),this._g<1&&(this._g=M(this._g)),this._b<1&&(this._b=M(this._b)),this._ok=t.ok,this._tc_id=S++};P.prototype={isValid:function(){return this._ok},getFormat:function(){return this._format},getAlpha:function(){return this._a},setAlpha:function(e){this._a=c(e),this._roundA=M(100*this._a)/100},toHsv:function(){var e=i(this._r,this._g,this._b);return{h:360*e.h,s:e.s,v:e.v,a:this._a}},toHsvString:function(){var e=i(this._r,this._g,this._b),a=M(360*e.h),n=M(100*e.s),t=M(100*e.v);return 1==this._a?"hsv("+a+", "+n+"%, "+t+"%)":"hsva("+a+", "+n+"%, "+t+"%, "+this._roundA+")"},toHsl:function(){var e=t(this._r,this._g,this._b);return{h:360*e.h,s:e.s,l:e.l,a:this._a}},toHslString:function(){var e=t(this._r,this._g,this._b),a=M(360*e.h),n=M(100*e.s),o=M(100*e.l);return 1==this._a?"hsl("+a+", "+n+"%, "+o+"%)":"hsla("+a+", "+n+"%, "+o+"%, "+this._roundA+")"},toHex:function(e){return s(this._r,this._g,this._b,e)},toHexString:function(e){return"#"+this.toHex(e)},toHex8:function(){return d(this._r,this._g,this._b,this._a)},toHex8String:function(){return"#"+this.toHex8()},toRgb:function(){return{r:M(this._r),g:M(this._g),b:M(this._b),a:this._a}},toRgbString:function(){return 1==this._a?"rgb("+M(this._r)+", "+M(this._g)+", "+M(this._b)+")":"rgba("+M(this._r)+", "+M(this._g)+", "+M(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:M(100*m(this._r,255))+"%",g:M(100*m(this._g,255))+"%",b:M(100*m(this._b,255))+"%",a:this._a}},toPercentageRgbString:function(){return 1==this._a?"rgb("+M(100*m(this._r,255))+"%, "+M(100*m(this._g,255))+"%, "+M(100*m(this._b,255))+"%)":"rgba("+M(100*m(this._r,255))+"%, "+M(100*m(this._g,255))+"%, "+M(100*m(this._b,255))+"%, "+this._roundA+")"},toName:function(){return 0===this._a?"transparent":this._a<1?!1:N[s(this._r,this._g,this._b,!0)]||!1},toFilter:function(e){var a="#"+d(this._r,this._g,this._b,this._a),n=a,t=this._gradientType?"GradientType = 1, ":"";if(e){var o=P(e);n=o.toHex8String()}return"progid:DXImageTransform.Microsoft.gradient("+t+"startColorstr="+a+",endColorstr="+n+")"},toString:function(e){var a=!!e;e=e||this._format;var n=!1,t=this._a<1&&this._a>=0,o=!a&&t&&("hex"===e||"hex6"===e||"hex3"===e||"name"===e);return o?"name"===e&&0===this._a?this.toName():this.toRgbString():("rgb"===e&&(n=this.toRgbString()),"prgb"===e&&(n=this.toPercentageRgbString()),("hex"===e||"hex6"===e)&&(n=this.toHexString()),"hex3"===e&&(n=this.toHexString(!0)),"hex8"===e&&(n=this.toHex8String()),"name"===e&&(n=this.toName()),"hsl"===e&&(n=this.toHslString()),"hsv"===e&&(n=this.toHsvString()),n||this.toHexString())}},P.fromRatio=function(e,a){if("object"==typeof e){var n={};for(var t in e)e.hasOwnProperty(t)&&(n[t]="a"===t?e[t]:g(e[t]));e=n}return P(e,a)},P.equals=function(e,a){return e&&a?P(e).toRgbString()==P(a).toRgbString():!1},P.random=function(){return P.fromRatio({r:L(),g:L(),b:L()})},P.desaturate=function(e,a){a=0===a?0:a||10;var n=P(e).toHsl();return n.s-=a/100,n.s=u(n.s),P(n)},P.saturate=function(e,a){a=0===a?0:a||10;var n=P(e).toHsl();return n.s+=a/100,n.s=u(n.s),P(n)},P.greyscale=function(e){return P.desaturate(e,100)},P.lighten=function(e,a){a=0===a?0:a||10;var n=P(e).toHsl();return n.l+=a/100,n.l=u(n.l),P(n)},P.brighten=function(e,a){a=0===a?0:a||10;var n=P(e).toRgb();return n.r=B(0,T(255,n.r-M(255*-(a/100)))),n.g=B(0,T(255,n.g-M(255*-(a/100)))),n.b=B(0,T(255,n.b-M(255*-(a/100)))),P(n)},P.darken=function(e,a){a=0===a?0:a||10;var n=P(e).toHsl();return n.l-=a/100,n.l=u(n.l),P(n)},P.complement=function(e){var a=P(e).toHsl();return a.h=(a.h+180)%360,P(a)},P.triad=function(e){var a=P(e).toHsl(),n=a.h;return[P(e),P({h:(n+120)%360,s:a.s,l:a.l}),P({h:(n+240)%360,s:a.s,l:a.l})]},P.tetrad=function(e){var a=P(e).toHsl(),n=a.h;return[P(e),P({h:(n+90)%360,s:a.s,l:a.l}),P({h:(n+180)%360,s:a.s,l:a.l}),P({h:(n+270)%360,s:a.s,l:a.l})]},P.splitcomplement=function(e){var a=P(e).toHsl(),n=a.h;return[P(e),P({h:(n+72)%360,s:a.s,l:a.l}),P({h:(n+216)%360,s:a.s,l:a.l})]},P.analogous=function(e,a,n){a=a||6,n=n||30;var t=P(e).toHsl(),o=360/n,i=[P(e)];for(t.h=(t.h-(o*a>>1)+720)%360;--a;)t.h=(t.h+o)%360,i.push(P(t));return i},P.monochromatic=function(e,a){a=a||6;for(var n=P(e).toHsv(),t=n.h,o=n.s,i=n.v,r=[],s=1/a;a--;)r.push(P({h:t,s:o,v:i})),i=(i+s)%1;return r},P.readability=function(e,a){var n=P(e).toRgb(),t=P(a).toRgb(),o=(299*n.r+587*n.g+114*n.b)/1e3,i=(299*t.r+587*t.g+114*t.b)/1e3,r=Math.max(n.r,t.r)-Math.min(n.r,t.r)+Math.max(n.g,t.g)-Math.min(n.g,t.g)+Math.max(n.b,t.b)-Math.min(n.b,t.b);return{brightness:Math.abs(o-i),color:r}},P.readable=function(e,a){var n=P.readability(e,a);return n.brightness>125&&n.color>500},P.mostReadable=function(e,a){for(var n=null,t=0,o=!1,i=0;i<a.length;i++){var r=P.readability(e,a[i]),s=r.brightness>125&&r.color>500,d=3*(r.brightness/125)+r.color/500;(s&&!o||s&&o&&d>t||!s&&!o&&d>t)&&(o=s,t=d,n=P(a[i]))}return n};var x=P.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},N=P.hexNames=l(x),$=function(){var e="[-\\+]?\\d+%?",a="[-\\+]?\\d*\\.\\d+%?",n="(?:"+a+")|(?:"+e+")",t="[\\s|\\(]+("+n+")[,|\\s]+("+n+")[,|\\s]+("+n+")\\s*\\)?",o="[\\s|\\(]+("+n+")[,|\\s]+("+n+")[,|\\s]+("+n+")[,|\\s]+("+n+")\\s*\\)?";return{rgb:new RegExp("rgb"+t),rgba:new RegExp("rgba"+o),hsl:new RegExp("hsl"+t),hsla:new RegExp("hsla"+o),hsv:new RegExp("hsv"+t),hex3:/^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex8:/^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}}();e.tinycolor=P}(),a(function(){a.fn.spectrum.load&&a.fn.spectrum.processNativeColorInputs()})}(window,jQuery),angular.module("pascalprecht.translate").factory("$translateStaticFilesLoader",["$q","$http",function(e,a){function n(e,t){a(angular.extend({url:[e.prefix,e.key.toLowerCase(),e.suffix].join(""),method:"GET",params:""},e.$http)).success(function(e){t.resolve(e)}).error(function(){if(e.key.indexOf("_")>=0){var a=e.key.substr(0,e.key.lastIndexOf("_")),o=angular.extend({},e,{key:a});n(o,t)}else t.resolve("{}")})}return function(a){if(!a||!angular.isString(a.prefix)||!angular.isString(a.suffix))throw new Error('Couldn"t load static files, no prefix or suffix specified!');var t=e.defer();return n(a,t),t.promise}}]),angular.module("risevision.common.i18n",["pascalprecht.translate","risevision.common.i18n.config"]).config(["$translateProvider","LOCALES_PREFIX","LOCALES_SUFIX",function(e,a,n){e.useStaticFilesLoader({prefix:a,suffix:n}),e.determinePreferredLanguage().fallbackLanguage("en")}]),!jQuery)throw new Error("Bootstrap Form Helpers requires jQuery");var BFHCountriesList={AF:"Afghanistan",AL:"Albania",DZ:"Algeria",AS:"American Samoa",AD:"Andorra",AO:"Angola",AI:"Anguilla",AQ:"Antarctica",AG:"Antigua and Barbuda",AR:"Argentina",AM:"Armenia",AW:"Aruba",AU:"Australia",AT:"Austria",AZ:"Azerbaijan",BH:"Bahrain",BD:"Bangladesh",BB:"Barbados",BY:"Belarus",BE:"Belgium",BZ:"Belize",BJ:"Benin",BM:"Bermuda",BT:"Bhutan",BO:"Bolivia",BA:"Bosnia and Herzegovina",BW:"Botswana",BV:"Bouvet Island",BR:"Brazil",IO:"British Indian Ocean Territory",VG:"British Virgin Islands",BN:"Brunei",BG:"Bulgaria",BF:"Burkina Faso",BI:"Burundi",CI:"Côte d'Ivoire",KH:"Cambodia",CM:"Cameroon",CA:"Canada",CV:"Cape Verde",KY:"Cayman Islands",CF:"Central African Republic",TD:"Chad",CL:"Chile",CN:"China",CX:"Christmas Island",CC:"Cocos (Keeling) Islands",CO:"Colombia",KM:"Comoros",CG:"Congo",CK:"Cook Islands",CR:"Costa Rica",HR:"Croatia",CU:"Cuba",CY:"Cyprus",CZ:"Czech Republic",CD:"Democratic Republic of the Congo",DK:"Denmark",DJ:"Djibouti",DM:"Dominica",DO:"Dominican Republic",TP:"East Timor",EC:"Ecuador",EG:"Egypt",SV:"El Salvador",GQ:"Equatorial Guinea",ER:"Eritrea",EE:"Estonia",ET:"Ethiopia",FO:"Faeroe Islands",FK:"Falkland Islands",FJ:"Fiji",FI:"Finland",MK:"Former Yugoslav Republic of Macedonia",FR:"France",FX:"France, Metropolitan",GF:"French Guiana",PF:"French Polynesia",TF:"French Southern Territories",GA:"Gabon",GE:"Georgia",DE:"Germany",GH:"Ghana",GI:"Gibraltar",GR:"Greece",GL:"Greenland",GD:"Grenada",GP:"Guadeloupe",GU:"Guam",GT:"Guatemala",GN:"Guinea",GW:"Guinea-Bissau",GY:"Guyana",HT:"Haiti",HM:"Heard and Mc Donald Islands",HN:"Honduras",HK:"Hong Kong",HU:"Hungary",IS:"Iceland",IN:"India",ID:"Indonesia",IR:"Iran",IQ:"Iraq",IE:"Ireland",IL:"Israel",IT:"Italy",JM:"Jamaica",JP:"Japan",JO:"Jordan",KZ:"Kazakhstan",KE:"Kenya",KI:"Kiribati",KW:"Kuwait",KG:"Kyrgyzstan",LA:"Laos",LV:"Latvia",LB:"Lebanon",LS:"Lesotho",LR:"Liberia",LY:"Libya",LI:"Liechtenstein",LT:"Lithuania",LU:"Luxembourg",MO:"Macau",MG:"Madagascar",MW:"Malawi",MY:"Malaysia",MV:"Maldives",ML:"Mali",MT:"Malta",MH:"Marshall Islands",MQ:"Martinique",MR:"Mauritania",MU:"Mauritius",YT:"Mayotte",MX:"Mexico",FM:"Micronesia",MD:"Moldova",MC:"Monaco",MN:"Mongolia",ME:"Montenegro",MS:"Montserrat",MA:"Morocco",MZ:"Mozambique",MM:"Myanmar",NA:"Namibia",NR:"Nauru",NP:"Nepal",NL:"Netherlands",AN:"Netherlands Antilles",NC:"New Caledonia",NZ:"New Zealand",NI:"Nicaragua",NE:"Niger",NG:"Nigeria",NU:"Niue",NF:"Norfolk Island",KP:"North Korea",MP:"Northern Marianas",NO:"Norway",OM:"Oman",PK:"Pakistan",PW:"Palau",PS:"Palestine",PA:"Panama",PG:"Papua New Guinea",PY:"Paraguay",PE:"Peru",PH:"Philippines",PN:"Pitcairn Islands",PL:"Poland",PT:"Portugal",PR:"Puerto Rico",QA:"Qatar",RE:"Reunion",RO:"Romania",RU:"Russia",RW:"Rwanda",ST:"São Tomé and Príncipe",SH:"Saint Helena",PM:"St. Pierre and Miquelon",KN:"Saint Kitts and Nevis",LC:"Saint Lucia",VC:"Saint Vincent and the Grenadines",WS:"Samoa",SM:"San Marino",SA:"Saudi Arabia",SN:"Senegal",RS:"Serbia",SC:"Seychelles",SL:"Sierra Leone",SG:"Singapore",SK:"Slovakia",SI:"Slovenia",SB:"Solomon Islands",SO:"Somalia",ZA:"South Africa",GS:"South Georgia and the South Sandwich Islands",KR:"South Korea",ES:"Spain",LK:"Sri Lanka",SD:"Sudan",SR:"Suriname",SJ:"Svalbard and Jan Mayen Islands",SZ:"Swaziland",SE:"Sweden",CH:"Switzerland",SY:"Syria",TW:"Taiwan",TJ:"Tajikistan",TZ:"Tanzania",TH:"Thailand",BS:"The Bahamas",GM:"The Gambia",TG:"Togo",TK:"Tokelau",TO:"Tonga",TT:"Trinidad and Tobago",TN:"Tunisia",TR:"Turkey",TM:"Turkmenistan",TC:"Turks and Caicos Islands",TV:"Tuvalu",VI:"US Virgin Islands",UG:"Uganda",UA:"Ukraine",AE:"United Arab Emirates",GB:"United Kingdom",US:"United States",UM:"United States Minor Outlying Islands",UY:"Uruguay",UZ:"Uzbekistan",VU:"Vanuatu",VA:"Vatican City",VE:"Venezuela",VN:"Vietnam",WF:"Wallis and Futuna Islands",EH:"Western Sahara",YE:"Yemen",ZM:"Zambia",ZW:"Zimbabwe"},BFHCurrenciesList={AED:{label:"United Arab Emirates dirham",currencyflag:"",symbol:"د.إ"},AFN:{label:"Afghan afghani",currencyflag:"",symbol:"؋"},ALL:{label:"Albanian lek",currencyflag:"",symbol:"L"},AMD:{label:"Armenian dram",currencyflag:"",symbol:"դր"},AOA:{label:"Angolan kwanza",currencyflag:"",symbol:"Kz"},ARS:{label:"Argentine peso",currencyflag:"",symbol:"$"},AUD:{label:"Australian dollar",currencyflag:"AUD",symbol:"$"},AWG:{label:"Aruban florin",currencyflag:"",symbol:"ƒ"},AZN:{label:"Azerbaijani manat",currencyflag:"",symbol:""},BAM:{label:"Bosnia and Herzegovina convertible mark",currencyflag:"",symbol:"KM"},BBD:{label:"Barbadian dollar",currencyflag:"",symbol:"$"},BDT:{label:"Bangladeshi taka",currencyflag:"",symbol:"৳"},BGN:{label:"Bulgarian lev",currencyflag:"",symbol:"лв"},BHD:{label:"Bahraini dinar",currencyflag:"",symbol:".د.ب"},BIF:{label:"Burundian franc",currencyflag:"",symbol:"Fr"},BMD:{label:"Bermudian dollar",currencyflag:"",symbol:"$"},BND:{label:"Brunei dollar",currencyflag:"",symbol:"$"},BOB:{label:"Bolivian boliviano",currencyflag:"",symbol:"Bs"},BRL:{label:"Brazilian real",currencyflag:"",symbol:"R$"},BSD:{label:"Bahamian dollar",currencyflag:"",symbol:"$"},BTN:{label:"Bhutanese ngultrum",currencyflag:"",symbol:"Nu"},BWP:{label:"Botswana pula",currencyflag:"",symbol:"P"},BYR:{label:"Belarusian ruble",currencyflag:"",symbol:"Br"},BZD:{label:"Belize dollar",currencyflag:"",symbol:"$"},CAD:{label:"Canadian dollar",currencyflag:"",symbol:"$"},CDF:{label:"Congolese franc",currencyflag:"",symbol:"Fr"},CHF:{label:"Swiss franc",currencyflag:"CHF",symbol:"Fr"},CLP:{label:"Chilean peso",currencyflag:"",symbol:"$"},CNY:{label:"Chinese yuan",currencyflag:"",symbol:"¥"},COP:{label:"Colombian peso",currencyflag:"",symbol:"$"},CRC:{label:"Costa Rican colón",currencyflag:"",symbol:"₡"},CUP:{label:"Cuban convertible peso",currencyflag:"",symbol:"$"},CVE:{label:"Cape Verdean escudo",currencyflag:"",symbol:"$"},CZK:{label:"Czech koruna",currencyflag:"",symbol:"Kč"},DJF:{label:"Djiboutian franc",currencyflag:"",symbol:"Fr"},DKK:{label:"Danish krone",currencyflag:"DKK",symbol:"kr"},DOP:{label:"Dominican peso",currencyflag:"",symbol:"$"},DZD:{label:"Algerian dinar",currencyflag:"",symbol:"د.ج"},EGP:{label:"Egyptian pound",currencyflag:"",symbol:"ج.م"},ERN:{label:"Eritrean nakfa",currencyflag:"",symbol:"Nfk"},ETB:{label:"Ethiopian birr",currencyflag:"",symbol:"Br"},EUR:{label:"Euro",currencyflag:"EUR",symbol:"€"},FJD:{label:"Fijian dollar",currencyflag:"",symbol:"$"},FKP:{label:"Falkland Islands pound",currencyflag:"",symbol:"£"},GBP:{label:"British pound",currencyflag:"",symbol:"£"},GEL:{label:"Georgian lari",currencyflag:"",symbol:"ლ"},GHS:{label:"Ghana cedi",currencyflag:"",symbol:"₵"},GMD:{label:"Gambian dalasi",currencyflag:"",symbol:"D"},GNF:{label:"Guinean franc",currencyflag:"",symbol:"Fr"},GTQ:{label:"Guatemalan quetzal",currencyflag:"",symbol:"Q"},GYD:{label:"Guyanese dollar",currencyflag:"",symbol:"$"},HKD:{label:"Hong Kong dollar",currencyflag:"",symbol:"$"},HNL:{label:"Honduran lempira",currencyflag:"",symbol:"L"},HRK:{label:"Croatian kuna",currencyflag:"",symbol:"kn"},HTG:{label:"Haitian gourde",currencyflag:"",symbol:"G"},HUF:{label:"Hungarian forint",currencyflag:"",symbol:"Ft"},IDR:{label:"Indonesian rupiah",currencyflag:"",symbol:"Rp"},ILS:{label:"Israeli new shekel",currencyflag:"",symbol:"₪"},IMP:{label:"Manx pound",currencyflag:"",symbol:"£"},INR:{label:"Indian rupee",currencyflag:"",symbol:""},IQD:{label:"Iraqi dinar",currencyflag:"",symbol:"ع.د"},IRR:{label:"Iranian rial",currencyflag:"",symbol:"﷼"},ISK:{label:"Icelandic króna",currencyflag:"",symbol:"kr"},JEP:{label:"Jersey pound",currencyflag:"",symbol:"£"},JMD:{label:"Jamaican dollar",currencyflag:"",symbol:"$"},JOD:{label:"Jordanian dinar",currencyflag:"",symbol:"د.ا"},JPY:{label:"Japanese yen",currencyflag:"",symbol:"¥"},KES:{label:"Kenyan shilling",currencyflag:"",symbol:"Sh"},KGS:{label:"Kyrgyzstani som",currencyflag:"",symbol:"лв"},KHR:{label:"Cambodian riel",currencyflag:"",symbol:"៛"},KMF:{label:"Comorian franc",currencyflag:"",symbol:"Fr"},KPW:{label:"North Korean won",currencyflag:"",symbol:"₩"},KRW:{label:"South Korean won",currencyflag:"",symbol:"₩"},KWD:{label:"Kuwaiti dinar",currencyflag:"",symbol:"د.ك"},KYD:{label:"Cayman Islands dollar",currencyflag:"",symbol:"$"},KZT:{label:"Kazakhstani tenge",currencyflag:"",symbol:"₸"},LAK:{label:"Lao kip",currencyflag:"",symbol:"₭"},LBP:{label:"Lebanese pound",currencyflag:"",symbol:"ل.ل"},LKR:{label:"Sri Lankan rupee",currencyflag:"",symbol:"Rs"},LRD:{label:"Liberian dollar",currencyflag:"",symbol:"$"},LSL:{label:"Lesotho loti",currencyflag:"",symbol:"L"},LTL:{label:"Lithuanian litas",currencyflag:"",symbol:"Lt"},LVL:{label:"Latvian lats",currencyflag:"",symbol:"Ls"},LYD:{label:"Libyan dinar",currencyflag:"",symbol:"ل.د"},MAD:{label:"Moroccan dirham",currencyflag:"",symbol:"د.م."},MDL:{label:"Moldovan leu",currencyflag:"",symbol:"L"},MGA:{label:"Malagasy ariary",currencyflag:"",symbol:"Ar"},MKD:{label:"Macedonian denar",currencyflag:"",symbol:"ден"},MMK:{label:"Burmese kyat",currencyflag:"",symbol:"Ks"},MNT:{label:"Mongolian tögrög",currencyflag:"",symbol:"₮"},MOP:{label:"Macanese pataca",currencyflag:"",symbol:"P"},MRO:{label:"Mauritanian ouguiya",currencyflag:"",symbol:"UM"},MUR:{label:"Mauritian rupee",currencyflag:"",symbol:"Rs"},MVR:{label:"Maldivian rufiyaa",currencyflag:"",symbol:".ރ"},MWK:{label:"Malawian kwacha",currencyflag:"",symbol:"MK"},MXN:{label:"Mexican peso",currencyflag:"",symbol:"$"},MYR:{label:"Malaysian ringgit",currencyflag:"",symbol:"MR"},MZN:{label:"Mozambican metical",currencyflag:"",symbol:"MT"},NAD:{label:"Namibian dollar",currencyflag:"",symbol:"$"},NGN:{label:"Nigerian naira",currencyflag:"",symbol:"₦"},NIO:{label:"Nicaraguan córdoba",currencyflag:"",symbol:"C$"},NOK:{label:"Norwegian krone",currencyflag:"",symbol:"kr"},NPR:{label:"Nepalese rupee",currencyflag:"",symbol:"Rs"},NZD:{label:"New Zealand dollar",currencyflag:"",symbol:"$"},OMR:{label:"Omani rial",currencyflag:"",symbol:"ر.ع."},PAB:{label:"Panamanian balboa",currencyflag:"",symbol:"B/."},PEN:{label:"Peruvian nuevo sol",currencyflag:"",symbol:"S/."},PGK:{label:"Papua New Guinean kina",currencyflag:"",symbol:"K"},PHP:{label:"Philippine peso",currencyflag:"",symbol:"₱"},PKR:{label:"Pakistani rupee",currencyflag:"",symbol:"Rs"},PLN:{label:"Polish złoty",currencyflag:"",symbol:"zł"},PRB:{label:"Transnistrian ruble",currencyflag:"",symbol:"р."},PYG:{label:"Paraguayan guaraní",currencyflag:"",symbol:"₲"},QAR:{label:"Qatari riyal",currencyflag:"",symbol:"ر.ق"},RON:{label:"Romanian leu",currencyflag:"",symbol:"L"},RSD:{label:"Serbian dinar",currencyflag:"",symbol:"дин"},RUB:{label:"Russian ruble",currencyflag:"",symbol:"руб."},RWF:{label:"Rwandan franc",currencyflag:"",symbol:"Fr"},SAR:{label:"Saudi riyal",currencyflag:"",symbol:"ر.س"},SBD:{label:"Solomon Islands dollar",currencyflag:"",symbol:"$"},SCR:{label:"Seychellois rupee",currencyflag:"",symbol:"Rs"},SDG:{label:"Singapore dollar",currencyflag:"",symbol:"$"},SEK:{label:"Swedish krona",currencyflag:"",symbol:"kr"},SGD:{label:"Singapore dollar",currencyflag:"",symbol:"$"},SHP:{label:"Saint Helena pound",currencyflag:"",symbol:"£"},SLL:{label:"Sierra Leonean leone",currencyflag:"",symbol:"Le"},SOS:{label:"Somali shilling",currencyflag:"",symbol:"Sh"},SRD:{label:"Surinamese dollar",currencyflag:"",symbol:"$"},SSP:{label:"South Sudanese pound",currencyflag:"",symbol:"£"},STD:{label:"São Tomé and Príncipe dobra",currencyflag:"",symbol:"Db"},SVC:{label:"Salvadoran colón",currencyflag:"",symbol:"₡"},SYP:{label:"Syrian pound",currencyflag:"",symbol:"£"},SZL:{label:"Swazi lilangeni",currencyflag:"",symbol:"L"},THB:{label:"Thai baht",currencyflag:"",symbol:"฿"},TJS:{label:"Tajikistani somoni",currencyflag:"",symbol:"SM"},TMT:{label:"Turkmenistan manat",currencyflag:"",symbol:"m"},TND:{label:"Tunisian dinar",currencyflag:"",symbol:"د.ت"},TOP:{label:"Tongan paʻanga",currencyflag:"",symbol:"T$"},TRY:{label:"Turkish lira",currencyflag:"",symbol:"&#8378;"},TTD:{label:"Trinidad and Tobago dollar",currencyflag:"",symbol:"$"},TWD:{label:"New Taiwan dollar",currencyflag:"",symbol:"$"},TZS:{label:"Tanzanian shilling",currencyflag:"",symbol:"Sh"},UAH:{label:"Ukrainian hryvnia",currencyflag:"",symbol:"₴"},UGX:{label:"Ugandan shilling",currencyflag:"",symbol:"Sh"},USD:{label:"United States dollar",currencyflag:"",symbol:"$"},UYU:{label:"Uruguayan peso",currencyflag:"",symbol:"$"},UZS:{label:"Uzbekistani som",currencyflag:"",symbol:"лв"},VEF:{label:"Venezuelan bolívar",currencyflag:"",symbol:"Bs F"},VND:{label:"Vietnamese đồng",currencyflag:"",symbol:"₫"},VUV:{label:"Vanuatu vatu",currencyflag:"",symbol:"Vt"},WST:{label:"Samoan tālā",currencyflag:"",symbol:"T"},XAF:{label:"Central African CFA franc",currencyflag:"XAF",symbol:"Fr"},XCD:{label:"East Caribbean dollar",currencyflag:"XCD",symbol:"$"},XOF:{label:"West African CFA franc",currencyflag:"XOF",symbol:"Fr"},XPF:{label:"CFP franc",currencyflag:"XPF",symbol:"Fr"},YER:{label:"Yemeni rial",currencyflag:"",symbol:"﷼"},ZAR:{label:"South African rand",currencyflag:"ZAR",symbol:"R"},ZMW:{label:"Zambian kwacha",currencyflag:"",symbol:"ZK"},ZWL:{label:"Zimbabwean dollar",currencyflag:"",symbol:"$"}},BFHMonthsList=["January","February","March","April","May","June","July","August","September","October","November","December"],BFHDaysList=["SUN","MON","TUE","WED","THU","FRI","SAT"],BFHDayOfWeekStart=0,BFHFontsList={"Andale Mono":'"Andale Mono", AndaleMono, monospace',Arial:'Arial, "Helvetica Neue", Helvetica, sans-serif',"Arial Black":'"Arial Black", "Arial Bold", Gadget, sans-serif',"Arial Narrow":'"Arial Narrow", Arial, sans-serif',"Arial Rounded MT Bold":'"Arial Rounded MT Bold", "Helvetica Rounded", Arial, sans-serif',"Avant Garde":'"Avant Garde", Avantgarde, "Century Gothic", CenturyGothic, "AppleGothic", sans-serif',Baskerville:'Baskerville, "Baskerville Old Face", "Hoefler Text", Garamond, "Times New Roman", serif',"Big Caslon":'"Big Caslon", "Book Antiqua", "Palatino Linotype", Georgia, serif',"Bodoni MT":'"Bodoni MT", Didot, "Didot LT STD", "Hoefler Text", Garamond, "Times New Roman", serif',"Book Antiqua":'"Book Antiqua", Palatino, "Palatino Linotype", "Palatino LT STD", Georgia, serif',"Brush Script MT":'"Brush Script MT", cursive',Calibri:'Calibri, Candara, Segoe, "Segoe UI", Optima, Arial, sans-serif',"Calisto MT":'"Calisto MT", "Bookman Old Style", Bookman, "Goudy Old Style", Garamond, "Hoefler Text", "Bitstream Charter", Georgia, serif',Cambrio:"Cambria, Georgia, serif",Candara:'Candara, Calibri, Segoe, "Segoe UI", Optima, Arial, sans-serif',"Century Gothic":'"Century Gothic", CenturyGothic, AppleGothic, sans-serif',Consolas:"Consolas, monaco, monospace",Copperplate:'Copperplate, "Copperplate Gothic Light", fantasy',"Courier New":'"Courier New", Courier, "Lucida Sans Typewriter", "Lucida Typewriter", monospace',Didot:'Didot, "Didot LT STD", "Hoefler Text", Garamond, "Times New Roman", serif',"Franklin Gothic Medium":'"Franklin Gothic Medium", "Franklin Gothic", "ITC Franklin Gothic", Arial, sans-serif',Futura:'Futura, "Trebuchet MS", Arial, sans-serif',Garamond:'Garamond, Baskerville, "Baskerville Old Face", "Hoefler Text", "Times New Roman", serif',Geneva:"Geneva, Tahoma, Verdana, sans-serif",Georgia:'Georgia, Times, "Times New Roman", serif',"Gill Sans":'"Gill Sans", "Gill Sans MT", Calibri, sans-serif',"Goudy Old Style":'"Goudy Old Style", Garamond, "Big Caslon", "Times New Roman", serif',Helvetica:'"Helvetica Neue", Helvetica, Arial, sans-serif',"Hoefler Text":'"Hoefler Text", "Baskerville old face", Garamond, "Times New Roman", serif',Impact:'Impact, Haettenschweiler, "Franklin Gothic Bold", Charcoal, "Helvetica Inserat", "Bitstream Vera Sans Bold", "Arial Black", sans serif',"Lucida Bright":'"Lucida Bright", Georgia, serif',"Lucida Console":'"Lucida Console", "Lucida Sans Typewriter", Monaco, "Bitstream Vera Sans Mono", monospace',"Lucida Sans Typewriter":'"Lucida Sans Typewriter", "Lucida Console", Monaco, "Bitstream Vera Sans Mono", monospace',"Lucida Grande":'"Lucida Grande", "Lucida Sans Unicode", "Lucida Sans", Geneva, Verdana, sans-serif',Monaco:'Monaco, Consolas, "Lucida Console", monospace',Optima:'Optima, Segoe, "Segoe UI", Candara, Calibri, Arial, sans-serif',Palatino:'Palatino, "Palatino Linotype", "Palatino LT STD", "Book Antiqua", Georgia, serif',Papyrus:"Papyrus, fantasy",Perpetua:'Perpetua, Baskerville, "Big Caslon", "Palatino Linotype", Palatino, "URW Palladio L", "Nimbus Roman No9 L", serif',Rockwell:'Rockwell, "Courier Bold", Courier, Georgia, Times, "Times New Roman", serif',"Rockwell Extra Bold":'"Rockwell Extra Bold", "Rockwell Bold", monospace',"Segoe UI":'"Segoe UI", Frutiger, "Frutiger Linotype',Tahoma:"Tahoma, Verdana, Segoe, sans-serif","Times New Roman":'TimesNewRoman, "Times New Roman", Times, Baskerville, Georgia, serif',"Trebuchet MS":'"Trebuchet MS", "Lucida Grande", "Lucida Sans Unicode", "Lucida Sans", Tahoma, sans-serif',Verdana:"Verdana, Geneva, sans-serif"},BFHFontSizesList={8:"8",9:"9",10:"10",11:"11",12:"12",14:"14",18:"18",24:"24",30:"30",36:"36",48:"48",60:"60",72:"72",96:"96"},BFHGoogleFontsList={kind:"webfonts#webfontList",items:[{kind:"webfonts#webfont",family:"ABeeZee",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Abel",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Abril Fatface",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Aclonica",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Acme",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Actor",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Adamina",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Advent Pro",variants:["100","200","300","regular","500","600","700"],subsets:["latin-ext","latin","greek"]},{kind:"webfonts#webfont",family:"Aguafina Script",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Akronim",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Aladin",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Aldrich",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Alegreya",variants:["regular","italic","700","700italic","900","900italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Alegreya SC",variants:["regular","italic","700","700italic","900","900italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Alex Brush",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Alfa Slab One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Alice",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Alike",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Alike Angular",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Allan",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Allerta",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Allerta Stencil",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Allura",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Almendra",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Almendra Display",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Almendra SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Amarante",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Amaranth",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Amatic SC",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Amethysta",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Anaheim",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Andada",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Andika",variants:["regular"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Angkor",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Annie Use Your Telescope",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Anonymous Pro",variants:["regular","italic","700","700italic"],subsets:["cyrillic","greek-ext","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Antic",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Antic Didone",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Antic Slab",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Anton",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Arapey",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Arbutus",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Arbutus Slab",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Architects Daughter",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Archivo Black",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Archivo Narrow",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Arimo",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Arizonia",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Armata",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Artifika",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Arvo",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Asap",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Asset",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Astloch",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Asul",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Atomic Age",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Aubrey",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Audiowide",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Autour One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Average",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Average Sans",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Averia Gruesa Libre",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Averia Libre",variants:["300","300italic","regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Averia Sans Libre",variants:["300","300italic","regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Averia Serif Libre",variants:["300","300italic","regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bad Script",variants:["regular"],subsets:["cyrillic","latin"]},{kind:"webfonts#webfont",family:"Balthazar",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bangers",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Basic",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Battambang",variants:["regular","700"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Baumans",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bayon",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Belgrano",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Belleza",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"BenchNine",variants:["300","regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bentham",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Berkshire Swash",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bevan",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bigelow Rules",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bigshot One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bilbo",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bilbo Swash Caps",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bitter",variants:["regular","italic","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Black Ops One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bokor",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Bonbon",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Boogaloo",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bowlby One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bowlby One SC",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Brawler",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bree Serif",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bubblegum Sans",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bubbler One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Buda",variants:["300"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Buenard",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Butcherman",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Butterfly Kids",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Cabin",variants:["regular","italic","500","500italic","600","600italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cabin Condensed",variants:["regular","500","600","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cabin Sketch",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Caesar Dressing",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cagliostro",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Calligraffitti",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cambo",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Candal",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cantarell",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cantata One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Cantora One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Capriola",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Cardo",variants:["regular","italic","700"],subsets:["greek-ext","latin-ext","latin","greek"]},{kind:"webfonts#webfont",family:"Carme",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Carrois Gothic",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Carrois Gothic SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Carter One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Caudex",variants:["regular","italic","700","700italic"],subsets:["greek-ext","latin-ext","latin","greek"]},{kind:"webfonts#webfont",family:"Cedarville Cursive",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Ceviche One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Changa One",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Chango",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Chau Philomene One",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Chela One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Chelsea Market",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Chenla",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Cherry Cream Soda",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cherry Swash",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Chewy",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Chicle",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Chivo",variants:["regular","italic","900","900italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cinzel",variants:["regular","700","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cinzel Decorative",variants:["regular","700","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Clicker Script",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Coda",variants:["regular","800"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Coda Caption",variants:["800"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Codystar",variants:["300","regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Combo",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Comfortaa",variants:["300","regular","700"],subsets:["cyrillic","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Coming Soon",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Concert One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Condiment",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Content",variants:["regular","700"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Contrail One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Convergence",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cookie",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Copse",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Corben",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Courgette",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Cousine",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Coustard",variants:["regular","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Covered By Your Grace",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Crafty Girls",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Creepster",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Crete Round",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Crimson Text",variants:["regular","italic","600","600italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Croissant One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Crushed",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cuprum",variants:["regular","italic","700","700italic"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Cutive",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Cutive Mono",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Damion",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Dancing Script",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Dangrek",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Dawning of a New Day",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Days One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Delius",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Delius Swash Caps",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Delius Unicase",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Della Respira",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Devonshire",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Didact Gothic",variants:["regular"],subsets:["cyrillic","greek-ext","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Diplomata",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Diplomata SC",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Doppio One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Dorsa",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Dosis",variants:["200","300","regular","500","600","700","800"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Dr Sugiyama",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Droid Sans",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Droid Sans Mono",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Droid Serif",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Duru Sans",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Dynalight",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"EB Garamond",variants:["regular"],subsets:["cyrillic","latin-ext","latin","vietnamese","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Eagle Lake",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Eater",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Economica",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Electrolize",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Emblema One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Emilys Candy",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Engagement",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Englebert",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Enriqueta",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Erica One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Esteban",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Euphoria Script",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ewert",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Exo",variants:["100","100italic","200","200italic","300","300italic","regular","italic","500","500italic","600","600italic","700","700italic","800","800italic","900","900italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Expletus Sans",variants:["regular","italic","500","500italic","600","600italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fanwood Text",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fascinate",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fascinate Inline",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Faster One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fasthand",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Federant",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Federo",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Felipa",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Fenix",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Finger Paint",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fjord One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Flamenco",variants:["300","regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Flavors",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fondamento",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Fontdiner Swanky",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Forum",variants:["regular"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Francois One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Freckle Face",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Fredericka the Great",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fredoka One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Freehand",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Fresca",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Frijole",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fugaz One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"GFS Didot",variants:["regular"],subsets:["greek"]},{kind:"webfonts#webfont",family:"GFS Neohellenic",variants:["regular","italic","700","700italic"],subsets:["greek"]},{kind:"webfonts#webfont",family:"Gafata",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Galdeano",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Galindo",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Gentium Basic",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Gentium Book Basic",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Geo",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Geostar",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Geostar Fill",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Germania One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Gilda Display",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Give You Glory",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Glass Antiqua",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Glegoo",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Gloria Hallelujah",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Goblin One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Gochi Hand",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Gorditas",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Goudy Bookletter 1911",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Graduate",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Gravitas One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Great Vibes",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Griffy",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Gruppo",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Gudea",variants:["regular","italic","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Habibi",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Hammersmith One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Hanalei",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Hanalei Fill",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Handlee",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Hanuman",variants:["regular","700"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Happy Monkey",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Headland One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Henny Penny",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Herr Von Muellerhoff",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Holtwood One SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Homemade Apple",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Homenaje",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"IM Fell DW Pica",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell DW Pica SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell Double Pica",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell Double Pica SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell English",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell English SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell French Canon",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell French Canon SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell Great Primer",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell Great Primer SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Iceberg",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Iceland",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Imprima",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Inconsolata",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Inder",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Indie Flower",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Inika",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Irish Grover",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Istok Web",variants:["regular","italic","700","700italic"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Italiana",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Italianno",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Jacques Francois",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Jacques Francois Shadow",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Jim Nightshade",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Jockey One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Jolly Lodger",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Josefin Sans",variants:["100","100italic","300","300italic","regular","italic","600","600italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Josefin Slab",variants:["100","100italic","300","300italic","regular","italic","600","600italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Joti One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Judson",variants:["regular","italic","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Julee",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Julius Sans One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Junge",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Jura",variants:["300","regular","500","600"],subsets:["cyrillic","greek-ext","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Just Another Hand",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Just Me Again Down Here",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Kameron",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Karla",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Kaushan Script",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Keania One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Kelly Slab",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Kenia",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Khmer",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Kite One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Knewave",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Kotta One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Koulen",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Kranky",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Kreon",variants:["300","regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Kristi",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Krona One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"La Belle Aurore",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Lancelot",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Lato",variants:["100","100italic","300","300italic","regular","italic","700","700italic","900","900italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"League Script",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Leckerli One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Ledger",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Lekton",variants:["regular","italic","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Lemon",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Life Savers",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Lilita One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Limelight",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Linden Hill",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Lobster",variants:["regular"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Lobster Two",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Londrina Outline",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Londrina Shadow",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Londrina Sketch",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Londrina Solid",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Lora",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Love Ya Like A Sister",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Loved by the King",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Lovers Quarrel",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Luckiest Guy",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Lusitana",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Lustria",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Macondo",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Macondo Swash Caps",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Magra",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Maiden Orange",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Mako",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Marcellus",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Marcellus SC",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Marck Script",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Margarine",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Marko One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Marmelad",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Marvel",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Mate",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Mate SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Maven Pro",variants:["regular","500","700","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"McLaren",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Meddon",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"MedievalSharp",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Medula One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Megrim",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Meie Script",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Merienda",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Merienda One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Merriweather",variants:["300","regular","700","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Metal",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Metal Mania",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Metamorphous",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Metrophobic",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Michroma",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Miltonian",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Miltonian Tattoo",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Miniver",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Miss Fajardose",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Modern Antiqua",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Molengo",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Molle",variants:["italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Monofett",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Monoton",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Monsieur La Doulaise",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Montaga",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Montez",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Montserrat",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Montserrat Alternates",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Montserrat Subrayada",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Moul",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Moulpali",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Mountains of Christmas",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Mouse Memoirs",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Mr Bedfort",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Mr Dafoe",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Mr De Haviland",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Mrs Saint Delafield",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Mrs Sheppards",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Muli",variants:["300","300italic","regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Mystery Quest",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Neucha",variants:["regular"],subsets:["cyrillic","latin"]},{kind:"webfonts#webfont",family:"Neuton",variants:["200","300","regular","italic","700","800"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"News Cycle",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Niconne",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Nixie One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nobile",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nokora",variants:["regular","700"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Norican",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Nosifer",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Nothing You Could Do",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Noticia Text",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin","vietnamese"]},{kind:"webfonts#webfont",family:"Nova Cut",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nova Flat",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nova Mono",variants:["regular"],subsets:["latin","greek"]},{kind:"webfonts#webfont",family:"Nova Oval",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nova Round",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nova Script",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nova Slim",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nova Square",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Numans",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nunito",variants:["300","regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Odor Mean Chey",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Offside",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Old Standard TT",variants:["regular","italic","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Oldenburg",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Oleo Script",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Oleo Script Swash Caps",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Open Sans",variants:["300","300italic","regular","italic","600","600italic","700","700italic","800","800italic"],subsets:["cyrillic","greek-ext","latin-ext","latin","vietnamese","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Open Sans Condensed",variants:["300","300italic","700"],subsets:["cyrillic","greek-ext","latin-ext","latin","vietnamese","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Oranienbaum",variants:["regular"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Orbitron",variants:["regular","500","700","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Oregano",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Orienta",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Original Surfer",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Oswald",variants:["300","regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Over the Rainbow",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Overlock",variants:["regular","italic","700","700italic","900","900italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Overlock SC",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ovo",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Oxygen",variants:["300","regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Oxygen Mono",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"PT Mono",variants:["regular"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"PT Sans",variants:["regular","italic","700","700italic"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"PT Sans Caption",variants:["regular","700"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"PT Sans Narrow",variants:["regular","700"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"PT Serif",variants:["regular","italic","700","700italic"],subsets:["cyrillic","latin"]},{kind:"webfonts#webfont",family:"PT Serif Caption",variants:["regular","italic"],subsets:["cyrillic","latin"]},{kind:"webfonts#webfont",family:"Pacifico",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Paprika",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Parisienne",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Passero One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Passion One",variants:["regular","700","900"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Patrick Hand",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Patua One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Paytone One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Peralta",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Permanent Marker",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Petit Formal Script",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Petrona",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Philosopher",variants:["regular","italic","700","700italic"],subsets:["cyrillic","latin"]},{kind:"webfonts#webfont",family:"Piedra",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Pinyon Script",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Pirata One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Plaster",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Play",variants:["regular","700"],subsets:["cyrillic","greek-ext","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Playball",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Playfair Display",variants:["regular","italic","700","700italic","900","900italic"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Playfair Display SC",variants:["regular","italic","700","700italic","900","900italic"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Podkova",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Poiret One",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Poller One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Poly",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Pompiere",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Pontano Sans",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Port Lligat Sans",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Port Lligat Slab",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Prata",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Preahvihear",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Press Start 2P",variants:["regular"],subsets:["cyrillic","latin-ext","latin","greek"]},{kind:"webfonts#webfont",family:"Princess Sofia",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Prociono",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Prosto One",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Puritan",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Purple Purse",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Quando",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Quantico",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Quattrocento",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Quattrocento Sans",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Questrial",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Quicksand",variants:["300","regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Quintessential",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Qwigley",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Racing Sans One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Radley",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Raleway",variants:["100","200","300","regular","500","600","700","800","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Raleway Dots",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rambla",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rammetto One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ranchers",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rancho",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Rationale",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Redressed",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Reenie Beanie",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Revalia",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ribeye",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ribeye Marrow",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Righteous",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Risque",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rochester",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Rock Salt",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Rokkitt",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Romanesco",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ropa Sans",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rosario",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Rosarivo",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rouge Script",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Ruda",variants:["regular","700","900"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rufina",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ruge Boogie",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ruluko",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rum Raisin",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ruslan Display",variants:["regular"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Russo One",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ruthie",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rye",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sacramento",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sail",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Salsa",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Sanchez",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sancreek",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sansita One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Sarina",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Satisfy",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Scada",variants:["regular","italic","700","700italic"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Schoolbell",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Seaweed Script",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sevillana",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Seymour One",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Shadows Into Light",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Shadows Into Light Two",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Shanti",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Share",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Share Tech",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Share Tech Mono",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Shojumaru",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Short Stack",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Siemreap",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Sigmar One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Signika",variants:["300","regular","600","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Signika Negative",variants:["300","regular","600","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Simonetta",variants:["regular","italic","900","900italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sirin Stencil",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Six Caps",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Skranji",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Slackey",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Smokum",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Smythe",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Sniglet",variants:["800"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Snippet",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Snowburst One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sofadi One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Sofia",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Sonsie One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sorts Mill Goudy",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Source Code Pro",variants:["200","300","regular","600","700","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Source Sans Pro",variants:["200","200italic","300","300italic","regular","italic","600","600italic","700","700italic","900","900italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Special Elite",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Spicy Rice",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Spinnaker",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Spirax",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Squada One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Stalemate",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Stalinist One",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Stardos Stencil",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Stint Ultra Condensed",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Stint Ultra Expanded",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Stoke",variants:["300","regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Strait",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Sue Ellen Francisco",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Sunshiney",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Supermercado One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Suwannaphum",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Swanky and Moo Moo",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Syncopate",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Tangerine",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Taprom",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Telex",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Tenor Sans",variants:["regular"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Text Me One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"The Girl Next Door",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Tienne",variants:["regular","700","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Tinos",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Titan One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Titillium Web",variants:["200","200italic","300","300italic","regular","italic","600","600italic","700","700italic","900"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Trade Winds",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Trocchi",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Trochut",variants:["regular","italic","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Trykker",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Tulpen One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Ubuntu",variants:["300","300italic","regular","italic","500","500italic","700","700italic"],subsets:["cyrillic","greek-ext","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Ubuntu Condensed",variants:["regular"],subsets:["cyrillic","greek-ext","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Ubuntu Mono",variants:["regular","italic","700","700italic"],subsets:["cyrillic","greek-ext","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Ultra",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Uncial Antiqua",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Underdog",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Unica One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"UnifrakturCook",variants:["700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"UnifrakturMaguntia",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Unkempt",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Unlock",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Unna",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"VT323",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Vampiro One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Varela",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Varela Round",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Vast Shadow",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Vibur",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Vidaloka",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Viga",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Voces",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Volkhov",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Vollkorn",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Voltaire",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Waiting for the Sunrise",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Wallpoet",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Walter Turncoat",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Warnes",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Wellfleet",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Wire One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Yanone Kaffeesatz",variants:["200","300","regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Yellowtail",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Yeseva One",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Yesteryear",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Zeyada",variants:["regular"],subsets:["latin"]}]},BFHLanguagesList={om:"Afaan Oromoo",aa:"Afaraf",af:"Afrikaans",ak:"Akan",an:"aragonés",ig:"Asụsụ Igbo",gn:"Avañe'ẽ",ae:"avesta",ay:"aymar aru",az:"azərbaycan dili",id:"Bahasa Indonesia",ms:"bahasa Melayu",bm:"bamanankan",jv:"basa Jawa",su:"Basa Sunda",bi:"Bislama",bs:"bosanski jezik",br:"brezhoneg",ca:"català",ch:"Chamoru",ny:"chiCheŵa",sn:"chiShona",co:"corsu",cy:"Cymraeg",da:"dansk",se:"Davvisámegiella",de:"Deutsch",nv:"Diné bizaad",et:"eesti",na:"Ekakairũ Naoero",en:"English",es:"español",eo:"Esperanto",eu:"euskara",ee:"Eʋegbe",to:"faka Tonga",mg:"fiteny malagasy",fr:"français",fy:"Frysk",ff:"Fulfulde",fo:"føroyskt",ga:"Gaeilge",gv:"Gaelg",sm:"gagana fa'a Samoa",gl:"galego",sq:"gjuha shqipe",gd:"Gàidhlig",ki:"Gĩkũyũ",ha:"Hausa",ho:"Hiri Motu",hr:"hrvatski jezik",io:"Ido",rw:"Ikinyarwanda",rn:"Ikirundi",ia:"Interlingua",nd:"isiNdebele",nr:"isiNdebele",xh:"isiXhosa",zu:"isiZulu",it:"italiano",ik:"Iñupiaq",pl:"polski",mh:"Kajin M̧ajeļ",kl:"kalaallisut",kr:"Kanuri",kw:"Kernewek",kg:"KiKongo",sw:"Kiswahili",ht:"Kreyòl ayisyen",kj:"Kuanyama",ku:"Kurdî",la:"latine",lv:"latviešu valoda",lt:"lietuvių kalba",ro:"limba română",li:"Limburgs",ln:"Lingála",lg:"Luganda",lb:"Lëtzebuergesch",hu:"magyar",mt:"Malti",nl:"Nederlands",no:"Norsk",nb:"Norsk bokmål",nn:"Norsk nynorsk",uz:"O'zbek",oc:"occitan",ie:"Interlingue",hz:"Otjiherero",ng:"Owambo",pt:"português",ty:"Reo Tahiti",rm:"rumantsch grischun",qu:"Runa Simi",sc:"sardu",za:"Saɯ cueŋƅ",st:"Sesotho",tn:"Setswana",ss:"SiSwati",sl:"slovenski jezik",sk:"slovenčina",so:"Soomaaliga",fi:"suomi",sv:"Svenska",mi:"te reo Māori",vi:"Tiếng Việt",lu:"Tshiluba",ve:"Tshivenḓa",tw:"Twi",tk:"Türkmen",tr:"Türkçe",ug:"Uyƣurqə",vo:"Volapük",fj:"vosa Vakaviti",wa:"walon",tl:"Wikang Tagalog",wo:"Wollof",ts:"Xitsonga",yo:"Yorùbá",sg:"yângâ tî sängö",is:"Íslenska",cs:"čeština",el:"ελληνικά",av:"авар мацӀ",ab:"аҧсуа бызшәа",ba:"башҡорт теле",be:"беларуская мова",bg:"български език",os:"ирон æвзаг",kv:"коми кыв",ky:"Кыргызча",mk:"македонски јазик",mn:"монгол",ce:"нохчийн мотт",ru:"Русский язык",sr:"српски језик",tt:"татар теле",tg:"тоҷикӣ",uk:"українська мова",cv:"чӑваш чӗлхи",cu:"ѩзыкъ словѣньскъ",kk:"қазақ тілі",hy:"Հայերեն",yi:"ייִדיש",he:"עברית",ur:"اردو",ar:"العربية",fa:"فارسی",ps:"پښتو",ks:"कश्मीरी",ne:"नेपाली",pi:"पाऴि",bh:"भोजपुरी",mr:"मराठी",sa:"संस्कृतम्",sd:"सिन्धी",hi:"हिन्दी",as:"অসমীয়া",bn:"বাংলা",pa:"ਪੰਜਾਬੀ",gu:"ગુજરાતી",or:"ଓଡ଼ିଆ",ta:"தமிழ்",te:"తెలుగు",kn:"ಕನ್ನಡ",ml:"മലയാളം",si:"සිංහල",th:"ไทย",lo:"ພາສາລາວ",bo:"བོད་ཡིག",dz:"རྫོང་ཁ",my:"ဗမာစာ",ka:"ქართული",ti:"ትግርኛ",am:"አማርኛ",iu:"ᐃᓄᒃᑎᑐᑦ",oj:"ᐊᓂᔑᓈᐯᒧᐎᓐ",cr:"ᓀᐦᐃᔭᐍᐏᐣ",km:"ខ្មែរ",zh:"中文 (Zhōngwén)",ja:"日本語 (にほんご)",ii:"ꆈꌠ꒿ Nuosuhxop",ko:"한국어 (韓國語)"},BFHPhoneFormatList={AF:"+93 0dd ddd dddd",AL:"+355 0dd ddd ddd",DZ:"+213 0ddd dd dd dd",AS:"+1 (ddd) ddd-dddd",AD:"+376 ddddddddd",AO:"+244 ddd ddd ddd",AI:"+1 (ddd) ddd-dddd",AQ:"+672 ddddddddd",AG:"+1 (ddd) ddd-dddd",AR:"+54 ddddddddd",AM:"+374 0dd dddddd",AW:"+297 ddd dddd",AU:"+61 ddd ddd ddd",AT:"+43 0dddd ddddddddd",AZ:"+994 ddddddddd",BH:"+973 ddddddddd",BD:"+880 ddddddddd",BB:"+1 ddddddddd",BY:"+375 ddddddddd",BE:"+32 ddddddddd",BZ:"+501 ddddddddd",BJ:"+229 ddddddddd",BM:"+1 (ddd) ddd-dddd",BT:"+975 ddddddddd",BO:"+591 ddddddddd",BA:"+387 ddddddddd",BW:"+267 ddddddddd",BV:"+0 ddddddddd",BR:"+55 ddddddddd",IO:"+0 ddddddddd",VG:"+1 (ddd) ddd-dddd",BN:"+673 ddddddddd",BG:"+359 ddddddddd",BF:"+226 ddddddddd",BI:"+257 ddddddddd",CI:"+225 ddddddddd",KH:"+855 ddddddddd",CM:"+237 ddddddddd",CA:"+1 (ddd) ddd-dddd",CV:"+238 ddddddddd",KY:"+1 (ddd) ddd-dddd",CF:"+236 ddddddddd",TD:"+235 ddddddddd",CL:"+56 ddddddddd",CN:"+86 ddddddddd",CX:"+61 ddddddddd",CC:"+61 ddddddddd",CO:"+57 ddddddddd",KM:"+269 ddddddddd",CG:"+242 ddddddddd",CK:"+682 ddddddddd",CR:"+506 ddddddddd",HR:"+385 ddddddddd",CU:"+53 ddddddddd",CY:"+357 ddddddddd",CZ:"+420 ddddddddd",CD:"+243 ddddddddd",DK:"+45 ddddddddd",DJ:"+253 ddddddddd",DM:"+1 (ddd) ddd-dddd",DO:"+1 (ddd) ddd-dddd",TL:"+670 ddddddddd",EC:"+593 ddddddddd",EG:"+20 ddddddddd",SV:"+503 ddddddddd",GQ:"+240 ddddddddd",ER:"+291 ddddddddd",EE:"+372 ddddddddd",ET:"+251 ddddddddd",FO:"+298 ddddddddd",FK:"+500 ddddddddd",FJ:"+679 ddddddddd",FI:"+358 ddddddddd",MK:"+389 ddddddddd",FR:"+33 d dd dd dd dd",GF:"+594 ddddddddd",PF:"+689 ddddddddd",TF:"+262 ddddddddd",GA:"+241 ddddddddd",GE:"+995 ddddddddd",DE:"+49 ddddddddd",GH:"+233 ddddddddd",GI:"+350 ddddddddd",GR:"+30 ddddddddd",GL:"+299 ddddddddd",GD:"+1 (ddd) ddd-dddd",GP:"+590 ddddddddd",GU:"+1 (ddd) ddd-dddd",GT:"+502 ddddddddd",GN:"+224 ddddddddd",GW:"+245 ddddddddd",GY:"+592 ddddddddd",HT:"+509 ddddddddd",HM:"+0 ddddddddd",HN:"+504 ddddddddd",HK:"+852 ddddddddd",HU:"+36 ddddddddd",IS:"+354 ddddddddd",IN:"+91 ddddddddd",ID:"+62 ddddddddd",IR:"+98 ddddddddd",IQ:"+964 ddddddddd",IE:"+353 ddddddddd",IL:"+972 ddddddddd",IT:"+39 ddddddddd",JM:"+1 (ddd) ddd-dddd",JP:"+81 ddddddddd",JO:"+962 ddddddddd",KZ:"+7 ddddddddd",KE:"+254 ddddddddd",KI:"+686 ddddddddd",KW:"+965 ddddddddd",KG:"+996 ddddddddd",LA:"+856 ddddddddd",LV:"+371 ddddddddd",LB:"+961 ddddddddd",LS:"+266 ddddddddd",LR:"+231 ddddddddd",LY:"+218 ddddddddd",LI:"+423 ddddddddd",LT:"+370 ddddddddd",LU:"+352 ddddddddd",MO:"+853 ddddddddd",MG:"+261 ddddddddd",MW:"+265 ddddddddd",MY:"+60 ddddddddd",MV:"+960 ddddddddd",ML:"+223 ddddddddd",MT:"+356 ddddddddd",MH:"+692 ddddddddd",MQ:"+596 ddddddddd",MR:"+222 ddddddddd",MU:"+230 ddddddddd",YT:"+262 ddddddddd",MX:"+52 ddddddddd",FM:"+691 ddddddddd",MD:"+373 ddddddddd",MC:"+377 ddddddddd",MN:"+976 ddddddddd",MS:"+1 (ddd) ddd-dddd",MA:"+212 ddddddddd",MZ:"+258 ddddddddd",MM:"+95 ddddddddd",NA:"+264 ddddddddd",NR:"+674 ddddddddd",NP:"+977 ddddddddd",NL:"+31 ddddddddd",AN:"+599 ddddddddd",NC:"+687 ddddddddd",NZ:"+64 ddddddddd",NI:"+505 ddddddddd",NE:"+227 ddddddddd",NG:"+234 ddddddddd",NU:"+683 ddddddddd",NF:"+672 ddddddddd",KP:"+850 ddddddddd",MP:"+1 (ddd) ddd-dddd",NO:"+47 ddddddddd",OM:"+968 ddddddddd",PK:"+92 ddddddddd",PW:"+680 ddddddddd",PA:"+507 ddddddddd",PG:"+675 ddddddddd",PY:"+595 ddddddddd",PE:"+51 ddddddddd",PH:"+63 ddddddddd",PN:"+870 ddddddddd",PL:"+48 ddddddddd",PT:"+351 ddddddddd",PR:"+1 (ddd) ddd-dddd",QA:"+974 ddddddddd",RE:"+262 ddddddddd",RO:"+40 ddddddddd",RU:"+7 ddddddddd",RW:"+250 ddddddddd",ST:"+239 ddddddddd",SH:"+290 ddddddddd",KN:"+1 (ddd) ddd-dddd",LC:"+1 (ddd) ddd-dddd",PM:"+508 ddddddddd",VC:"+1 (ddd) ddd-dddd",WS:"+685 ddddddddd",SM:"+378 ddddddddd",SA:"+966 ddddddddd",SN:"+221 ddddddddd",SC:"+248 ddddddddd",SL:"+232 ddddddddd",SG:"+65 ddddddddd",SK:"+421 ddddddddd",SI:"+386 ddddddddd",SB:"+677 ddddddddd",SO:"+252 ddddddddd",ZA:"+27 ddddddddd",GS:"+0 ddddddddd",KR:"+82 ddddddddd",ES:"+34 ddddddddd",LK:"+94 ddddddddd",SD:"+249 ddddddddd",SR:"+597 ddddddddd",SJ:"+0 ddddddddd",SZ:"+268 ddddddddd",SE:"+46 ddddddddd",CH:"+41 ddddddddd",SY:"+963 ddddddddd",TW:"+886 ddddddddd",TJ:"+992 ddddddddd",TZ:"+255 ddddddddd",TH:"+66 ddddddddd",BS:"+1 (ddd) ddd-dddd",GM:"+220 ddddddddd",TG:"+228 ddddddddd",TK:"+690 ddddddddd",TO:"+676 ddddddddd",TT:"+1 (ddd) ddd-dddd",TN:"+216 ddddddddd",TR:"+90 ddddddddd",TM:"+993 ddddddddd",TC:"+1 (ddd) ddd-dddd",TV:"+688 ddddddddd",VI:"+1 (ddd) ddd-dddd",UG:"+256 ddddddddd",UA:"+380 ddddddddd",AE:"+971 ddddddddd",GB:"+44 (ddd) dddd dddd",US:"+1 (ddd) ddd-dddd",UM:"+0 ddddddddd",UY:"+598 ddddddddd",UZ:"+998 ddddddddd",VU:"+678 ddddddddd",VA:"+39 ddddddddd",VE:"+58 ddddddddd",VN:"+84 ddddddddd",WF:"+681 ddddddddd",EH:"+0 ddddddddd",YE:"+967 ddddddddd",YU:"+0 ddddddddd",ZM:"+260 ddddddddd",ZW:"+263 ddddddddd"},BFHStatesList={AF:{1:{code:"BAL",name:"Balkh"},2:{code:"BAM",name:"Bamian"},3:{code:"BDG",name:"Badghis"},4:{code:"BDS",name:"Badakhshan"},5:{code:"BGL",name:"Baghlan"},6:{code:"FRA",name:"Farah"},7:{code:"FYB",name:"Faryab"},8:{code:"GHA",name:"Ghazni"},9:{code:"GHO",name:"Ghowr"},10:{code:"HEL",name:"Helmand"},11:{code:"HER",name:"Herat"},12:{code:"JOW",name:"Jowzjan"},13:{code:"KAB",name:"Kabul"},14:{code:"KAN",name:"Kandahar"},15:{code:"KAP",name:"Kapisa"},16:{code:"KDZ",name:"Kondoz"},17:{code:"KHO",name:"Khost"},18:{code:"KNR",name:"Konar"},19:{code:"LAG",name:"Laghman"},20:{code:"LOW",name:"Lowgar"},21:{code:"NAN",name:"Nangrahar"},22:{code:"NIM",name:"Nimruz"},23:{code:"NUR",name:"Nurestan"},24:{code:"ORU",name:"Oruzgan"},25:{code:"PAR",name:"Parwan"},26:{code:"PIA",name:"Paktia"},27:{code:"PKA",name:"Paktika"},28:{code:"SAM",name:"Samangan"},29:{code:"SAR",name:"Sar-e Pol"},30:{code:"TAK",name:"Takhar"},31:{code:"WAR",name:"Wardak"},32:{code:"ZAB",name:"Zabol"}},AL:{1:{code:"BR",name:"Berat"},2:{code:"BU",name:"Bulqize"},3:{code:"DI",name:"Diber"},4:{code:"DL",name:"Delvine"},5:{code:"DR",name:"Durres"},6:{code:"DV",name:"Devoll"},7:{code:"EL",name:"Elbasan"},8:{code:"ER",name:"Kolonje"},9:{code:"FR",name:"Fier"},10:{code:"GJ",name:"Gjirokaster"},11:{code:"GR",name:"Gramsh"},12:{code:"HA",name:"Has"},13:{code:"KA",name:"Kavaje"},14:{code:"KB",name:"Kurbin"},15:{code:"KC",name:"Kucove"},16:{code:"KO",name:"Korce"},17:{code:"KR",name:"Kruje"},18:{code:"KU",name:"Kukes"},19:{code:"LB",name:"Librazhd"},20:{code:"LE",name:"Lezhe"},21:{code:"LU",name:"Lushnje"},22:{code:"MK",name:"Mallakaster"},23:{code:"MM",name:"Malesi e Madhe"},24:{code:"MR",name:"Mirdite"},25:{code:"MT",name:"Mat"},26:{code:"PG",name:"Pogradec"},27:{code:"PQ",name:"Peqin"},28:{code:"PR",name:"Permet"},29:{code:"PU",name:"Puke"},30:{code:"SH",name:"Shkoder"},31:{code:"SK",name:"Skrapar"},32:{code:"SR",name:"Sarande"},33:{code:"TE",name:"Tepelene"},34:{code:"TP",name:"Tropoje"},35:{code:"TR",name:"Tirane"},36:{code:"VL",name:"Vlore"}},DZ:{1:{code:"ADE",name:"Ain Defla"},2:{code:"ADR",name:"Adrar"},3:{code:"ALG",name:"Alger"},4:{code:"ANN",name:"Annaba"},5:{code:"ATE",name:"Ain Temouchent"},6:{code:"BAT",name:"Batna"},7:{code:"BBA",name:"Bordj Bou Arreridj"},8:{code:"BEC",name:"Bechar"},9:{code:"BEJ",name:"Bejaia"},10:{code:"BIS",name:"Biskra"},11:{code:"BLI",name:"Blida"},12:{code:"BMD",name:"Boumerdes"},13:{code:"BOA",name:"Bouira"},14:{code:"CHL",name:"Chlef"},15:{code:"CON",name:"Constantine"},16:{code:"DJE",name:"Djelfa"},17:{code:"EBA",name:"El Bayadh"},18:{code:"EOU",name:"El Oued"},19:{code:"ETA",name:"El Tarf"},20:{code:"GHA",name:"Ghardaia"},21:{code:"GUE",name:"Guelma"},22:{code:"ILL",name:"Illizi"},23:{code:"JIJ",name:"Jijel"},24:{code:"KHE",name:"Khenchela"},25:{code:"LAG",name:"Laghouat"},26:{code:"MED",name:"Medea"},27:{code:"MIL",name:"Mila"},28:{code:"MOS",name:"Mostaganem"},29:{code:"MSI",name:"M'Sila"},30:{code:"MUA",name:"Muaskar"},31:{code:"NAA",name:"Naama"},32:{code:"OEB",name:"Oum el-Bouaghi"},33:{code:"ORA",name:"Oran"},34:{code:"OUA",name:"Ouargla"},35:{code:"REL",name:"Relizane"},36:{code:"SAH",name:"Souk Ahras"},37:{code:"SAI",name:"Saida"},38:{code:"SBA",name:"Sidi Bel Abbes"},39:{code:"SET",name:"Setif"},40:{code:"SKI",name:"Skikda"},41:{code:"TAM",name:"Tamanghasset"},42:{code:"TEB",name:"Tebessa"},43:{code:"TIA",name:"Tiaret"},44:{code:"TIN",name:"Tindouf"},45:{code:"TIP",name:"Tipaza"},46:{code:"TIS",name:"Tissemsilt"},47:{code:"TLE",name:"Tlemcen"},48:{code:"TOU",name:"Tizi Ouzou"}},AS:{1:{code:"E",name:"Eastern"},2:{code:"M",name:"Manu'a"},3:{code:"R",name:"Rose Island"},4:{code:"S",name:"Swains Island"},5:{code:"W",name:"Western"}},AD:{1:{code:"ALV",name:"Andorra la Vella"},2:{code:"CAN",name:"Canillo"},3:{code:"ENC",name:"Encamp"},4:{code:"ESE",name:"Escaldes-Engordany"},5:{code:"LMA",name:"La Massana"},6:{code:"ORD",name:"Ordino"},7:{code:"SJL",name:"Sant Julià de Lòria"}},AO:{1:{code:"BGO",name:"Bengo"},2:{code:"BGU",name:"Benguela"},3:{code:"BIE",name:"Bie"},4:{code:"CAB",name:"Cabinda"},5:{code:"CCU",name:"Cuando-Cubango"},6:{code:"CNO",name:"Cuanza Norte"},7:{code:"CUS",name:"Cuanza Sul"},8:{code:"CNN",name:"Cunene"},9:{code:"HUA",name:"Huambo"},10:{code:"HUI",name:"Huila"},11:{code:"LUA",name:"Luanda"},12:{code:"LNO",name:"Lunda Norte"},13:{code:"LSU",name:"Lunda Sul"},14:{code:"MAL",name:"Malange"},15:{code:"MOX",name:"Moxico"},16:{code:"NAM",name:"Namibe"},17:{code:"UIG",name:"Uige"},18:{code:"ZAI",name:"Zaire"}},AI:{1:{code:"ANG",name:"Anguillita"},2:{code:"ANG",name:"Anguila"},3:{code:"DOG",name:"Dog"},4:{code:"LIT",name:"Little Scrub"},5:{code:"PRI",name:"Prickly Pear"},6:{code:"SAN",name:"Sandy"},7:{code:"SCR",name:"Scrub"},8:{code:"SEA",name:"Seal"},9:{code:"SOM",name:"Sombrero"}},AQ:{1:{code:"ASG",name:"Saint George"},2:{code:"ASH",name:"Saint Philip"},3:{code:"ASJ",name:"Saint John"},4:{code:"ASL",name:"Saint Paul"},5:{code:"ASM",name:"Saint Mary"},6:{code:"ASR",name:"Saint Peter"},7:{code:"BAR",name:"Barbuda"},8:{code:"RED",name:"Redonda"}},AR:{1:{code:"AN",name:"Antartida e Islas del Atlantico"},2:{code:"BA",name:"Buenos Aires"},3:{code:"CA",name:"Catamarca"},4:{code:"CH",name:"Chaco"},5:{code:"CU",name:"Chubut"},6:{code:"CO",name:"Cordoba"},7:{code:"CR",name:"Corrientes"},8:{code:"CF",name:"Capital Federal"},9:{code:"ER",name:"Entre Rios"},10:{code:"FO",name:"Formosa"},11:{code:"JU",name:"Jujuy"},12:{code:"LP",name:"La Pampa"},13:{code:"LR",name:"La Rioja"},14:{code:"ME",name:"Mendoza"},15:{code:"MI",name:"Misiones"},16:{code:"NE",name:"Neuquen"},17:{code:"RN",name:"Rio Negro"},18:{code:"SA",name:"Salta"},19:{code:"SJ",name:"San Juan"},20:{code:"SL",name:"San Luis"},21:{code:"SC",name:"Santa Cruz"},22:{code:"SF",name:"Santa Fe"},23:{code:"SD",name:"Santiago del Estero"},24:{code:"TF",name:"Tierra del Fuego"},25:{code:"TU",name:"Tucuman"}},AM:{1:{code:"AGT",name:"Aragatsotn"},2:{code:"ARR",name:"Ararat"},3:{code:"ARM",name:"Armavir"},4:{code:"GEG",name:"Geghark 'unik'"},5:{code:"KOT",name:"Kotayk'"},6:{code:"LOR",name:"Lorri"},7:{code:"SHI",name:"Shirak"},8:{code:"SYU",name:"Syunik'"},9:{code:"TAV",name:"Tavush"},10:{code:"VAY",name:"Vayots' Dzor"},11:{code:"YER",name:"Yerevan"}},AW:{1:{code:"ARU",name:"Aruba"},2:{code:"DRU",name:"Druif Beach"},3:{code:"MAN",name:"Manchebo Beach"},4:{code:"NOO",name:"Noord"},5:{code:"ORA",name:"Oranjestad"},6:{code:"PAL",name:"Palm Beach"},7:{code:"ROO",name:"Rooi Thomas"},8:{code:"SIN",name:"Sint Nicolaas"},9:{code:"SIN",name:"Sint Nicolas"},10:{code:"WAY",name:"Wayaca"}},AU:{1:{code:"ACT",name:"Australian Capital Territory"},2:{code:"NSW",name:"New South Wales"},3:{code:"NT",name:"Northern Territory"},4:{code:"QLD",name:"Queensland"},5:{code:"SA",name:"South Australia"},6:{code:"TAS",name:"Tasmania"},7:{code:"VIC",name:"Victoria"},8:{code:"WA",name:"Western Australia"}},AT:{1:{code:"BUR",name:"Burgenland"},2:{code:"KAR",name:"Krnten"},3:{code:"NOS",name:"Niederöesterreich"},4:{code:"OOS",name:"Oberöesterreich"},5:{code:"SAL",name:"Salzburg"},6:{code:"STE",name:"Steiermark"},7:{code:"TIR",name:"Tirol"},8:{code:"VOR",name:"Vorarlberg"},9:{code:"WIE",name:"Wien"}},AZ:{1:{code:"AB",name:"Ali Bayramli"},2:{code:"ABS",name:"Abseron"},3:{code:"AGC",name:"AgcabAdi"},4:{code:"AGM",name:"Agdam"},5:{code:"AGS",name:"Agdas"},6:{code:"AGA",name:"Agstafa"},7:{code:"AGU",name:"Agsu"},8:{code:"AST",name:"Astara"},9:{code:"BA",name:"Baki"},10:{code:"BAB",name:"BabAk"},11:{code:"BAL",name:"BalakAn"},12:{code:"BAR",name:"BArdA"},13:{code:"BEY",name:"Beylaqan"},14:{code:"BIL",name:"Bilasuvar"},15:{code:"CAB",name:"Cabrayil"},16:{code:"CAL",name:"Calilabab"},17:{code:"CUL",name:"Culfa"},18:{code:"DAS",name:"Daskasan"},19:{code:"DAV",name:"Davaci"},20:{code:"FUZ",name:"Fuzuli"},21:{code:"GA",name:"Ganca"},22:{code:"GAD",name:"Gadabay"},23:{code:"GOR",name:"Goranboy"},24:{code:"GOY",name:"Goycay"},25:{code:"HAC",name:"Haciqabul"},26:{code:"IMI",name:"Imisli"},27:{code:"ISM",name:"Ismayilli"},28:{code:"KAL",name:"Kalbacar"},29:{code:"KUR",name:"Kurdamir"},30:{code:"LA",name:"Lankaran"},31:{code:"LAC",name:"Lacin"},32:{code:"LAN",name:"Lankaran"},33:{code:"LER",name:"Lerik"},34:{code:"MAS",name:"Masalli"},35:{code:"MI",name:"Mingacevir"},36:{code:"NA",name:"Naftalan"},37:{code:"NX",name:"Naxcivan"},38:{code:"NEF",name:"Neftcala"},39:{code:"OGU",name:"Oguz"},40:{code:"ORD",name:"Ordubad"},41:{code:"QAB",name:"Qabala"},42:{code:"QAX",name:"Qax"},43:{code:"QAZ",name:"Qazax"},44:{code:"QOB",name:"Qobustan"},45:{code:"QBA",name:"Quba"},46:{code:"QBI",name:"Qubadli"},47:{code:"QUS",name:"Qusar"},48:{code:"SA",name:"Saki"},49:{code:"SAT",name:"Saatli"},50:{code:"SAB",name:"Sabirabad"},51:{code:"SAD",name:"Sadarak"},52:{code:"SAH",name:"Sahbuz"},53:{code:"SAK",name:"Saki"},54:{code:"SAL",name:"Salyan"},55:{code:"SM",name:"Sumqayit"},56:{code:"SMI",name:"Samaxi"},57:{code:"SKR",name:"Samkir"},58:{code:"SMX",name:"Samux"},59:{code:"SAR",name:"Sarur"},60:{code:"SIY",name:"Siyazan"},61:{code:"SS",name:"Susa"},62:{code:"SUS",name:"Susa"},63:{code:"TAR",name:"Tartar"},64:{code:"TOV",name:"Tovuz"},65:{code:"UCA",name:"Ucar"},66:{code:"XA",name:"Xankandi"},67:{code:"XAC",name:"Xacmaz"},68:{code:"XAN",name:"Xanlar"},69:{code:"XIZ",name:"Xizi"},70:{code:"XCI",name:"Xocali"},71:{code:"XVD",name:"Xocavand"},72:{code:"YAR",name:"Yardimli"},73:{code:"YEV",name:"Yevlax"},74:{code:"ZAN",name:"Zangilan"},75:{code:"ZAQ",name:"Zaqatala"},76:{code:"ZAR",name:"Zardab"}},BS:{1:{code:"ACK",name:"Acklins"},2:{code:"BER",name:"Berry Islands"},3:{code:"BIM",name:"Bimini"},4:{code:"BLK",name:"Black Point"},5:{code:"CAT",name:"Cat Island"},6:{code:"CAB",name:"Central Abaco"},7:{code:"CAN",name:"Central Andros"},8:{code:"CEL",name:"Central Eleuthera"},9:{code:"FRE",name:"City of Freeport"},10:{code:"CRO",name:"Crooked Island"},11:{code:"EGB",name:"East Grand Bahama"},12:{code:"EXU",name:"Exuma"},13:{code:"GRD",name:"Grand Cay"},14:{code:"HAR",name:"Harbour Island"},15:{code:"HOP",name:"Hope Town"},16:{code:"INA",name:"Inagua"},17:{code:"LNG",name:"Long Island"},18:{code:"MAN",name:"Mangrove Cay"},19:{code:"MAY",name:"Mayaguana"},20:{code:"MOO",name:"Moore's Island"},21:{code:"NAB",name:"North Abaco"},22:{code:"NAN",name:"North Andros"},23:{code:"NEL",name:"North Eleuthera"},24:{code:"RAG",name:"Ragged Island"},25:{code:"RUM",name:"Rum Cay"},26:{code:"SAL",name:"San Salvador"},27:{code:"SAB",name:"South Abaco"},28:{code:"SAN",name:"South Andros"},29:{code:"SEL",name:"South Eleuthera"},30:{code:"SWE",name:"Spanish Wells"},31:{code:"WGB",name:"West Grand Bahama"}},BH:{1:{code:"CAP",name:"Capital"},2:{code:"CEN",name:"Central"},3:{code:"MUH",name:"Muharraq"},4:{code:"NOR",name:"Northern"},5:{code:"SOU",name:"Southern"}},BD:{1:{code:"BAR",name:"Barisal"},2:{code:"CHI",name:"Chittagong"},3:{code:"DHA",name:"Dhaka"},4:{code:"KHU",name:"Khulna"},5:{code:"RAJ",name:"Rajshahi"},6:{code:"SYL",name:"Sylhet"}},BB:{1:{code:"CC",name:"Christ Church"},2:{code:"AND",name:"Saint Andrew"},3:{code:"GEO",name:"Saint George"},4:{code:"JAM",name:"Saint James"},5:{code:"JOH",name:"Saint John"},6:{code:"JOS",name:"Saint Joseph"},7:{code:"LUC",name:"Saint Lucy"},8:{code:"MIC",name:"Saint Michael"},9:{code:"PET",name:"Saint Peter"},10:{code:"PHI",name:"Saint Philip"},11:{code:"THO",name:"Saint Thomas"}},BY:{1:{code:"BR",name:"Brestskaya (Brest)"},2:{code:"HO",name:"Homyel'skaya (Homyel')"},3:{code:"HM",name:"Horad Minsk"},4:{code:"HR",name:"Hrodzyenskaya (Hrodna)"},5:{code:"MA",name:"Mahilyowskaya (Mahilyow)"},6:{code:"MI",name:"Minskaya"},7:{code:"VI",name:"Vitsyebskaya (Vitsyebsk)"}},BE:{1:{code:"VAN",name:"Antwerpen"},2:{code:"WBR",name:"Brabant Wallon"},3:{code:"WHT",name:"Hainaut"},4:{code:"WLG",name:"Liege"},5:{code:"VLI",name:"Limburg"},6:{code:"WLX",name:"Luxembourg"},7:{code:"WNA",name:"Namur"},8:{code:"VOV",name:"Oost-Vlaanderen"},9:{code:"VBR",name:"Vlaams Brabant"},10:{code:"VWV",name:"West-Vlaanderen"}},BZ:{1:{code:"BZ",name:"Belize"},2:{code:"CY",name:"Cayo"},3:{code:"CR",name:"Corozal"},4:{code:"OW",name:"Orange Walk"},5:{code:"SC",name:"Stann Creek"},6:{code:"TO",name:"Toledo"}},BJ:{1:{code:"AL",name:"Alibori"},2:{code:"AK",name:"Atakora"},3:{code:"AQ",name:"Atlantique"},4:{code:"BO",name:"Borgou"},5:{code:"CO",name:"Collines"},6:{code:"DO",name:"Donga"},7:{code:"KO",name:"Kouffo"},8:{code:"LI",name:"Littoral"},9:{code:"MO",name:"Mono"},10:{code:"OU",name:"Oueme"},11:{code:"PL",name:"Plateau"},12:{code:"ZO",name:"Zou"}},BM:{1:{code:"DS",name:"Devonshire"},2:{code:"HC",name:"Hamilton City"},3:{code:"HA",name:"Hamilton"},4:{code:"PG",name:"Paget"},5:{code:"PB",name:"Pembroke"},6:{code:"GC",name:"Saint George City"},7:{code:"SG",name:"Saint George's"},8:{code:"SA",name:"Sandys"},9:{code:"SM",name:"Smith's"},10:{code:"SH",name:"Southampton"},11:{code:"WA",name:"Warwick"}},BT:{1:{code:"BUM",name:"Bumthang"},2:{code:"CHU",name:"Chukha"},3:{code:"DAG",name:"Dagana"},4:{code:"GAS",name:"Gasa"},5:{code:"HAA",name:"Haa"},6:{code:"LHU",name:"Lhuntse"},7:{code:"MON",name:"Mongar"},8:{code:"PAR",name:"Paro"},9:{code:"PEM",name:"Pemagatshel"},10:{code:"PUN",name:"Punakha"},11:{code:"SJO",name:"Samdrup Jongkhar"},12:{code:"SAT",name:"Samtse"},13:{code:"SAR",name:"Sarpang"},14:{code:"THI",name:"Thimphu"},15:{code:"TRG",name:"Trashigang"},16:{code:"TRY",name:"Trashiyangste"},17:{code:"TRO",name:"Trongsa"},18:{code:"TSI",name:"Tsirang"},19:{code:"WPH",name:"Wangdue Phodrang"},20:{code:"ZHE",name:"Zhemgang"}},BO:{1:{code:"BEN",name:"Beni"},2:{code:"CHU",name:"Chuquisaca"},3:{code:"COC",name:"Cochabamba"},4:{code:"LPZ",name:"La Paz"},5:{code:"ORU",name:"Oruro"},6:{code:"PAN",name:"Pando"},7:{code:"POT",name:"Potosi"},8:{code:"SCZ",name:"Santa Cruz"},9:{code:"TAR",name:"Tarija"}},BA:{1:{code:"BRO",name:"Brcko district"},2:{code:"FBP",name:"Bosanskopodrinjski Kanton"},3:{code:"FHN",name:"Hercegovacko-neretvanski Kanton"},4:{code:"FPO",name:"Posavski Kanton"},5:{code:"FSA",name:"Kanton Sarajevo"},6:{code:"FSB",name:"Srednjebosanski Kanton"},7:{code:"FTU",name:"Tuzlanski Kanton"},8:{code:"FUS",name:"Unsko-Sanski Kanton"},9:{code:"FZA",name:"Zapadnobosanska"},10:{code:"FZE",name:"Zenicko-Dobojski Kanton"},11:{code:"FZH",name:"Zapadnohercegovacka Zupanija"},12:{code:"SBI",name:"Bijeljina"},13:{code:"SBL",name:"Banja Luka"},14:{code:"SDO",name:"Doboj"},15:{code:"SFO",name:"Foca"},16:{code:"SSR",name:"Sarajevo-Romanija or Sokolac"},17:{code:"STR",name:"Trebinje"},18:{code:"SVL",name:"Vlasenica"}},BW:{1:{code:"CE",name:"Central"},2:{code:"GH",name:"Ghanzi"},3:{code:"KD",name:"Kgalagadi"},4:{code:"KT",name:"Kgatleng"},5:{code:"KW",name:"Kweneng"},6:{code:"NG",name:"Ngamiland"},7:{code:"NE",name:"North East"},8:{code:"NW",name:"North West"},9:{code:"SE",name:"South East"},10:{code:"SO",name:"Southern"}},BR:{1:{code:"AC",name:"Acre"},2:{code:"AL",name:"Alagoas"},3:{code:"AP",name:"Amapa"},4:{code:"AM",name:"Amazonas"},5:{code:"BA",name:"Bahia"},6:{code:"CE",name:"Ceara"},7:{code:"DF",name:"Distrito Federal"},8:{code:"ES",name:"Espirito Santo"},9:{code:"GO",name:"Goias"},10:{code:"MA",name:"Maranhao"},11:{code:"MT",name:"Mato Grosso"},12:{code:"MS",name:"Mato Grosso do Sul"},13:{code:"MG",name:"Minas Gerais"},14:{code:"PA",name:"Para"},15:{code:"PB",name:"Paraiba"},16:{code:"PR",name:"Parana"},17:{code:"PE",name:"Pernambuco"},18:{code:"PI",name:"Piaui"},19:{code:"RJ",name:"Rio de Janeiro"},20:{code:"RN",name:"Rio Grande do Norte"},21:{code:"RS",name:"Rio Grande do Sul"},22:{code:"RO",name:"Rondonia"},23:{code:"RR",name:"Roraima"},24:{code:"SC",name:"Santa Catarina"},25:{code:"SP",name:"Sao Paulo"},26:{code:"SE",name:"Sergipe"},27:{code:"TO",name:"Tocantins"}},IO:{1:{code:"DG",name:"Diego Garcia"},2:{code:"DI",name:"Danger Island"},3:{code:"EA",name:"Eagle Islands"},4:{code:"EG",name:"Egmont Islands"},5:{code:"NI",name:"Nelsons Island"},6:{code:"PB",name:"Peros Banhos"},7:{code:"SI",name:"Salomon Islands"},8:{code:"TB",name:"Three Brothers"}},BN:{1:{code:"BEL",name:"Belait"},2:{code:"BRM",name:"Brunei and Muara"},3:{code:"TEM",name:"Temburong"},4:{code:"TUT",name:"Tutong"}},BG:{1:{code:"BG-01",name:"Blagoevgrad"},2:{code:"BG-02",name:"Burgas"},3:{code:"BG-03",name:"Dobrich"},4:{code:"BG-04",name:"Gabrovo"},5:{code:"BG-05",name:"Haskovo"},6:{code:"BG-06",name:"Kardjali"},7:{code:"BG-07",name:"Kyustendil"},8:{code:"BG-08",name:"Lovech"},9:{code:"BG-09",name:"Montana"},10:{code:"BG-10",name:"Pazardjik"},11:{code:"BG-11",name:"Pernik"},12:{code:"BG-12",name:"Pleven"},13:{code:"BG-13",name:"Plovdiv"},14:{code:"BG-14",name:"Razgrad"},15:{code:"BG-15",name:"Shumen"},16:{code:"BG-16",name:"Silistra"},17:{code:"BG-17",name:"Sliven"},18:{code:"BG-18",name:"Smolyan"},19:{code:"BG-19",name:"Sofia"},20:{code:"BG-20",name:"Sofia - town"},21:{code:"BG-21",name:"Stara Zagora"},22:{code:"BG-22",name:"Targovishte"},23:{code:"BG-23",name:"Varna"},24:{code:"BG-24",name:"Veliko Tarnovo"},25:{code:"BG-25",name:"Vidin"},26:{code:"BG-26",name:"Vratza"},27:{code:"BG-27",name:"Yambol"}},BF:{1:{code:"BAL",name:"Bale"},2:{code:"BAM",name:"Bam"},3:{code:"BAN",name:"Banwa"},4:{code:"BAZ",name:"Bazega"},5:{code:"BOR",name:"Bougouriba"},6:{code:"BLG",name:"Boulgou"},7:{code:"BOK",name:"Boulkiemde"},8:{code:"COM",name:"Comoe"},9:{code:"GAN",name:"Ganzourgou"},10:{code:"GNA",name:"Gnagna"},11:{code:"GOU",name:"Gourma"},12:{code:"HOU",name:"Houet"},13:{code:"IOA",name:"Ioba"},14:{code:"KAD",name:"Kadiogo"},15:{code:"KEN",name:"Kenedougou"},16:{code:"KOD",name:"Komondjari"},17:{code:"KOP",name:"Kompienga"},18:{code:"KOS",name:"Kossi"},19:{code:"KOL",name:"Koulpelogo"},20:{code:"KOT",name:"Kouritenga"},21:{code:"KOW",name:"Kourweogo"},22:{code:"LER",name:"Leraba"},23:{code:"LOR",name:"Loroum"},24:{code:"MOU",name:"Mouhoun"},25:{code:"NAH",name:"Nahouri"},26:{code:"NAM",name:"Namentenga"},27:{code:"NAY",name:"Nayala"},28:{code:"NOU",name:"Noumbiel"},29:{code:"OUB",name:"Oubritenga"},30:{code:"OUD",name:"Oudalan"},31:{code:"PAS",name:"Passore"},32:{code:"PON",name:"Poni"},33:{code:"SAG",name:"Sanguie"},34:{code:"SAM",name:"Sanmatenga"},35:{code:"SEN",name:"Seno"},36:{code:"SIS",name:"Sissili"},37:{code:"SOM",name:"Soum"},38:{code:"SOR",name:"Sourou"},39:{code:"TAP",name:"Tapoa"},40:{code:"TUY",name:"Tuy"},41:{code:"YAG",name:"Yagha"},42:{code:"YAT",name:"Yatenga"},43:{code:"ZIR",name:"Ziro"},44:{code:"ZOD",name:"Zondoma"},45:{code:"ZOW",name:"Zoundweogo"}},BI:{1:{code:"BB",name:"Bubanza"},2:{code:"BJ",name:"Bujumbura"},3:{code:"BR",name:"Bururi"},4:{code:"CA",name:"Cankuzo"},5:{code:"CI",name:"Cibitoke"},6:{code:"GI",name:"Gitega"},7:{code:"KR",name:"Karuzi"},8:{code:"KY",name:"Kayanza"},9:{code:"KI",name:"Kirundo"},10:{code:"MA",name:"Makamba"},11:{code:"MU",name:"Muramvya"},12:{code:"MY",name:"Muyinga"},13:{code:"MW",name:"Mwaro"},14:{code:"NG",name:"Ngozi"},15:{code:"RT",name:"Rutana"},16:{code:"RY",name:"Ruyigi"}},KH:{1:{code:"BA",name:"Battambang"},2:{code:"BM",name:"Banteay Meanchey"},3:{code:"KB",name:"Keb"},4:{code:"KK",name:"Kaoh Kong"},5:{code:"KL",name:"Kandal"},6:{code:"KM",name:"Kampong Cham"},7:{code:"KN",name:"Kampong Chhnang"},8:{code:"KO",name:"Kampong Som"},9:{code:"KP",name:"Kampot"},10:{code:"KR",name:"Kratie"},11:{code:"KT",name:"Kampong Thom"},12:{code:"KU",name:"Kampong Speu"},13:{code:"MK",name:"Mondul Kiri"},14:{code:"OM",name:"Oddar Meancheay"},15:{code:"PA",name:"Pailin"},16:{code:"PG",name:"Prey Veng"},17:{code:"PP",name:"Phnom Penh"},18:{code:"PR",name:"Preah Vihear"},19:{code:"PS",name:"Preah Seihanu (Kompong Som or Si)"},20:{code:"PU",name:"Pursat"},21:{code:"RK",name:"Ratanak Kiri"},22:{code:"SI",name:"Siemreap"},23:{code:"SR",name:"Svay Rieng"},24:{code:"ST",name:"Stung Treng"},25:{code:"TK",name:"Takeo"}},CM:{1:{code:"ADA",name:"Adamawa (Adamaoua)"},2:{code:"CEN",name:"Centre"},3:{code:"EST",name:"East (Est)"},4:{code:"EXN",name:"Extrême-Nord"},5:{code:"LIT",name:"Littoral"},6:{code:"NOR",name:"North (Nord)"},7:{code:"NOT",name:"Northwest (Nord-Ouest)"},8:{code:"OUE",name:"West (Ouest)"},9:{code:"SUD",name:"South (Sud)"},10:{code:"SOU",name:"Southwest (Sud-Ouest)"}},CA:{1:{code:"AB",name:"Alberta"},2:{code:"BC",name:"British Columbia"},3:{code:"MB",name:"Manitoba"},4:{code:"NB",name:"New Brunswick"},5:{code:"NL",name:"Newfoundland and Labrador"},6:{code:"NT",name:"Northwest Territories"},7:{code:"NS",name:"Nova Scotia"},8:{code:"NU",name:"Nunavut"},9:{code:"ON",name:"Ontario"},10:{code:"PE",name:"Prince Edward Island"},11:{code:"QC",name:"Québec"},12:{code:"SK",name:"Saskatchewan"},13:{code:"YT",name:"Yukon Territory"}},CV:{1:{code:"BV",name:"Boa Vista"},2:{code:"BR",name:"Brava"},3:{code:"CS",name:"Calheta de Sao Miguel"},4:{code:"MA",name:"Maio"},5:{code:"MO",name:"Mosteiros"},6:{code:"PA",name:"Paul"},7:{code:"PN",name:"Porto Novo"},8:{code:"PR",name:"Praia"},9:{code:"RG",name:"Ribeira Grande"},10:{code:"SL",name:"Sal"},11:{code:"CA",name:"Santa Catarina"},12:{code:"CR",name:"Santa Cruz"},13:{code:"SD",name:"Sao Domingos"},14:{code:"SF",name:"Sao Filipe"},15:{code:"SN",name:"Sao Nicolau"},16:{code:"SV",name:"Sao Vicente"},17:{code:"TA",name:"Tarrafal"}},KY:{1:{code:"CR",name:"Creek"},2:{code:"EA",name:"Eastern"},3:{code:"ML",name:"Midland"},4:{code:"ST",name:"South Town"},5:{code:"SP",name:"Spot Bay"},6:{code:"SK",name:"Stake Bay"},7:{code:"WD",name:"West End"},8:{code:"WN",name:"Western"}},CF:{1:{code:"BAN",name:"Bangui"},2:{code:"BBA",name:"Bamingui-Bangoran"},3:{code:"BKO",name:"Basse-Kotto"},4:{code:"HKO",name:"Haute-Kotto"},5:{code:"HMB",name:"Haut-Mbomou"},6:{code:"KEM",name:"Kemo"},7:{code:"LOB",name:"Lobaye"},8:{code:"MBO",name:"Mbomou"},9:{code:"MKD",name:"Mambéré-Kadéï"},10:{code:"NGR",name:"Nana-Grebizi"},11:{code:"NMM",name:"Nana-Mambere"},12:{code:"OMP",name:"Ombella-M'Poko"},13:{code:"OPE",name:"Ouham-Pende"},14:{code:"OUH",name:"Ouham"},15:{code:"OUK",name:"Ouaka"},16:{code:"SMB",name:"Sangha-Mbaere"},17:{code:"VAK",name:"Vakaga"}},TD:{1:{code:"BA",name:"Batha"},2:{code:"BI",name:"Biltine"},3:{code:"BE",name:"Borkou-Ennedi-Tibesti"},4:{code:"CB",name:"Chari-Baguirmi"},5:{code:"GU",name:"Guera"},6:{code:"KA",name:"Kanem"},7:{code:"LA",name:"Lac"},8:{code:"LC",name:"Logone Occidental"},9:{code:"LR",name:"Logone Oriental"},10:{code:"MK",name:"Mayo-Kebbi"},11:{code:"MC",name:"Moyen-Chari"},12:{code:"OU",name:"Ouaddai"},13:{code:"SA",name:"Salamat"},14:{code:"TA",name:"Tandjile"}},CL:{1:{code:"AI",name:"Aisen del General Carlos Ibanez"},2:{code:"AN",name:"Antofagasta"},3:{code:"AR",name:"Araucania"},4:{code:"AT",name:"Atacama"},5:{code:"BI",name:"Bio-Bio"},6:{code:"CO",name:"Coquimbo"},7:{code:"LI",name:"Libertador General Bernardo O'Hi"},8:{code:"LL",name:"Los Lagos"},9:{code:"MA",name:"Magallanes y de la Antartica Chi"},10:{code:"ML",name:"Maule"},11:{code:"RM",name:"Region Metropolitana"},12:{code:"TA",name:"Tarapaca"},13:{code:"VS",name:"Valparaiso"}},CN:{1:{code:"AN",name:"Anhui"},2:{code:"BE",name:"Beijing"},3:{code:"CH",name:"Chongqing"},4:{code:"FU",name:"Fujian"},5:{code:"GA",name:"Gansu"},6:{code:"GU",name:"Guangdong"},7:{code:"GX",name:"Guangxi"},8:{code:"GZ",name:"Guizhou"},9:{code:"HA",name:"Hainan"},10:{code:"HB",name:"Hebei"},11:{code:"HL",name:"Heilongjiang"},12:{code:"HE",name:"Henan"},13:{code:"HK",name:"Hong Kong"},14:{code:"HU",name:"Hubei"},15:{code:"HN",name:"Hunan"},16:{code:"IM",name:"Inner Mongolia"},17:{code:"JI",name:"Jiangsu"},18:{code:"JX",name:"Jiangxi"},19:{code:"JL",name:"Jilin"},20:{code:"LI",name:"Liaoning"},21:{code:"MA",name:"Macau"},22:{code:"NI",name:"Ningxia"},23:{code:"SH",name:"Shaanxi"},24:{code:"SA",name:"Shandong"},25:{code:"SG",name:"Shanghai"},26:{code:"SX",name:"Shanxi"},27:{code:"SI",name:"Sichuan"},28:{code:"TI",name:"Tianjin"},29:{code:"XI",name:"Xinjiang"},30:{code:"YU",name:"Yunnan"},31:{code:"ZH",name:"Zhejiang"}},CC:{1:{code:"D",name:"Direction Island"},2:{code:"H",name:"Home Island"},3:{code:"O",name:"Horsburgh Island"},4:{code:"S",name:"South Island"},5:{code:"W",name:"West Island"}},CO:{1:{code:"AMZ",name:"Amazonas"},2:{code:"ANT",name:"Antioquia"},3:{code:"ARA",name:"Arauca"},4:{code:"ATL",name:"Atlantico"},5:{code:"BDC",name:"Bogota D.C."},6:{code:"BOL",name:"Bolivar"},7:{code:"BOY",name:"Boyaca"},8:{code:"CAL",name:"Caldas"},9:{code:"CAQ",name:"Caqueta"},10:{code:"CAS",name:"Casanare"},11:{code:"CAU",name:"Cauca"},12:{code:"CES",name:"Cesar"},13:{code:"CHO",name:"Choco"},14:{code:"COR",name:"Cordoba"},15:{code:"CAM",name:"Cundinamarca"},16:{code:"GNA",name:"Guainia"},17:{code:"GJR",name:"Guajira"},18:{code:"GVR",name:"Guaviare"},19:{code:"HUI",name:"Huila"},20:{code:"MAG",name:"Magdalena"},21:{code:"MET",name:"Meta"},22:{code:"NAR",name:"Narino"},23:{code:"NDS",name:"Norte de Santander"},24:{code:"PUT",name:"Putumayo"},25:{code:"QUI",name:"Quindio"},26:{code:"RIS",name:"Risaralda"},27:{code:"SAP",name:"San Andres y Providencia"},28:{code:"SAN",name:"Santander"},29:{code:"SUC",name:"Sucre"},30:{code:"TOL",name:"Tolima"},31:{code:"VDC",name:"Valle del Cauca"},32:{code:"VAU",name:"Vaupes"},33:{code:"VIC",name:"Vichada"}},KM:{1:{code:"G",name:"Grande Comore"},2:{code:"A",name:"Anjouan"},3:{code:"M",name:"Moheli"}},CG:{1:{code:"BO",name:"Bouenza"},2:{code:"BR",name:"Brazzaville"},3:{code:"CU",name:"Cuvette"},4:{code:"CO",name:"Cuvette-Ouest"},5:{code:"KO",name:"Kouilou"},6:{code:"LE",name:"Lekoumou"},7:{code:"LI",name:"Likouala"},8:{code:"NI",name:"Niari"},9:{code:"PL",name:"Plateaux"},10:{code:"PO",name:"Pool"},11:{code:"SA",name:"Sangha"}},CK:{1:{code:"AI",name:"Aitutaki"},2:{code:"AT",name:"Atiu"},3:{code:"MA",name:"Manuae"},4:{code:"MG",name:"Mangaia"},5:{code:"MK",name:"Manihiki"},6:{code:"MT",name:"Mitiaro"},7:{code:"MU",name:"Mauke"},8:{code:"NI",name:"Nassau Island"},9:{code:"PA",name:"Palmerston"},10:{code:"PE",name:"Penrhyn"},11:{code:"PU",name:"Pukapuka"},12:{code:"RK",name:"Rakahanga"},13:{code:"RR",name:"Rarotonga"},14:{code:"SU",name:"Surwarrow"},15:{code:"TA",name:"Takutea"}},CR:{1:{code:"AL",name:"Alajuela"},2:{code:"CA",name:"Cartago"},3:{code:"GU",name:"Guanacaste"},4:{code:"HE",name:"Heredia"},5:{code:"LI",name:"Limon"},6:{code:"PU",name:"Puntarenas"},7:{code:"SJ",name:"San Jose"}},CI:{1:{code:"ABE",name:"Abengourou"},2:{code:"ABI",name:"Abidjan"},3:{code:"ABO",name:"Aboisso"},4:{code:"ADI",name:"Adiake"},5:{code:"ADZ",name:"Adzope"},6:{code:"AGB",name:"Agboville"},7:{code:"AGN",name:"Agnibilekrou"},8:{code:"ALE",name:"Alepe"},9:{code:"BOC",name:"Bocanda"},10:{code:"BAN",name:"Bangolo"},11:{code:"BEO",name:"Beoumi"},12:{code:"BIA",name:"Biankouma"},13:{code:"BDK",name:"Bondoukou"},14:{code:"BGN",name:"Bongouanou"},15:{code:"BFL",name:"Bouafle"},16:{code:"BKE",name:"Bouake"},17:{code:"BNA",name:"Bouna"},18:{code:"BDL",name:"Boundiali"},19:{code:"DKL",name:"Dabakala"},20:{code:"DBU",name:"Dabou"},21:{code:"DAL",name:"Daloa"},22:{code:"DAN",name:"Danane"},23:{code:"DAO",name:"Daoukro"},24:{code:"DIM",name:"Dimbokro"},25:{code:"DIV",name:"Divo"},26:{code:"DUE",name:"Duekoue"},27:{code:"FER",name:"Ferkessedougou"},28:{code:"GAG",name:"Gagnoa"},29:{code:"GBA",name:"Grand-Bassam"},30:{code:"GLA",name:"Grand-Lahou"},31:{code:"GUI",name:"Guiglo"},32:{code:"ISS",name:"Issia"},33:{code:"JAC",name:"Jacqueville"},34:{code:"KAT",name:"Katiola"},35:{code:"KOR",name:"Korhogo"},36:{code:"LAK",name:"Lakota"},37:{code:"MAN",name:"Man"},38:{code:"MKN",name:"Mankono"},39:{code:"MBA",name:"Mbahiakro"},40:{code:"ODI",name:"Odienne"},41:{code:"OUM",name:"Oume"},42:{code:"SAK",name:"Sakassou"},43:{code:"SPE",name:"San-Pedro"},44:{code:"SAS",name:"Sassandra"},45:{code:"SEG",name:"Seguela"},46:{code:"SIN",name:"Sinfra"},47:{code:"SOU",name:"Soubre"},48:{code:"TAB",name:"Tabou"},49:{code:"TAN",name:"Tanda"},50:{code:"TIE",name:"Tiebissou"},51:{code:"TIN",name:"Tingrela"},52:{code:"TIA",name:"Tiassale"},53:{code:"TBA",name:"Touba"},54:{code:"TLP",name:"Toulepleu"},55:{code:"TMD",name:"Toumodi"},56:{code:"VAV",name:"Vavoua"},57:{code:"YAM",name:"Yamoussoukro"},58:{code:"ZUE",name:"Zuenoula"}},HR:{1:{code:"BB",name:"Bjelovar-Bilogora"},2:{code:"CZ",name:"City of Zagreb"},3:{code:"DN",name:"Dubrovnik-Neretva"},4:{code:"IS",name:"Istra"},5:{code:"KA",name:"Karlovac"},6:{code:"KK",name:"Koprivnica-Krizevci"},7:{code:"KZ",name:"Krapina-Zagorje"},8:{code:"LS",name:"Lika-Senj"},9:{code:"ME",name:"Medimurje"},10:{code:"OB",name:"Osijek-Baranja"},11:{code:"PS",name:"Pozega-Slavonia"},12:{code:"PG",name:"Primorje-Gorski Kotar"},13:{code:"SI",name:"Sibenik"},14:{code:"SM",name:"Sisak-Moslavina"},15:{code:"SB",name:"Slavonski Brod-Posavina"},16:{code:"SD",name:"Split-Dalmatia"},17:{code:"VA",name:"Varazdin"},18:{code:"VP",name:"Virovitica-Podravina"},19:{code:"VS",name:"Vukovar-Srijem"},20:{code:"ZK",name:"Zadar-Knin"},21:{code:"ZA",name:"Zagreb"}},CU:{1:{code:"CA",name:"Camaguey"},2:{code:"CD",name:"Ciego de Avila"},3:{code:"CI",name:"Cienfuegos"},4:{code:"CH",name:"Ciudad de La Habana"},5:{code:"GR",name:"Granma"},6:{code:"GU",name:"Guantanamo"},7:{code:"HO",name:"Holguin"},8:{code:"IJ",name:"Isla de la Juventud"},9:{code:"LH",name:"La Habana"},10:{code:"LT",name:"Las Tunas"},11:{code:"MA",name:"Matanzas"},12:{code:"PR",name:"Pinar del Rio"},13:{code:"SS",name:"Sancti Spiritus"},14:{code:"SC",name:"Santiago de Cuba"},15:{code:"VC",name:"Villa Clara"}},CY:{1:{code:"F",name:"Famagusta"},2:{code:"K",name:"Kyrenia"},3:{code:"A",name:"Larnaca"},4:{code:"I",name:"Limassol"},5:{code:"N",name:"Nicosia"},6:{code:"P",name:"Paphos"}},CZ:{1:{code:"A",name:"Hlavní město Praha"},2:{code:"B",name:"Jihomoravský"},3:{code:"C",name:"Jihočeský"},4:{code:"E",name:"Pardubický"},5:{code:"H",name:"Královéhradecký"},6:{code:"J",name:"Vysočina"},7:{code:"K",name:"Karlovarský"},8:{code:"L",name:"Liberecký"},9:{code:"M",name:"Olomoucký"},10:{code:"P",name:"Plzeňský"},11:{code:"S",name:"Středočeský"},12:{code:"T",name:"Moravskoslezský"},13:{code:"U",name:"Ústecký"},14:{code:"Z",name:"Zlínský"}},DK:{1:{code:"AR",name:"Arhus"},2:{code:"BH",name:"Bornholm"},3:{code:"CO",name:"Copenhagen"},4:{code:"FO",name:"Faroe Islands"},5:{code:"FR",name:"Frederiksborg"},6:{code:"FY",name:"Fyn"},7:{code:"KO",name:"Kobenhavn"},8:{code:"NO",name:"Nordjylland"},9:{code:"RI",name:"Ribe"},10:{code:"RK",name:"Ringkobing"},11:{code:"RO",name:"Roskilde"},12:{code:"SO",name:"Sonderjylland"},13:{code:"ST",name:"Storstrom"},14:{code:"VK",name:"Vejle"},15:{code:"VJ",name:"Vestjælland"},16:{code:"VB",name:"Viborg"}},DJ:{1:{code:"S",name:"'Ali Sabih"},2:{code:"K",name:"Dikhil"},3:{code:"J",name:"Djibouti"},4:{code:"O",name:"Obock"},5:{code:"T",name:"Tadjoura"}},DM:{1:{code:"AND",name:"Saint Andrew Parish"},2:{code:"DAV",name:"Saint David Parish"},3:{code:"GEO",name:"Saint George Parish"},4:{code:"JOH",name:"Saint John Parish"},5:{code:"JOS",name:"Saint Joseph Parish"},6:{code:"LUK",name:"Saint Luke Parish"},7:{code:"MAR",name:"Saint Mark Parish"},8:{code:"PAT",name:"Saint Patrick Parish"},9:{code:"PAU",name:"Saint Paul Parish"},10:{code:"PET",name:"Saint Peter Parish"}},DO:{1:{code:"DN",name:"Distrito Nacional"},2:{code:"AZ",name:"Azua"},3:{code:"BC",name:"Baoruco"},4:{code:"BH",name:"Barahona"},5:{code:"DJ",name:"Dajabon"},6:{code:"DU",name:"Duarte"},7:{code:"EL",name:"Elias Pina"},8:{code:"SY",name:"El Seybo"},9:{code:"ET",name:"Espaillat"},10:{code:"HM",name:"Hato Mayor"},11:{code:"IN",name:"Independencia"},12:{code:"AL",name:"La Altagracia"},13:{code:"RO",name:"La Romana"},14:{code:"VE",name:"La Vega"},15:{code:"MT",name:"Maria Trinidad Sanchez"},16:{code:"MN",name:"Monsenor Nouel"},17:{code:"MC",name:"Monte Cristi"},18:{code:"MP",name:"Monte Plata"},19:{code:"PD",name:"Pedernales"},20:{code:"PR",name:"Peravia (Bani)"},21:{code:"PP",name:"Puerto Plata"},22:{code:"SL",name:"Salcedo"},23:{code:"SM",name:"Samana"},24:{code:"SH",name:"Sanchez Ramirez"},25:{code:"SC",name:"San Cristobal"},26:{code:"JO",name:"San Jose de Ocoa"},27:{code:"SJ",name:"San Juan"},28:{code:"PM",name:"San Pedro de Macoris"},29:{code:"SA",name:"Santiago"},30:{code:"ST",name:"Santiago Rodriguez"},31:{code:"SD",name:"Santo Domingo"},32:{code:"VA",name:"Valverde"}},TP:{1:{code:"AL",name:"Aileu"},2:{code:"AN",name:"Ainaro"},3:{code:"BA",name:"Baucau"},4:{code:"BO",name:"Bobonaro"},5:{code:"CO",name:"Cova Lima"},6:{code:"DI",name:"Dili"},7:{code:"ER",name:"Ermera"},8:{code:"LA",name:"Lautem"},9:{code:"LI",name:"Liquica"},10:{code:"MT",name:"Manatuto"},11:{code:"MF",name:"Manufahi"},12:{code:"OE",name:"Oecussi"},13:{code:"VI",name:"Viqueque"}},EC:{1:{code:"AZU",name:"Azuay"},2:{code:"BOL",name:"Bolivar"},3:{code:"CAN",name:"Cañar"},4:{code:"CAR",name:"Carchi"},5:{code:"CHI",name:"Chimborazo"},6:{code:"COT",name:"Cotopaxi"},7:{code:"EOR",name:"El Oro"},8:{code:"ESM",name:"Esmeraldas"},9:{code:"GPS",name:"Galápagos"},10:{code:"GUA",name:"Guayas"},11:{code:"IMB",name:"Imbabura"},12:{code:"LOJ",name:"Loja"},13:{code:"LRO",name:"Los Ríos"},14:{code:"MAN",name:"Manabí"},15:{code:"MSA",name:"Morona Santiago"},16:{code:"NAP",name:"Napo"},17:{code:"ORE",name:"Orellana"},18:{code:"PAS",name:"Pastaza"},19:{code:"PIC",name:"Pichincha"},20:{code:"SUC",name:"Sucumbíos"},21:{code:"TUN",name:"Tungurahua"},22:{code:"ZCH",name:"Zamora Chinchipe"}},EG:{1:{code:"DHY",name:"Ad Daqahliyah"},2:{code:"BAM",name:"Al Bahr al Ahmar"},3:{code:"BHY",name:"Al Buhayrah"},4:{code:"FYM",name:"Al Fayyum"},5:{code:"GBY",name:"Al Gharbiyah"},6:{code:"IDR",name:"Al Iskandariyah"},7:{code:"IML",name:"Al Isma 'iliyah"},8:{code:"JZH",name:"Al Jizah"},9:{code:"MFY",name:"Al Minufiyah"},10:{code:"MNY",name:"Al Minya"},11:{code:"QHR",name:"Al Qahirah"},12:{code:"QLY",name:"Al Qalyubiyah"},13:{code:"WJD",name:"Al Wadi al Jadid"},14:{code:"SHQ",name:"Ash Sharqiyah"},15:{code:"SWY",name:"As Suways"},16:{code:"ASW",name:"Aswan"},17:{code:"ASY",name:"Asyut"},18:{code:"BSW",name:"Bani Suwayf"},19:{code:"BSD",name:"Bur Sa'id"},20:{code:"DMY",name:"Dumyat"},21:{code:"JNS",name:"Janub Sina'"},22:{code:"KSH",name:"Kafr ash Shaykh"},23:{code:"MAT",name:"Matruh"},24:{code:"QIN",name:"Qina"},25:{code:"SHS",name:"Shamal Sina'"},26:{code:"SUH",name:"Suhaj"}},SV:{1:{code:"AH",name:"Ahuachapan"},2:{code:"CA",name:"Cabanas"},3:{code:"CH",name:"Chalatenango"},4:{code:"CU",name:"Cuscatlan"},5:{code:"LB",name:"La Libertad"},6:{code:"PZ",name:"La Paz"},7:{code:"UN",name:"La Union"},8:{code:"MO",name:"Morazan"},9:{code:"SM",name:"San Miguel"},10:{code:"SS",name:"San Salvador"},11:{code:"SV",name:"San Vicente"},12:{code:"SA",name:"Santa Ana"},13:{code:"SO",name:"Sonsonate"},14:{code:"US",name:"Usulutan"}},GQ:{1:{code:"AN",name:"Provincia Annobon"},2:{code:"BN",name:"Provincia Bioko Norte"},3:{code:"BS",name:"Provincia Bioko Sur"},4:{code:"CS",name:"Provincia Centro Sur"},5:{code:"KN",name:"Provincia Kie-Ntem"},6:{code:"LI",name:"Provincia Litoral"},7:{code:"WN",name:"Provincia Wele-Nzas"}},ER:{1:{code:"MA",name:"Central (Maekel)"},2:{code:"KE",name:"Anseba (Keren)"},3:{code:"DK",name:"Southern Red Sea (Debub-Keih-Bah)"},4:{code:"SK",name:"Northern Red Sea (Semien-Keih-Ba)"},5:{code:"DE",name:"Southern (Debub)"},6:{code:"BR",name:"Gash-Barka (Barentu)"}},EE:{1:{code:"HA",name:"Harjumaa (Tallinn)"},2:{code:"HI",name:"Hiiumaa (Kardla)"},3:{code:"IV",name:"Ida-Virumaa (Johvi)"},4:{code:"JA",name:"Jarvamaa (Paide)"},5:{code:"JO",name:"Jogevamaa (Jogeva)"},6:{code:"LV",name:"Laane-Virumaa (Rakvere)"},7:{code:"LA",name:"Laanemaa (Haapsalu)"},8:{code:"PA",name:"Parnumaa (Parnu)"},9:{code:"PO",name:"Polvamaa (Polva)"},10:{code:"RA",name:"Raplamaa (Rapla)"},11:{code:"SA",name:"Saaremaa (Kuessaare)"},12:{code:"TA",name:"Tartumaa (Tartu)"},13:{code:"VA",name:"Valgamaa (Valga)"},14:{code:"VI",name:"Viljandimaa (Viljandi)"},15:{code:"VO",name:"Vorumaa (Voru)"}},ET:{1:{code:"AF",name:"Afar"},2:{code:"AH",name:"Amhara"},3:{code:"BG",name:"Benishangul-Gumaz"},4:{code:"GB",name:"Gambela"},5:{code:"HR",name:"Hariai"},6:{code:"OR",name:"Oromia"},7:{code:"SM",name:"Somali"},8:{code:"SN",name:"Southern Nations - Nationalities"},9:{code:"TG",name:"Tigray"},10:{code:"AA",name:"Addis Ababa"},11:{code:"DD",name:"Dire Dawa"}},FO:{1:{code:"TÛR",name:"Tûrshavnar Kommuna"},2:{code:"KLA",name:"Klaksvík"},3:{code:"RUN",name:"Runavík"},4:{code:"TVØ",name:"Tvøroyri"},5:{code:"FUG",name:"Fuglafjørður"},6:{code:"SUN",name:"Sunda Kommuna"},7:{code:"VáG",name:"Vágur"},8:{code:"NES",name:"Nes"},9:{code:"VES",name:"Vestmanna"},10:{code:"MIð",name:"Miðvágur"},11:{code:"SØR",name:"Sørvágur"},12:{code:"GØT",name:"Gøtu Kommuna"},13:{code:"SJû",name:"Sjûvar Kommuna"},14:{code:"LEI",name:"Leirvík"},15:{code:"SAN",name:"Sandavágur"},16:{code:"HVA",name:"Hvalba"},17:{code:"EIð",name:"Eiði"},18:{code:"KVí",name:"Kvívík"},19:{code:"SAN",name:"Sandur"},20:{code:"SKO",name:"Skopun"},21:{code:"HVA",name:"Hvannasund"},22:{code:"SUM",name:"Sumba"},23:{code:"VIð",name:"Viðareiði"},24:{code:"POR",name:"Porkeri"},25:{code:"SKá",name:"Skálavík"},26:{code:"KUN",name:"Kunoy"},27:{code:"HÚS",name:"HÚsavík"},28:{code:"HOV",name:"Hov"},29:{code:"FáM",name:"Fámjin"},30:{code:"FUN",name:"Funningur"},31:{code:"HÚS",name:"HÚsar"},32:{code:"SKÚ",name:"SkÚvoy"},33:{code:"SVí",name:"Svínoy"},34:{code:"FUG",name:"Fugloy"}},FJ:{1:{code:"C",name:"Central Division"},2:{code:"E",name:"Eastern Division"},3:{code:"N",name:"Northern Division"},4:{code:"R",name:"Rotuma"},5:{code:"W",name:"Western Division"}},FI:{1:{code:"AL",name:"Ahvenanmaan Laani"},2:{code:"ES",name:"Etela-Suomen Laani"},3:{code:"IS",name:"Ita-Suomen Laani"},4:{code:"LS",name:"Lansi-Suomen Laani"},5:{code:"LA",name:"Lapin Lanani"},6:{code:"OU",name:"Oulun Laani"}},FR:{1:{code:"AL",name:"Alsace"},2:{code:"AQ",name:"Aquitaine"},3:{code:"AU",name:"Auvergne"},4:{code:"BR",name:"Brittany"},5:{code:"BU",name:"Burgundy"},6:{code:"CE",name:"Center Loire Valley"},7:{code:"CH",name:"Champagne"},8:{code:"CO",name:"Corse"},9:{code:"FR",name:"France Comte"},10:{code:"LA",name:"Languedoc Roussillon"},11:{code:"LI",name:"Limousin"},12:{code:"LO",name:"Lorraine"},13:{code:"MI",name:"Midi Pyrenees"},14:{code:"NO",name:"Nord Pas de Calais"},15:{code:"NR",name:"Normandy"},16:{code:"PA",name:"Paris / Ile de France"},17:{code:"PI",name:"Picardie"},18:{code:"PO",name:"Poitou Charente"},19:{code:"PR",name:"Provence"},20:{code:"RH",name:"Rhone Alps"},21:{code:"RI",name:"Riviera"},22:{code:"WE",name:"Western Loire Valley"}},FX:{1:{code:"Et",name:"Etranger"},2:{code:"01",name:"Ain"},3:{code:"02",name:"Aisne"},4:{code:"03",name:"Allier"},5:{code:"04",name:"Alpes de Haute Provence"},6:{code:"05",name:"Hautes-Alpes"},7:{code:"06",name:"Alpes Maritimes"},8:{code:"07",name:"Ardèche"},9:{code:"08",name:"Ardennes"},10:{code:"09",name:"Ariège"},11:{code:"10",name:"Aube"},12:{code:"11",name:"Aude"},13:{code:"12",name:"Aveyron"},14:{code:"13",name:"Bouches du Rhône"},15:{code:"14",name:"Calvados"},16:{code:"15",name:"Cantal"},17:{code:"16",name:"Charente"},18:{code:"17",name:"Charente Maritime"},19:{code:"18",name:"Cher"},20:{code:"19",name:"Corrèze"},21:{code:"2A",name:"Corse du Sud"},22:{code:"2B",name:"Haute Corse"},23:{code:"21",name:"Côte d'or"},24:{code:"22",name:"Côtes d'Armor"},25:{code:"23",name:"Creuse"},26:{code:"24",name:"Dordogne"},27:{code:"25",name:"Doubs"},28:{code:"26",name:"Drôme"},29:{code:"27",name:"Eure"},30:{code:"28",name:"Eure et Loir"},31:{code:"29",name:"Finistère"},32:{code:"30",name:"Gard"},33:{code:"31",name:"Haute Garonne"},34:{code:"32",name:"Gers"},35:{code:"33",name:"Gironde"},36:{code:"34",name:"Hérault"},37:{code:"35",name:"Ille et Vilaine"},38:{code:"36",name:"Indre"},39:{code:"37",name:"Indre et Loire"},40:{code:"38",name:"Isére"},41:{code:"39",name:"Jura"},42:{code:"40",name:"Landes"},43:{code:"41",name:"Loir et Cher"},44:{code:"42",name:"Loire"},45:{code:"43",name:"Haute Loire"},46:{code:"44",name:"Loire Atlantique"},47:{code:"45",name:"Loiret"},48:{code:"46",name:"Lot"},49:{code:"47",name:"Lot et Garonne"},50:{code:"48",name:"Lozère"},51:{code:"49",name:"Maine et Loire"},52:{code:"50",name:"Manche"},53:{code:"51",name:"Marne"},54:{code:"52",name:"Haute Marne"},55:{code:"53",name:"Mayenne"},56:{code:"54",name:"Meurthe et Moselle"},57:{code:"55",name:"Meuse"},58:{code:"56",name:"Morbihan"},59:{code:"57",name:"Moselle"},60:{code:"58",name:"Nièvre"},61:{code:"59",name:"Nord"},62:{code:"60",name:"Oise"},63:{code:"61",name:"Orne"},64:{code:"62",name:"Pas de Calais"},65:{code:"63",name:"Puy de Dôme"},66:{code:"64",name:"Pyrenees Atlantique"},67:{code:"65",name:"Hautes Pyrenees"},68:{code:"66",name:"Pyrenees Orientale"},69:{code:"67",name:"Bas Rhin"},70:{code:"68",name:"Haut Rhin"},71:{code:"69",name:"Rhône"},72:{code:"70",name:"Haute Saône"},73:{code:"71",name:"Saône et Loire"},74:{code:"72",name:"Sarthe"},75:{code:"73",name:"Savoie"},76:{code:"74",name:"Haute Savoie"},77:{code:"75",name:"Paris"},78:{code:"76",name:"Seine Martitime"},79:{code:"77",name:"Seine et Marne"},80:{code:"78",name:"Yvelines"},81:{code:"79",name:"Deux Sèvres"},82:{code:"80",name:"Somme"},83:{code:"81",name:"Tarn"},84:{code:"82",name:"Tarn et Garonne"},85:{code:"83",name:"Var"},86:{code:"84",name:"Vaucluse"},87:{code:"85",name:"Vendée"},88:{code:"86",name:"Vienne"},89:{code:"87",name:"Haute Vienne"},90:{code:"88",name:"Vosges"},91:{code:"89",name:"Yonne"},92:{code:"90",name:"Territoire de Belfort"},93:{code:"91",name:"Essonne"},94:{code:"92",name:"Hauts de Seine"},95:{code:"93",name:"Seine St-Denis"},96:{code:"94",name:"Val de Marne"},97:{code:"95",name:"Val d'oise"}},GF:{1:{code:"AWA",name:"Awala-Yalimapo"},2:{code:"MAN",name:"Mana"},3:{code:"SAI",name:"Saint-Laurent-Du-Maroni"},4:{code:"APA",name:"Apatou"},5:{code:"GRA",name:"Grand-Santi"},6:{code:"PAP",name:"Papaïchton"},7:{code:"SAÜ",name:"SaÜl"},8:{code:"MAR",name:"Maripasoula"},9:{code:"CAM",name:"Camopi"},10:{code:"SAI",name:"Saint-Georges"},11:{code:"OUA",name:"Ouanary"},12:{code:"RéG",name:"Régina"},13:{code:"ROU",name:"Roura"},14:{code:"SAI",name:"Saint-élie"},15:{code:"IRA",name:"Iracoubo"},16:{code:"SIN",name:"Sinnamary"},17:{code:"KOU",name:"Kourou"},18:{code:"MAC",name:"Macouria"},19:{code:"MON",name:"Montsinéry-Tonnegrande"},20:{code:"MAT",name:"Matoury"},21:{code:"CAY",name:"Cayenne"},22:{code:"REM",name:"Remire-Montjoly"}},PF:{1:{code:"M",name:"Archipel des Marquises"},2:{code:"T",name:"Archipel des Tuamotu"},3:{code:"I",name:"Archipel des Tubuai"},4:{code:"V",name:"Iles du Vent"},5:{code:"S",name:"Iles Sous-le-Vent"}},TF:{1:{code:"C",name:"Iles Crozet"},2:{code:"K",name:"Iles Kerguelen"},3:{code:"A",name:"Ile Amsterdam"},4:{code:"P",name:"Ile Saint-Paul"},5:{code:"D",name:"Adelie Land"}},GA:{1:{code:"ES",name:"Estuaire"},2:{code:"HO",name:"Haut-Ogooue"},3:{code:"MO",name:"Moyen-Ogooue"},4:{code:"NG",name:"Ngounie"},5:{code:"NY",name:"Nyanga"},6:{code:"OI",name:"Ogooue-Ivindo"},7:{code:"OL",name:"Ogooue-Lolo"},8:{code:"OM",name:"Ogooue-Maritime"},9:{code:"WN",name:"Woleu-Ntem"}},GM:{1:{code:"BJ",name:"Banjul"},2:{code:"BS",name:"Basse"},3:{code:"BR",name:"Brikama"},4:{code:"JA",name:"Janjangbure"},5:{code:"KA",name:"Kanifeng"},6:{code:"KE",name:"Kerewan"},7:{code:"KU",name:"Kuntaur"},8:{code:"MA",name:"Mansakonko"},9:{code:"LR",name:"Lower River"},10:{code:"CR",name:"Central River"},11:{code:"NB",name:"North Bank"},12:{code:"UR",name:"Upper River"},13:{code:"WE",name:"Western"}},GE:{1:{code:"AB",name:"Abkhazia"},2:{code:"AJ",name:"Ajaria"},3:{code:"GU",name:"Guria"},4:{code:"IM",name:"Imereti"},5:{code:"KA",name:"Kakheti"},6:{code:"KK",name:"Kvemo Kartli"},7:{code:"MM",name:"Mtskheta-Mtianeti"},8:{code:"RL",name:"Racha Lechkhumi and Kvemo Svanet"},9:{code:"SJ",name:"Samtskhe-Javakheti"},10:{code:"SK",name:"Shida Kartli"},11:{code:"SZ",name:"Samegrelo-Zemo Svaneti"},12:{code:"TB",name:"Tbilisi"}},DE:{1:{code:"BAW",name:"Baden-Württemberg"},2:{code:"BAY",name:"Bayern"},3:{code:"BER",name:"Berlin"},4:{code:"BRG",name:"Brandenburg"},5:{code:"BRE",name:"Bremen"},6:{code:"HAM",name:"Hamburg"},7:{code:"HES",name:"Hessen"},8:{code:"MEC",name:"Mecklenburg-Vorpommern"},9:{code:"NDS",name:"Niedersachsen"},10:{code:"NRW",name:"Nordrhein-Westfalen"},11:{code:"RHE",name:"Rheinland-Pfalz"},12:{code:"SAR",name:"Saarland"},13:{code:"SAS",name:"Sachsen"},14:{code:"SAC",name:"Sachsen-Anhalt"},15:{code:"SCN",name:"Schleswig-Holstein"},16:{code:"THE",name:"Thüringen"}},GH:{1:{code:"AS",name:"Ashanti Region"},2:{code:"BA",name:"Brong-Ahafo Region"},3:{code:"CE",name:"Central Region"},4:{code:"EA",name:"Eastern Region"},5:{code:"GA",name:"Greater Accra Region"},6:{code:"NO",name:"Northern Region"},7:{code:"UE",name:"Upper East Region"},8:{code:"UW",name:"Upper West Region"},9:{code:"VO",name:"Volta Region"},10:{code:"WE",name:"Western Region"}},GI:{1:{code:"EAS",name:"East Side"},2:{code:"NOR",name:"North District"},3:{code:"REC",name:"Reclamation Areas"},4:{code:"SAN",name:"Sandpits Area"},5:{code:"SOU",name:"South District"},6:{code:"TOW",name:"Town Area"},7:{code:"UPP",name:"Upper Town"},8:{code:"OTH",name:"Other"}},GR:{1:{code:"AT",name:"Attica"},2:{code:"CN",name:"Central Greece"},3:{code:"CM",name:"Central Macedonia"},4:{code:"CR",name:"Crete"},5:{code:"EM",name:"East Macedonia and Thrace"},6:{code:"EP",name:"Epirus"},7:{code:"II",name:"Ionian Islands"},8:{code:"NA",name:"North Aegean"},9:{code:"PP",name:"Peloponnesos"},10:{code:"SA",name:"South Aegean"},11:{code:"TH",name:"Thessaly"},12:{code:"WG",name:"West Greece"},13:{code:"WM",name:"West Macedonia"}},GL:{1:{code:"A",name:"Avannaa"},2:{code:"T",name:"Tunu"},3:{code:"K",name:"Kitaa"}},86:{1:{code:"A",name:"Saint Andrew"},2:{code:"D",name:"Saint David"},3:{code:"G",name:"Saint George"},4:{code:"J",name:"Saint John"},5:{code:"M",name:"Saint Mark"},6:{code:"P",name:"Saint Patrick"},7:{code:"C",name:"Carriacou"},8:{code:"Q",name:"Petit Martinique"}},GP:{1:{code:"ARR",name:"Arrondissements Of The Guadeloup"},2:{code:"CAN",name:"Cantons Of The Guadeloup Depart"},3:{code:"COM",name:"Communes Of The Guadeloup Depart"}},GU:{1:{code:"AGA",name:"Agana Heights"},2:{code:"AGA",name:"Agat"},3:{code:"ASA",name:"Asan Maina"},4:{code:"BAR",name:"Barrigada"},5:{code:"CHA",name:"Chalan Pago Ordot"},6:{code:"DED",name:"Dededo"},7:{code:"HAG",name:"HagÅtña"},8:{code:"INA",name:"Inarajan"},9:{code:"MAN",name:"Mangilao"},10:{code:"MER",name:"Merizo"},11:{code:"MON",name:"Mongmong Toto Maite"},12:{code:"PIT",name:"Piti"},13:{code:"SAN",name:"Santa Rita"},14:{code:"SIN",name:"Sinajana"},15:{code:"TAL",name:"Talofofo"},16:{code:"TAM",name:"Tamuning"},17:{code:"UMA",name:"Umatac"},18:{code:"YIG",name:"Yigo"},19:{code:"YON",name:"Yona"}},GT:{1:{code:"AV",name:"Alta Verapaz"},2:{code:"BV",name:"Baja Verapaz"},3:{code:"CM",name:"Chimaltenango"},4:{code:"CQ",name:"Chiquimula"},5:{code:"PE",name:"El Peten"},6:{code:"PR",name:"El Progreso"},7:{code:"QC",name:"El Quiche"},8:{code:"ES",name:"Escuintla"},9:{code:"GU",name:"Guatemala"},10:{code:"HU",name:"Huehuetenango"},11:{code:"IZ",name:"Izabal"},12:{code:"JA",name:"Jalapa"},13:{code:"JU",name:"Jutiapa"},14:{code:"QZ",name:"Quetzaltenango"},15:{code:"RE",name:"Retalhuleu"},16:{code:"ST",name:"Sacatepequez"},17:{code:"SM",name:"San Marcos"},18:{code:"SR",name:"Santa Rosa"},19:{code:"SO",name:"Solola"},20:{code:"SU",name:"Suchitepequez"},21:{code:"TO",name:"Totonicapan"},22:{code:"ZA",name:"Zacapa"}},GN:{1:{code:"CNK",name:"Conakry"},2:{code:"BYL",name:"Beyla"},3:{code:"BFA",name:"Boffa"},4:{code:"BOK",name:"Boke"},5:{code:"COY",name:"Coyah"},6:{code:"DBL",name:"Dabola"},7:{code:"DLB",name:"Dalaba"},8:{code:"DGR",name:"Dinguiraye"},9:{code:"DBR",name:"Dubreka"},10:{code:"FRN",name:"Faranah"},11:{code:"FRC",name:"Forecariah"},12:{code:"FRI",name:"Fria"},13:{code:"GAO",name:"Gaoual"},14:{code:"GCD",name:"Gueckedou"},15:{code:"KNK",name:"Kankan"},16:{code:"KRN",name:"Kerouane"},17:{code:"KND",name:"Kindia"},18:{code:"KSD",name:"Kissidougou"},19:{code:"KBA",name:"Koubia"},20:{code:"KDA",name:"Koundara"},21:{code:"KRA",name:"Kouroussa"},22:{code:"LAB",name:"Labe"},23:{code:"LLM",name:"Lelouma"},24:{code:"LOL",name:"Lola"},25:{code:"MCT",name:"Macenta"},26:{code:"MAL",name:"Mali"},27:{code:"MAM",name:"Mamou"},28:{code:"MAN",name:"Mandiana"},29:{code:"NZR",name:"Nzerekore"},30:{code:"PIT",name:"Pita"},31:{code:"SIG",name:"Siguiri"},32:{code:"TLM",name:"Telimele"},33:{code:"TOG",name:"Tougue"},34:{code:"YOM",name:"Yomou"}},GW:{1:{code:"BF",name:"Bafata Region"},2:{code:"BB",name:"Biombo Region"},3:{code:"BS",name:"Bissau Region"},4:{code:"BL",name:"Bolama Region"},5:{code:"CA",name:"Cacheu Region"},6:{code:"GA",name:"Gabu Region"},7:{code:"OI",name:"Oio Region"},8:{code:"QU",name:"Quinara Region"},9:{code:"TO",name:"Tombali Region"}},GY:{1:{code:"BW",name:"Barima-Waini"},2:{code:"CM",name:"Cuyuni-Mazaruni"},3:{code:"DM",name:"Demerara-Mahaica"},4:{code:"EC",name:"East Berbice-Corentyne"},5:{code:"EW",name:"Essequibo Islands-West Demerara"},6:{code:"MB",name:"Mahaica-Berbice"},7:{code:"PM",name:"Pomeroon-Supenaam"},8:{code:"PI",name:"Potaro-Siparuni"},9:{code:"UD",name:"Upper Demerara-Berbice"},10:{code:"UT",name:"Upper Takutu-Upper Essequibo"}},HT:{1:{code:"AR",name:"Artibonite"},2:{code:"CE",name:"Centre"},3:{code:"GA",name:"Grand'Anse"},4:{code:"ND",name:"Nord"},5:{code:"NE",name:"Nord-Est"},6:{code:"NO",name:"Nord-Ouest"},7:{code:"OU",name:"Ouest"},8:{code:"SD",name:"Sud"},9:{code:"SE",name:"Sud-Est"}},HM:{1:{code:"F",name:"Flat Island"},2:{code:"M",name:"McDonald Island"},3:{code:"S",name:"Shag Island"},4:{code:"H",name:"Heard Island"}},HN:{1:{code:"AT",name:"Atlantida"},2:{code:"CH",name:"Choluteca"},3:{code:"CL",name:"Colon"},4:{code:"CM",name:"Comayagua"},5:{code:"CP",name:"Copan"},6:{code:"CR",name:"Cortes"},7:{code:"PA",name:"El Paraiso"},8:{code:"FM",name:"Francisco Morazan"},9:{code:"GD",name:"Gracias a Dios"},10:{code:"IN",name:"Intibuca"},11:{code:"IB",name:"Islas de la Bahia (Bay Islands)"},12:{code:"PZ",name:"La Paz"},13:{code:"LE",name:"Lempira"},14:{code:"OC",name:"Ocotepeque"},15:{code:"OL",name:"Olancho"},16:{code:"SB",name:"Santa Barbara"},17:{code:"VA",name:"Valle"},18:{code:"YO",name:"Yoro"}},HK:{1:{code:"HCW",name:"Central and Western Hong Kong Is"},2:{code:"HEA",name:"Eastern Hong Kong Island"},3:{code:"HSO",name:"Southern Hong Kong Island"},4:{code:"HWC",name:"Wan Chai Hong Kong Island"},5:{code:"KKC",name:"Kowloon City Kowloon"},6:{code:"KKT",name:"Kwun Tong Kowloon"},7:{code:"KSS",name:"Sham Shui Po Kowloon"},8:{code:"KWT",name:"Wong Tai Sin Kowloon"},9:{code:"KYT",name:"Yau Tsim Mong Kowloon"},10:{code:"NIS",name:"Islands New Territories"},11:{code:"NKT",name:"Kwai Tsing New Territories"},12:{code:"NNO",name:"North New Territories"},13:{code:"NSK",name:"Sai Kung New Territories"},14:{code:"NST",name:"Sha Tin New Territories"},15:{code:"NTP",name:"Tai Po New Territories"},16:{code:"NTW",name:"Tsuen Wan New Territories"},17:{code:"NTM",name:"Tuen Mun New Territories"},18:{code:"NYL",name:"Yuen Long New Territories"}},HU:{1:{code:"BK",name:"Bacs-Kiskun"},2:{code:"BA",name:"Baranya"},3:{code:"BE",name:"Bekes"},4:{code:"BS",name:"Bekescsaba"},5:{code:"BZ",name:"Borsod-Abauj-Zemplen"},6:{code:"BU",name:"Budapest"},7:{code:"CS",name:"Csongrad"},8:{code:"DE",name:"Debrecen"},9:{code:"DU",name:"Dunaujvaros"},10:{code:"EG",name:"Eger"},11:{code:"FE",name:"Fejer"},12:{code:"GY",name:"Gyor"},13:{code:"GM",name:"Gyor-Moson-Sopron"},14:{code:"HB",name:"Hajdu-Bihar"},15:{code:"HE",name:"Heves"},16:{code:"HO",name:"Hodmezovasarhely"},17:{code:"JN",name:"Jasz-Nagykun-Szolnok"},18:{code:"KA",name:"Kaposvar"},19:{code:"KE",name:"Kecskemet"},20:{code:"KO",name:"Komarom-Esztergom"},21:{code:"MI",name:"Miskolc"},22:{code:"NA",name:"Nagykanizsa"},23:{code:"NO",name:"Nograd"},24:{code:"NY",name:"Nyiregyhaza"},25:{code:"PE",name:"Pecs"},26:{code:"PS",name:"Pest"},27:{code:"SO",name:"Somogy"},28:{code:"SP",name:"Sopron"},29:{code:"SS",name:"Szabolcs-Szatmar-Bereg"},30:{code:"SZ",name:"Szeged"},31:{code:"SE",name:"Szekesfehervar"},32:{code:"SL",name:"Szolnok"},33:{code:"SM",name:"Szombathely"},34:{code:"TA",name:"Tatabanya"},35:{code:"TO",name:"Tolna"},36:{code:"VA",name:"Vas"},37:{code:"VE",name:"Veszprem"},38:{code:"ZA",name:"Zala"},39:{code:"ZZ",name:"Zalaegerszeg"}},IS:{1:{code:"AL",name:"Austurland"},2:{code:"HF",name:"Hofuoborgarsvaeoi"},3:{code:"NE",name:"Norourland eystra"},4:{code:"NV",name:"Norourland vestra"},5:{code:"SL",name:"Suourland"},6:{code:"SN",name:"Suournes"},7:{code:"VF",name:"Vestfiroir"},8:{code:"VL",name:"Vesturland"}},IN:{1:{code:"AN",name:"Andaman and Nicobar Islands"},2:{code:"AP",name:"Andhra Pradesh"},3:{code:"AR",name:"Arunachal Pradesh"},4:{code:"AS",name:"Assam"},5:{code:"BI",name:"Bihar"},6:{code:"CH",name:"Chandigarh"},7:{code:"DA",name:"Dadra and Nagar Haveli"},8:{code:"DM",name:"Daman and Diu"},9:{code:"DE",name:"Delhi"},10:{code:"GO",name:"Goa"},11:{code:"GU",name:"Gujarat"},12:{code:"HA",name:"Haryana"},13:{code:"HP",name:"Himachal Pradesh"},14:{code:"JA",name:"Jammu and Kashmir"},15:{code:"KA",name:"Karnataka"},16:{code:"KE",name:"Kerala"},17:{code:"LI",name:"Lakshadweep Islands"},18:{code:"MP",name:"Madhya Pradesh"},19:{code:"MA",name:"Maharashtra"},20:{code:"MN",name:"Manipur"},21:{code:"ME",name:"Meghalaya"},22:{code:"MI",name:"Mizoram"},23:{code:"NA",name:"Nagaland"},24:{code:"OR",name:"Orissa"},25:{code:"PO",name:"Pondicherry"},26:{code:"PU",name:"Punjab"},27:{code:"RA",name:"Rajasthan"},28:{code:"SI",name:"Sikkim"},29:{code:"TN",name:"Tamil Nadu"},30:{code:"TR",name:"Tripura"},31:{code:"UP",name:"Uttar Pradesh"},32:{code:"WB",name:"West Bengal"}},ID:{1:{code:"DA",name:"Daista Aceh"},2:{code:"SU",name:"Sumatera Utara"},3:{code:"SB",name:"Sumatera Barat"},4:{code:"SI",name:"Riau"},5:{code:"JA",name:"Jambi"},6:{code:"SS",name:"Sumatera Selatan"},7:{code:"BE",name:"Bengkulu"},8:{code:"LA",name:"Lampung"},9:{code:"JK",name:"Dki Jakarta"},10:{code:"JB",name:"Jawa Barat"},11:{code:"JT",name:"Jawa Tengah"},12:{code:"DY",name:"Daista Yogyakarta"},13:{code:"JT",name:"Jawa Timur"},14:{code:"KB",name:"Kalimantan Barat"},15:{code:"KT",name:"Kalimantan Tengah"},16:{code:"KI",name:"Kalimantan Timur"},17:{code:"KS",name:"Kalimantan Selatan"},18:{code:"BA",name:"Bali"},19:{code:"NB",name:"Nusa Tenggara Barat"},20:{code:"NT",name:"Nusa Tenggara Timur"},21:{code:"SN",name:"Sulawesi Selatan"},22:{code:"ST",name:"Sulawesi Tengah"},23:{code:"SA",name:"Sulawesi Utara"},24:{code:"SG",name:"Sulawesi Tenggara"},25:{code:"MA",name:"Maluku"},26:{code:"MU",name:"Maluku Utara"},27:{code:"IJ",name:"Irian Jaya Timur"},28:{code:"IT",name:"Irian Jaya Tengah"},29:{code:"IB",name:"Irian Jawa Barat"},30:{code:"BT",name:"Banten"},31:{code:"BB",name:"Bangka Belitung"},32:{code:"GO",name:"Gorontalo"}},IR:{1:{code:"ARD",name:"Ardabil"},2:{code:"BSH",name:"Bushehr"},3:{code:"CMB",name:"Chahar Mahaal and Bakhtiari"},4:{code:"EAZ",name:"East Azarbaijan"},5:{code:"EFH",name:"Esfahan"},6:{code:"FAR",name:"Fars"},7:{code:"GIL",name:"Gilan"},8:{code:"GLS",name:"Golestan"},9:{code:"HMD",name:"Hamadan"},10:{code:"HRM",name:"Hormozgan"},11:{code:"ILM",name:"Ilam"},12:{code:"KBA",name:"Kohkiluyeh and Buyer Ahmad"},13:{code:"KRB",name:"Kerman"},14:{code:"KRD",name:"Kurdistan"},15:{code:"KRM",name:"Kermanshah"},16:{code:"KZT",name:"Khuzestan"},17:{code:"LRS",name:"Lorestan"},18:{code:"MKZ",name:"Markazi"},19:{code:"MZD",name:"Mazandaran"},20:{code:"NKH",name:"North Khorasan"},21:{code:"QAZ",name:"Qazvin"},22:{code:"QOM",name:"Qom"},23:{code:"RKH",name:"Razavi Khorasan"},24:{code:"SBL",name:"Sistan and Baluchistan"},25:{code:"SKH",name:"South Khorasan"},26:{code:"SMN",name:"Semnan"},27:{code:"TEH",name:"Tehran"},28:{code:"WEZ",name:"West Azarbaijan"},29:{code:"YZD",name:"Yazd"},30:{code:"ZAN",name:"Zanjan"}},IQ:{1:{code:"AB",name:"Al Anbar"},2:{code:"AL",name:"Arbil"},3:{code:"BA",name:"Al Basrah"},4:{code:"BB",name:"Babil"},5:{code:"BD",name:"Baghdad"},6:{code:"DH",name:"Dahuk"},7:{code:"DQ",name:"Dhi Qar"},8:{code:"DY",name:"Diyala"},9:{code:"KB",name:"Al Karbala"},10:{code:"MU",name:"Al Muthanna"},11:{code:"MY",name:"Maysan"},12:{code:"NJ",name:"An Najaf"},13:{code:"NN",name:"Ninawa"},14:{code:"QA",name:"Al Qadisyah"},15:{code:"SD",name:"Salah ad Din"},16:{code:"SL",name:"As Sulaymaniyah"},17:{code:"TM",name:"At Ta'mim"},18:{code:"WS",name:"Wasit"}},IE:{1:{code:"CA",name:"Carlow"},2:{code:"CV",name:"Cavan"},3:{code:"CL",name:"Clare"},4:{code:"CO",name:"Cork"},5:{code:"DO",name:"Donegal"},6:{code:"DU",name:"Dublin"},7:{code:"GA",name:"Galway"},8:{code:"KE",name:"Kerry"},9:{code:"KI",name:"Kildare"},10:{code:"KL",name:"Kilkenny"},11:{code:"LA",name:"Laois"},12:{code:"LE",name:"Leitrim"},13:{code:"LI",name:"Limerick"},14:{code:"LO",name:"Longford"},15:{code:"LU",name:"Louth"},16:{code:"MA",name:"Mayo"},17:{code:"ME",name:"Meath"},18:{code:"MO",name:"Monaghan"},19:{code:"OF",name:"Offaly"},20:{code:"RO",name:"Roscommon"},21:{code:"SL",name:"Sligo"},22:{code:"TI",name:"Tipperary"},23:{code:"WA",name:"Waterford"},24:{code:"WE",name:"Westmeath"},25:{code:"WX",name:"Wexford"},26:{code:"WI",name:"Wicklow"}},IL:{1:{code:"BS",name:"Be'er Sheva"},2:{code:"BH",name:"Bika'at Hayarden"},3:{code:"EA",name:"Eilat and Arava"},4:{code:"GA",name:"Galil"},5:{code:"HA",name:"Haifa"},6:{code:"JM",name:"Jehuda Mountains"},7:{code:"JE",name:"Jerusalem"},8:{code:"NE",name:"Negev"},10:{code:"SE",name:"Semaria"},11:{code:"SH",name:"Sharon"},12:{code:"TA",name:"Tel Aviv (Gosh Dan)"}},IT:{1:{code:"AG",name:"Agrigento"},2:{code:"AL",name:"Alessandria"},3:{code:"AN",name:"Ancona"},4:{code:"AO",name:"Aosta"},5:{code:"AR",name:"Arezzo"},6:{code:"AP",name:"Ascoli Piceno"},7:{code:"AT",name:"Asti"},8:{code:"AV",name:"Avellino"},9:{code:"BA",name:"Bari"},10:{code:"BL",name:"Belluno"},11:{code:"BN",name:"Benevento"},12:{code:"BG",name:"Bergamo"},13:{code:"BI",name:"Biella"},14:{code:"BO",name:"Bologna"},15:{code:"BZ",name:"Bolzano"},16:{code:"BS",name:"Brescia"},17:{code:"BR",name:"Brindisi"},18:{code:"CA",name:"Cagliari"},19:{code:"CL",name:"Caltanissetta"},20:{code:"CB",name:"Campobasso"},21:{code:"CE",name:"Caserta"},22:{code:"CT",name:"Catania"},23:{code:"CZ",name:"Catanzaro"},24:{code:"CH",name:"Chieti"},25:{code:"CO",name:"Como"},26:{code:"CS",name:"Cosenza"},27:{code:"CR",name:"Cremona"},28:{code:"KR",name:"Crotone"},29:{code:"CN",name:"Cuneo"},30:{code:"EN",name:"Enna"},31:{code:"FE",name:"Ferrara"},32:{code:"FI",name:"Firenze"},33:{code:"FG",name:"Foggia"},34:{code:"FO",name:"Forlì"},35:{code:"FR",name:"Frosinone"},36:{code:"GE",name:"Genova"},37:{code:"GO",name:"Gorizia"},38:{code:"GR",name:"Grosseto"},39:{code:"IM",name:"Imperia"},40:{code:"IS",name:"Isernia"},41:{code:"AQ",name:"Aquila"},42:{code:"SP",name:"La Spezia"},43:{code:"LT",name:"Latina"},44:{code:"LE",name:"Lecce"},45:{code:"LC",name:"Lecco"},46:{code:"LI",name:"Livorno"},47:{code:"LO",name:"Lodi"},48:{code:"LU",name:"Lucca"},49:{code:"MC",name:"Macerata"},50:{code:"MN",name:"Mantova"},51:{code:"MS",name:"Massa-Carrara"},52:{code:"MT",name:"Matera"},53:{code:"ME",name:"Messina"},54:{code:"MI",name:"Milano"},55:{code:"MO",name:"Modena"},56:{code:"NA",name:"Napoli"},57:{code:"NO",name:"Novara"},58:{code:"NU",name:"Nuoro"},59:{code:"OR",name:"Oristano"},60:{code:"PD",name:"Padova"},61:{code:"PA",name:"Palermo"},62:{code:"PR",name:"Parma"},63:{code:"PG",name:"Perugia"},64:{code:"PV",name:"Pavia"},65:{code:"PU",name:"Pesaro Urbino"},66:{code:"PE",name:"Pescara"},67:{code:"PC",name:"Piacenza"},68:{code:"PI",name:"Pisa"},69:{code:"PT",name:"Pistoia"},70:{code:"PN",name:"Pordenone"},71:{code:"PZ",name:"Potenza"},72:{code:"PO",name:"Prato"},73:{code:"RG",name:"Ragusa"},74:{code:"RA",name:"Ravenna"},75:{code:"RC",name:"Reggio Calabria"},76:{code:"RE",name:"Reggio Emilia"},77:{code:"RI",name:"Rieti"},78:{code:"RN",name:"Rimini"},79:{code:"RM",name:"Roma"},80:{code:"RO",name:"Rovigo"},81:{code:"SA",name:"Salerno"},82:{code:"SS",name:"Sassari"},83:{code:"SV",name:"Savona"},84:{code:"SI",name:"Siena"},85:{code:"SR",name:"Siracusa"},86:{code:"SO",name:"Sondrio"},87:{code:"TA",name:"Taranto"},88:{code:"TE",name:"Teramo"},89:{code:"TR",name:"Terni"},90:{code:"TO",name:"Torino"},91:{code:"TP",name:"Trapani"},92:{code:"TN",name:"Trento"},93:{code:"TV",name:"Treviso"},94:{code:"TS",name:"Trieste"},95:{code:"UD",name:"Udine"},96:{code:"VA",name:"Varese"},97:{code:"VE",name:"Venezia"},98:{code:"VB",name:"Verbania"},99:{code:"VC",name:"Vercelli"},100:{code:"VR",name:"Verona"},101:{code:"VV",name:"Vibo Valentia"},102:{code:"VI",name:"Vicenza"},103:{code:"VT",name:"Viterbo"},104:{code:"CI",name:"Carbonia-Iglesias"},105:{code:"VS",name:"Medio Campidano"},106:{code:"OG",name:"Ogliastra"},107:{code:"OT",name:"Olbia-Tempio"},108:{code:"MB",name:"Monza e Brianza"},109:{code:"FM",name:"Fermo"},110:{code:"BT",name:"Barletta-Andria-Trani"}},JM:{1:{code:"CLA",name:"Clarendon Parish"},2:{code:"HAN",name:"Hanover Parish"},3:{code:"KIN",name:"Kingston Parish"},4:{code:"MAN",name:"Manchester Parish"},5:{code:"POR",name:"Portland Parish"},6:{code:"AND",name:"Saint Andrew Parish"},7:{code:"ANN",name:"Saint Ann Parish"},8:{code:"CAT",name:"Saint Catherine Parish"},9:{code:"ELI",name:"Saint Elizabeth Parish"},10:{code:"JAM",name:"Saint James Parish"},11:{code:"MAR",name:"Saint Mary Parish"},12:{code:"THO",name:"Saint Thomas Parish"},13:{code:"TRL",name:"Trelawny Parish"},14:{code:"WML",name:"Westmoreland Parish"}},JP:{1:{code:"AI",name:"Aichi"},2:{code:"AK",name:"Akita"},3:{code:"AO",name:"Aomori"},4:{code:"CH",name:"Chiba"},5:{code:"EH",name:"Ehime"},6:{code:"FK",name:"Fukui"},7:{code:"FU",name:"Fukuoka"},8:{code:"FS",name:"Fukushima"},9:{code:"GI",name:"Gifu"},10:{code:"GU",name:"Gumma"},11:{code:"HI",name:"Hiroshima"},12:{code:"HO",name:"Hokkaido"},13:{code:"HY",name:"Hyogo"},14:{code:"IB",name:"Ibaraki"},15:{code:"IS",name:"Ishikawa"},16:{code:"IW",name:"Iwate"},17:{code:"KA",name:"Kagawa"},18:{code:"KG",name:"Kagoshima"},19:{code:"KN",name:"Kanagawa"},20:{code:"KO",name:"Kochi"},21:{code:"KU",name:"Kumamoto"},22:{code:"KY",name:"Kyoto"},23:{code:"MI",name:"Mie"},24:{code:"MY",name:"Miyagi"},25:{code:"MZ",name:"Miyazaki"},26:{code:"NA",name:"Nagano"},27:{code:"NG",name:"Nagasaki"},28:{code:"NR",name:"Nara"},29:{code:"NI",name:"Niigata"},30:{code:"OI",name:"Oita"},31:{code:"OK",name:"Okayama"},32:{code:"ON",name:"Okinawa"},33:{code:"OS",name:"Osaka"},34:{code:"SA",name:"Saga"},35:{code:"SI",name:"Saitama"},36:{code:"SH",name:"Shiga"},37:{code:"SM",name:"Shimane"},38:{code:"SZ",name:"Shizuoka"},39:{code:"TO",name:"Tochigi"},40:{code:"TS",name:"Tokushima"},41:{code:"TK",name:"Tokyo"},42:{code:"TT",name:"Tottori"},43:{code:"TY",name:"Toyama"},44:{code:"WA",name:"Wakayama"},45:{code:"YA",name:"Yamagata"},46:{code:"YM",name:"Yamaguchi"},47:{code:"YN",name:"Yamanashi"}},JO:{1:{code:"AM",name:"'Amman"},2:{code:"AJ",name:"Ajlun"},3:{code:"AA",name:"Al'Aqabah"},4:{code:"AB",name:"Al Balqa'"},5:{code:"AK",name:"Al Karak"},6:{code:"AL",name:"Al Mafraq"},7:{code:"AT",name:"At Tafilah"},8:{code:"AZ",name:"Az Zarqa'"},9:{code:"IR",name:"Irbid"},10:{code:"JA",name:"Jarash"},11:{code:"MA",name:"Ma'an"},12:{code:"MD",name:"Madaba"}},KZ:{1:{code:"AL",name:"Almaty"},2:{code:"AC",name:"Almaty City"},3:{code:"AM",name:"Aqmola"},4:{code:"AQ",name:"Aqtobe"},5:{code:"AS",name:"Astana City"},6:{code:"AT",name:"Atyrau"},7:{code:"BA",name:"Batys Qazaqstan"},8:{code:"BY",name:"Bayqongyr City"},9:{code:"MA",name:"Mangghystau"},10:{code:"ON",name:"Ongtustik Qazaqstan"},11:{code:"PA",name:"Pavlodar"},12:{code:"QA",name:"Qaraghandy"},13:{code:"QO",name:"Qostanay"},14:{code:"QY",name:"Qyzylorda"},15:{code:"SH",name:"Shyghys Qazaqstan"},16:{code:"SO",name:"Soltustik Qazaqstan"},17:{code:"ZH",name:"Zhambyl"}},KE:{1:{code:"CE",name:"Central"},2:{code:"CO",name:"Coast"},3:{code:"EA",name:"Eastern"},4:{code:"NA",name:"Nairobi Area"},5:{code:"NE",name:"North Eastern"},6:{code:"NY",name:"Nyanza"},7:{code:"RV",name:"Rift Valley"},8:{code:"WE",name:"Western"}},KI:{1:{code:"AG",name:"Abaiang"},2:{code:"AM",name:"Abemama"},3:{code:"AK",name:"Aranuka"},4:{code:"AO",name:"Arorae"},5:{code:"BA",name:"Banaba"},6:{code:"BE",name:"Beru"},7:{code:"bT",name:"Butaritari"},8:{code:"KA",name:"Kanton"},9:{code:"KR",name:"Kiritimati"},10:{code:"KU",name:"Kuria"},11:{code:"MI",name:"Maiana"},12:{code:"MN",name:"Makin"},13:{code:"ME",name:"Marakei"},14:{code:"NI",name:"Nikunau"},15:{code:"NO",name:"Nonouti"},16:{code:"ON",name:"Onotoa"},17:{code:"TT",name:"Tabiteuea"},18:{code:"TR",name:"Tabuaeran"},19:{code:"TM",name:"Tamana"},20:{code:"TW",name:"Tarawa"},21:{code:"TE",name:"Teraina"}},KP:{1:{code:"CHA",name:"Chagang-do"},2:{code:"HAB",name:"Hamgyong-bukto"},3:{code:"HAN",name:"Hamgyong-namdo"},4:{code:"HWB",name:"Hwanghae-bukto"},5:{code:"HWN",name:"Hwanghae-namdo"},6:{code:"KAN",name:"Kangwon-do"},7:{code:"PYB",name:"P'yongan-bukto"},8:{code:"PYN",name:"P'yongan-namdo"},9:{code:"YAN",name:"Ryanggang-do (Yanggang-do)"},10:{code:"NAJ",name:"Rason Directly Governed City"},11:{code:"PYO",name:"P'yongyang Special City"}},KR:{1:{code:"CO",name:"Ch'ungch'ong-bukto"},2:{code:"CH",name:"Ch'ungch'ong-namdo"},3:{code:"CD",name:"Cheju-do"},4:{code:"CB",name:"Cholla-bukto"},5:{code:"CN",name:"Cholla-namdo"},6:{code:"IG",name:"Inch'on-gwangyoksi"},7:{code:"KA",name:"Kangwon-do"},8:{code:"KG",name:"Kwangju-gwangyoksi"},9:{code:"KD",name:"Kyonggi-do"},10:{code:"KB",name:"Kyongsang-bukto"},11:{code:"KN",name:"Kyongsang-namdo"},12:{code:"PG",name:"Pusan-gwangyoksi"},13:{code:"SO",name:"Soul-t'ukpyolsi"},14:{code:"TA",name:"Taegu-gwangyoksi"},15:{code:"TG",name:"Taejon-gwangyoksi"}},KW:{1:{code:"AL",name:"Al'Asimah"},2:{code:"AA",name:"Al Ahmadi"},3:{code:"AF",name:"Al Farwaniyah"},4:{code:"AJ",name:"Al Jahra'"},5:{code:"HA",name:"Hawalli"}},KG:{1:{code:"GB",name:"Bishkek"},2:{code:"B",name:"Batken"},3:{code:"C",name:"Chu"},4:{code:"J",name:"Jalal-Abad"},5:{code:"N",name:"Naryn"},6:{code:"O",name:"Osh"},7:{code:"T",name:"Talas"},8:{code:"Y",name:"Ysyk-Kol"}},LA:{1:{code:"VT",name:"Vientiane"},2:{code:"AT",name:"Attapu"},3:{code:"BK",name:"Bokeo"},4:{code:"BL",name:"Bolikhamxai"},5:{code:"CH",name:"Champasak"},6:{code:"HO",name:"Houaphan"},7:{code:"KH",name:"Khammouan"},8:{code:"LM",name:"Louang Namtha"},9:{code:"LP",name:"Louangphabang"},10:{code:"OU",name:"Oudomxai"},11:{code:"PH",name:"Phongsali"},12:{code:"SL",name:"Salavan"},13:{code:"SV",name:"Savannakhet"},14:{code:"VI",name:"Vientiane"},15:{code:"XA",name:"Xaignabouli"},16:{code:"XE",name:"Xekong"},17:{code:"XI",name:"Xiangkhoang"},18:{code:"XN",name:"Xaisomboun"}},LV:{1:{code:"AIZ",name:"Aizkraukles Rajons"},2:{code:"ALU",name:"Aluksnes Rajons"},3:{code:"BAL",name:"Balvu Rajons"},4:{code:"BAU",name:"Bauskas Rajons"},5:{code:"CES",name:"Cesu Rajons"},6:{code:"DGR",name:"Daugavpils Rajons"},7:{code:"DOB",name:"Dobeles Rajons"},8:{code:"GUL",name:"Gulbenes Rajons"},9:{code:"JEK",name:"Jekabpils Rajons"},10:{code:"JGR",name:"Jelgavas Rajons"},11:{code:"KRA",name:"Kraslavas Rajons"},12:{code:"KUL",name:"Kuldigas Rajons"},13:{code:"LPR",name:"Liepajas Rajons"},14:{code:"LIM",name:"Limbazu Rajons"},15:{code:"LUD",name:"Ludzas Rajons"},16:{code:"MAD",name:"Madonas Rajons"},17:{code:"OGR",name:"Ogres Rajons"},18:{code:"PRE",name:"Preilu Rajons"},19:{code:"RZR",name:"Rezeknes Rajons"},20:{code:"RGR",name:"Rigas Rajons"},21:{code:"SAL",name:"Saldus Rajons"},22:{code:"TAL",name:"Talsu Rajons"},23:{code:"TUK",name:"Tukuma Rajons"},24:{code:"VLK",name:"Valkas Rajons"},25:{code:"VLM",name:"Valmieras Rajons"},26:{code:"VSR",name:"Ventspils Rajons"},27:{code:"DGV",name:"Daugavpils"},28:{code:"JGV",name:"Jelgava"},29:{code:"JUR",name:"Jurmala"},30:{code:"LPK",name:"Liepaja"},31:{code:"RZK",name:"Rezekne"},32:{code:"RGA",name:"Riga"},33:{code:"VSL",name:"Ventspils"}},LB:{1:{code:"BIN",name:"Bint Jbeil"},2:{code:"HAS",name:"Hasbaya"},3:{code:"MAR",name:"Marjeyoun"},4:{code:"NAB",name:"Nabatieh"},5:{code:"BAA",name:"Baalbek"},6:{code:"HER",name:"Hermel"},7:{code:"RAS",name:"Rashaya"},8:{code:"WES",name:"Western Beqaa"},9:{code:"ZAH",name:"Zahle"},10:{code:"AKK",name:"Akkar"},11:{code:"BAT",name:"Batroun"},12:{code:"BSH",name:"Bsharri"},13:{code:"KOU",name:"Koura"},14:{code:"MIN",name:"Miniyeh-Danniyeh"},15:{code:"TRI",name:"Tripoli"},16:{code:"ZGH",name:"Zgharta"},17:{code:"ALE",name:"Aley"},18:{code:"BAA",name:"Baabda"},19:{code:"BYB",name:"Byblos"},20:{code:"CHO",name:"Chouf"},21:{code:"KES",name:"Kesrwan"},22:{code:"MAT",name:"Matn"},23:{code:"JEZ",name:"Jezzine"},24:{code:"SID",name:"Sidon"},25:{code:"TYR",name:"Tyre"}},LS:{1:{code:"BE",name:"Berea"},2:{code:"BB",name:"Butha-Buthe"},3:{code:"LE",name:"Leribe"},4:{code:"MF",name:"Mafeteng"},5:{code:"MS",name:"Maseru"},6:{code:"MH",name:"Mohale's Hoek"},7:{code:"MK",name:"Mokhotlong"},8:{code:"QN",name:"Qacha's Nek"},9:{code:"QT",name:"Quthing"},10:{code:"TT",name:"Thaba-Tseka"}},LR:{1:{code:"BI",name:"Bomi"},2:{code:"BG",name:"Bong"},3:{code:"GB",name:"Grand Bassa"},4:{code:"CM",name:"Grand Cape Mount"},5:{code:"GG",name:"Grand Gedeh"},6:{code:"GK",name:"Grand Kru"},7:{code:"LO",name:"Lofa"},8:{code:"MG",name:"Margibi"},9:{code:"ML",name:"Maryland"},10:{code:"MS",name:"Montserrado"},11:{code:"NB",name:"Nimba"},12:{code:"RC",name:"River Cess"},13:{code:"SN",name:"Sinoe"}},LY:{1:{code:"AJ",name:"Ajdabiya"},2:{code:"AZ",name:"Al 'Aziziyah"},3:{code:"FA",name:"Al Fatih"},4:{code:"JA",name:"Al Jabal al Akhdar"},5:{code:"JU",name:"Al Jufrah"},6:{code:"KH",name:"Al Khums"},7:{code:"KU",name:"Al Kufrah"},8:{code:"NK",name:"An Nuqat al Khams"},9:{code:"AS",name:"Ash Shati'"},10:{code:"AW",name:"Awbari"},11:{code:"ZA",name:"Az Zawiyah"},12:{code:"BA",name:"Banghazi"},13:{code:"DA",name:"Darnah"},14:{code:"GD",name:"Ghadamis"},15:{code:"GY",name:"Gharyan"},16:{code:"MI",name:"Misratah"},17:{code:"MZ",name:"Murzuq"},18:{code:"SB",name:"Sabha"},19:{code:"SW",name:"Sawfajjin"},20:{code:"SU",name:"Surt"},21:{code:"TL",name:"Tarabulus (Tripoli)"},22:{code:"TH",name:"Tarhunah"},23:{code:"TU",name:"Tubruq"},24:{code:"YA",name:"Yafran"},25:{code:"ZL",name:"Zlitan"}},LI:{1:{code:"V",name:"Vaduz"},2:{code:"A",name:"Schaan"},3:{code:"B",name:"Balzers"},4:{code:"N",name:"Triesen"},5:{code:"E",name:"Eschen"},6:{code:"M",name:"Mauren"},7:{code:"T",name:"Triesenberg"},8:{code:"R",name:"Ruggell"},9:{code:"G",name:"Gamprin"},10:{code:"L",name:"Schellenberg"},11:{code:"P",name:"Planken"}},LT:{1:{code:"AL",name:"Alytus"},2:{code:"KA",name:"Kaunas"},3:{code:"KL",name:"Klaipeda"},4:{code:"MA",name:"Marijampole"},5:{code:"PA",name:"Panevezys"},6:{code:"SI",name:"Siauliai"},7:{code:"TA",name:"Taurage"},8:{code:"TE",name:"Telsiai"},9:{code:"UT",name:"Utena"},10:{code:"VI",name:"Vilnius"}},LU:{1:{code:"DD",name:"Diekirch"},2:{code:"DC",name:"Clervaux"},3:{code:"DR",name:"Redange"},4:{code:"DV",name:"Vianden"},5:{code:"DW",name:"Wiltz"},6:{code:"GG",name:"Grevenmacher"},7:{code:"GE",name:"Echternach"},8:{code:"GR",name:"Remich"},9:{code:"LL",name:"Luxembourg"},10:{code:"LC",name:"Capellen"},11:{code:"LE",name:"Esch-sur-Alzette"},12:{code:"LM",name:"Mersch"}},MO:{1:{code:"OLF",name:"Our Lady Fatima Parish"},2:{code:"ANT",name:"St. Anthony Parish"},3:{code:"LAZ",name:"St. Lazarus Parish"},4:{code:"CAT",name:"Cathedral Parish"},5:{code:"LAW",name:"St. Lawrence Parish"}},MK:{1:{code:"AER",name:"Aerodrom"},2:{code:"ARA",name:"Aračinovo"},3:{code:"BER",name:"Berovo"},4:{code:"BIT",name:"Bitola"},5:{code:"BOG",name:"Bogdanci"},6:{code:"BOG",name:"Bogovinje"},7:{code:"BOS",name:"Bosilovo"},8:{code:"BRV",name:"Brvenica"},9:{code:"BUT",name:"Butel"},10:{code:"ČAI",name:"Čair"},11:{code:"ČAš",name:"Čaška"},12:{code:"CEN",name:"Centar"},13:{code:"CEN",name:"Centar Župa"},14:{code:"Češ",name:"Češinovo-Obleš"},15:{code:"ČUČ",name:"Čučer-Sandevo"},16:{code:"DEB",name:"Debar"},17:{code:"DEB",name:"Debarca"},18:{code:"DEL",name:"Delčevo"},19:{code:"DEM",name:"Demir Hisar"},20:{code:"DEM",name:"Demir Kapija"},21:{code:"DOL",name:"Dolneni"},22:{code:"DRU",name:"Drugovo"},23:{code:"GAZ",name:"Gazi Baba"},24:{code:"GEV",name:"Gevgelija"},25:{code:"GJO",name:"Gjorče Petrov"},26:{code:"GOS",name:"Gostivar"},27:{code:"GRA",name:"Gradsko"},28:{code:"ILI",name:"Ilinden"},29:{code:"JEG",name:"Jegunovce"},30:{code:"KAR",name:"Karbinci"},31:{code:"KAR",name:"Karpoš"},32:{code:"KAV",name:"Kavadarci"},33:{code:"KIČ",name:"Kičevo"},34:{code:"KIS",name:"Kisela Voda"},35:{code:"KOč",name:"Kočani"},36:{code:"KON",name:"Konče"},37:{code:"KRA",name:"Kratovo"},38:{code:"KRI",name:"Kriva Palanka"},39:{code:"KRI",name:"Krivogaštani"},40:{code:"KRU",name:"Kruševo"},41:{code:"KUM",name:"Kumanovo"},42:{code:"LIP",name:"Lipkovo"},43:{code:"LOZ",name:"Lozovo"},44:{code:"MAK",name:"Makedonska Kamenica"},45:{code:"MAK",name:"Makedonski Brod"},46:{code:"MAV",name:"Mavrovo and Rostuša"},47:{code:"MOG",name:"Mogila"},48:{code:"NEG",name:"Negotino"},49:{code:"NOV",name:"Novaci"},50:{code:"NOV",name:"Novo Selo"},51:{code:"OHR",name:"Ohrid"},52:{code:"OSL",name:"Oslomej"},53:{code:"PEH",name:"Pehčevo"},54:{code:"PET",name:"Petrovec"},55:{code:"PLA",name:"Plasnica"},56:{code:"PRI",name:"Prilep"},57:{code:"PRO",name:"Probištip"},58:{code:"RAD",name:"Radoviš"},59:{code:"RAN",name:"Rankovce"},60:{code:"RES",name:"Resen"},61:{code:"ROS",name:"Rosoman"},62:{code:"SAR",name:"Saraj"},63:{code:"SOP",name:"Sopište"},64:{code:"STA",name:"Star Dojran"},65:{code:"STA",name:"Staro Nagoričane"},66:{code:"ŠTI",name:"Štip"},67:{code:"STR",name:"Struga"},68:{code:"STR",name:"Strumica"},69:{code:"STU",name:"Studeničani"},70:{code:"ŠUT",name:"Šuto Orizari"},71:{code:"SVE",name:"Sveti Nikole"},72:{code:"TEA",name:"Tearce"},73:{code:"TET",name:"Tetovo"},74:{code:"VAL",name:"Valandovo"},75:{code:"VAS",name:"Vasilevo"},76:{code:"VEL",name:"Veles"},77:{code:"VEV",name:"Vevčani"},78:{code:"VIN",name:"Vinica"},79:{code:"VRA",name:"Vraneštica"},80:{code:"VRA",name:"Vrapčište"},81:{code:"ZAJ",name:"Zajas"},82:{code:"ZEL",name:"Zelenikovo"},83:{code:"ŽEL",name:"Želino"},84:{code:"ZRN",name:"Zrnovci"}},MG:{1:{code:"AN",name:"Antananarivo"},2:{code:"AS",name:"Antsiranana"},3:{code:"FN",name:"Fianarantsoa"},4:{code:"MJ",name:"Mahajanga"},5:{code:"TM",name:"Toamasina"},6:{code:"TL",name:"Toliara"}},MW:{1:{code:"BLK",name:"Balaka"},2:{code:"BLT",name:"Blantyre"},3:{code:"CKW",name:"Chikwawa"},4:{code:"CRD",name:"Chiradzulu"},5:{code:"CTP",name:"Chitipa"},6:{code:"DDZ",name:"Dedza"},7:{code:"DWA",name:"Dowa"},8:{code:"KRG",name:"Karonga"},9:{code:"KSG",name:"Kasungu"},10:{code:"LKM",name:"Likoma"},11:{code:"LLG",name:"Lilongwe"},12:{code:"MCG",name:"Machinga"},13:{code:"MGC",name:"Mangochi"},14:{code:"MCH",name:"Mchinji"},15:{code:"MLJ",name:"Mulanje"},16:{code:"MWZ",name:"Mwanza"},17:{code:"MZM",name:"Mzimba"},18:{code:"NTU",name:"Ntcheu"},19:{code:"NKB",name:"Nkhata Bay"},20:{code:"NKH",name:"Nkhotakota"},21:{code:"NSJ",name:"Nsanje"},22:{code:"NTI",name:"Ntchisi"},23:{code:"PHL",name:"Phalombe"},24:{code:"RMP",name:"Rumphi"},25:{code:"SLM",name:"Salima"},26:{code:"THY",name:"Thyolo"},27:{code:"ZBA",name:"Zomba"}},MY:{1:{code:"Johor",name:"Johor"},2:{code:"Kedah",name:"Kedah"},3:{code:"Kelantan",name:"Kelantan"},4:{code:"Labuan",name:"Labuan"},5:{code:"Melaka",name:"Melaka"},6:{code:"Negeri Sembilan",name:"Negeri Sembilan"},7:{code:"Pahang",name:"Pahang"},8:{code:"Perak",name:"Perak"},9:{code:"Perlis",name:"Perlis"},10:{code:"Pulau Pinang",name:"Pulau Pinang"},11:{code:"Sabah",name:"Sabah"},12:{code:"Sarawak",name:"Sarawak"},13:{code:"Selangor",name:"Selangor"},14:{code:"Terengganu",name:"Terengganu"},15:{code:"Kuala Lumpur",name:"Kuala Lumpur"}},MV:{1:{code:"AAD",name:"Ari Atoll Dheknu"},2:{code:"AAU",name:"Ari Atoll Uthuru"},3:{code:"ADD",name:"Addu"},4:{code:"FAA",name:"Faadhippolhu"},5:{code:"FEA",name:"Felidhe Atoll"},6:{code:"FMU",name:"Fua Mulaku"},7:{code:"HAD",name:"Huvadhu Atoll Dhekunu"},8:{code:"HAU",name:"Huvadhu Atoll Uthuru"},9:{code:"HDH",name:"Hadhdhunmathi"},10:{code:"KLH",name:"Kolhumadulu"},11:{code:"MAA",name:"Male Atoll"},12:{code:"MAD",name:"Maalhosmadulu Dhekunu"},13:{code:"MAU",name:"Maalhosmadulu Uthuru"},14:{code:"MLD",name:"Miladhunmadulu Dhekunu"},15:{code:"MLU",name:"Miladhunmadulu Uthuru"},16:{code:"MUA",name:"Mulaku Atoll"},17:{code:"NAD",name:"Nilandhe Atoll Dhekunu"},18:{code:"NAU",name:"Nilandhe Atoll Uthuru"},19:{code:"THD",name:"Thiladhunmathi Dhekunu"},20:{code:"THU",name:"Thiladhunmathi Uthuru"}},ML:{1:{code:"GA",name:"Gao"},2:{code:"KY",name:"Kayes"},3:{code:"KD",name:"Kidal"},4:{code:"KL",name:"Koulikoro"},5:{code:"MP",name:"Mopti"},6:{code:"SG",name:"Segou"},7:{code:"SK",name:"Sikasso"},8:{code:"TB",name:"Tombouctou"},9:{code:"CD",name:"Bamako Capital District"}},MT:{1:{code:"ATT",name:"Attard"},2:{code:"BAL",name:"Balzan"},3:{code:"BGU",name:"Birgu"},4:{code:"BKK",name:"Birkirkara"},5:{code:"BRZ",name:"Birzebbuga"},6:{code:"BOR",name:"Bormla"},7:{code:"DIN",name:"Dingli"},8:{code:"FGU",name:"Fgura"},9:{code:"FLO",name:"Floriana"},10:{code:"GDJ",name:"Gudja"},11:{code:"GZR",name:"Gzira"},12:{code:"GRG",name:"Gargur"},13:{code:"GXQ",name:"Gaxaq"},14:{code:"HMR",name:"Hamrun"},15:{code:"IKL",name:"Iklin"},16:{code:"ISL",name:"Isla"},17:{code:"KLK",name:"Kalkara"},18:{code:"KRK",name:"Kirkop"},19:{code:"LIJ",name:"Lija"},20:{code:"LUQ",name:"Luqa"},21:{code:"MRS",name:"Marsa"},22:{code:"MKL",name:"Marsaskala"},23:{code:"MXL",name:"Marsaxlokk"},24:{code:"MDN",name:"Mdina"},25:{code:"MEL",name:"Melliea"},26:{code:"MGR",name:"Mgarr"},27:{code:"MST",name:"Mosta"},28:{code:"MQA",name:"Mqabba"},29:{code:"MSI",name:"Msida"},30:{code:"MTF",name:"Mtarfa"},31:{code:"NAX",name:"Naxxar"},32:{code:"PAO",name:"Paola"},33:{code:"PEM",name:"Pembroke"},34:{code:"PIE",name:"Pieta"},35:{code:"QOR",name:"Qormi"},36:{code:"QRE",name:"Qrendi"},37:{code:"RAB",name:"Rabat"},38:{code:"SAF",name:"Safi"},39:{code:"SGI",name:"San Giljan"},40:{code:"SLU",name:"Santa Lucija"},41:{code:"SPB",name:"San Pawl il-Bahar"},42:{code:"SGW",name:"San Gwann"},43:{code:"SVE",name:"Santa Venera"},44:{code:"SIG",name:"Siggiewi"},45:{code:"SLM",name:"Sliema"},46:{code:"SWQ",name:"Swieqi"},47:{code:"TXB",name:"Ta Xbiex"},48:{code:"TRX",name:"Tarxien"},49:{code:"VLT",name:"Valletta"},50:{code:"XGJ",name:"Xgajra"},51:{code:"ZBR",name:"Zabbar"},52:{code:"ZBG",name:"Zebbug"},53:{code:"ZJT",name:"Zejtun"},54:{code:"ZRQ",name:"Zurrieq"},55:{code:"FNT",name:"Fontana"},56:{code:"GHJ",name:"Ghajnsielem"},57:{code:"GHR",name:"Gharb"},58:{code:"GHS",name:"Ghasri"},59:{code:"KRC",name:"Kercem"},60:{code:"MUN",name:"Munxar"},61:{code:"NAD",name:"Nadur"},62:{code:"QAL",name:"Qala"},63:{code:"VIC",name:"Victoria"},64:{code:"SLA",name:"San Lawrenz"},65:{code:"SNT",name:"Sannat"},66:{code:"ZAG",name:"Xagra"},67:{code:"XEW",name:"Xewkija"},68:{code:"ZEB",name:"Zebbug"}},MH:{1:{code:"ALG",name:"Ailinginae"},2:{code:"ALL",name:"Ailinglaplap"},3:{code:"ALK",name:"Ailuk"},4:{code:"ARN",name:"Arno"},5:{code:"AUR",name:"Aur"},6:{code:"BKR",name:"Bikar"},7:{code:"BKN",name:"Bikini"},8:{code:"BKK",name:"Bokak"},9:{code:"EBN",name:"Ebon"},10:{code:"ENT",name:"Enewetak"},11:{code:"EKB",name:"Erikub"},12:{code:"JBT",name:"Jabat"},13:{code:"JLT",name:"Jaluit"},14:{code:"JEM",name:"Jemo"},15:{code:"KIL",name:"Kili"},16:{code:"KWJ",name:"Kwajalein"},17:{code:"LAE",name:"Lae"},18:{code:"LIB",name:"Lib"},19:{code:"LKP",name:"Likiep"},20:{code:"MJR",name:"Majuro"},21:{code:"MLP",name:"Maloelap"},22:{code:"MJT",name:"Mejit"},23:{code:"MIL",name:"Mili"},24:{code:"NMK",name:"Namorik"},25:{code:"NAM",name:"Namu"},26:{code:"RGL",name:"Rongelap"},27:{code:"RGK",name:"Rongrik"},28:{code:"TOK",name:"Toke"},29:{code:"UJA",name:"Ujae"},30:{code:"UJL",name:"Ujelang"},31:{code:"UTK",name:"Utirik"},32:{code:"WTH",name:"Wotho"},33:{code:"WTJ",name:"Wotje"}},MQ:{1:{code:"LAJ",name:"L'Ajoupa-Bouillon"},2:{code:"LES",name:"Les Anses-d'Arlet"},3:{code:"BAS",name:"Basse-Pointe"},4:{code:"BEL",name:"Bellefontaine"},5:{code:"LE",name:"Le Carbet"},6:{code:"CAS",name:"Case-Pilote"},7:{code:"LE",name:"Le Diamant"},8:{code:"DUC",name:"Ducos"},9:{code:"FON",name:"Fonds-Saint-Denis"},10:{code:"FOR",name:"Fort-De-France"},11:{code:"LE",name:"Le François"},12:{code:"GRA",name:"Grand'Rivière"},13:{code:"GRO",name:"Gros-Morne"},14:{code:"LE",name:"Le Lamentin"},15:{code:"LE",name:"Le Lorrain"},16:{code:"MAC",name:"Macouba"},17:{code:"LE",name:"Le Marigot"},18:{code:"LE",name:"Le Marin"},19:{code:"LE",name:"Le Morne-Rouge"},20:{code:"LE",name:"Le Morne-Vert"},21:{code:"LE",name:"Le Prêcheur"},22:{code:"RIV",name:"Rivière-Pilote"},23:{code:"RIV",name:"Rivière-Salée"},24:{code:"LE",name:"Le Robert"},25:{code:"SAI",name:"Sainte-Anne"},26:{code:"SAI",name:"Sainte-Luce"},27:{code:"SAI",name:"Sainte-Marie"},28:{code:"SAI",name:"Saint-Esprit"},29:{code:"SAI",name:"Saint-Joseph"},30:{code:"SAI",name:"Saint-Pierre"},31:{code:"SCH",name:"Schœlcher"},32:{code:"LA",name:"La Trinité"},33:{code:"LES",name:"Les Trois-Îlets"},34:{code:"LE",name:"Le Vauclin"}},MR:{1:{code:"AD",name:"Adrar"},2:{code:"AS",name:"Assaba"},3:{code:"BR",name:"Brakna"},4:{code:"DN",name:"Dakhlet Nouadhibou"},5:{code:"GO",name:"Gorgol"},6:{code:"GM",name:"Guidimaka"},7:{code:"HC",name:"Hodh Ech Chargui"},8:{code:"HG",name:"Hodh El Gharbi"},9:{code:"IN",name:"Inchiri"},10:{code:"TA",name:"Tagant"},11:{code:"TZ",name:"Tiris Zemmour"},12:{code:"TR",name:"Trarza"},13:{code:"NO",name:"Nouakchott"}},MU:{1:{code:"AG",name:"Agalega Islands"},2:{code:"BL",name:"Black River"},3:{code:"BR",name:"Beau Bassin-Rose Hill"},4:{code:"CC",name:"Cargados Carajos Shoals (Saint B)"},5:{code:"CU",name:"Curepipe"},6:{code:"FL",name:"Flacq"},7:{code:"GP",name:"Grand Port"},8:{code:"MO",name:"Moka"},9:{code:"PA",name:"Pamplemousses"},10:{code:"PL",name:"Port Louis"},11:{code:"PU",name:"Port Louis"},12:{code:"PW",name:"Plaines Wilhems"},13:{code:"QB",name:"Quatre Bornes"},14:{code:"RO",name:"Rodrigues"},15:{code:"RR",name:"Riviere du Rempart"},16:{code:"SA",name:"Savanne"},17:{code:"VP",name:"Vacoas-Phoenix"}},YT:{1:{code:"DZA",name:"Dzaoudzi"},2:{code:"PAM",name:"Pamandzi"},3:{code:"MAM",name:"Mamoudzou"},4:{code:"DEM",name:"Dembeni"},5:{code:"BAN",name:"Bandrele"},6:{code:"KAN",name:"Kani-Kéli"},7:{code:"BOU",name:"Bouéni"},8:{code:"CHI",name:"Chirongui"},9:{code:"SAD",name:"Sada"},10:{code:"OUA",name:"Ouangani"},11:{code:"CHI",name:"Chiconi"},12:{code:"TSI",name:"Tsingoni"},13:{code:"MTS",name:"M'Tsangamouji"},14:{code:"ACO",name:"Acoua"},15:{code:"MTS",name:"Mtsamboro"},16:{code:"BAN",name:"Bandraboua"},17:{code:"KOU",name:"Koungou"}},MX:{1:{code:"AGU",name:"Aguascalientes"},2:{code:"BCN",name:"Baja California Norte"},3:{code:"BCS",name:"Baja California Sur"},4:{code:"CAM",name:"Campeche"},5:{code:"CHP",name:"Chiapas"},6:{code:"CHH",name:"Chihuahua"},7:{code:"COA",name:"Coahuila de Zaragoza"},8:{code:"COL",name:"Colima"},9:{code:"DIF",name:"Distrito Federal"},10:{code:"DUR",name:"Durango"},11:{code:"GUA",name:"Guanajuato"},12:{code:"GRO",name:"Guerrero"},13:{code:"HID",name:"Hidalgo"},14:{code:"JAL",name:"Jalisco"},15:{code:"MEX",name:"Mexico"},16:{code:"MIC",name:"Michoacan de Ocampo"},17:{code:"MOR",name:"Morelos"},18:{code:"NAY",name:"Nayarit"},19:{code:"NLE",name:"Nuevo Leon"},20:{code:"OAX",name:"Oaxaca"},21:{code:"PUE",name:"Puebla"},22:{code:"QUE",name:"Queretaro de Arteaga"},23:{code:"ROO",name:"Quintana Roo"},24:{code:"SLP",name:"San Luis Potosi"},25:{code:"SIN",name:"Sinaloa"},26:{code:"SON",name:"Sonora"},27:{code:"TAB",name:"Tabasco"},28:{code:"TAM",name:"Tamaulipas"},29:{code:"TLA",name:"Tlaxcala"},30:{code:"VER",name:"Veracruz-Llave"},31:{code:"YUC",name:"Yucatan"},32:{code:"ZAC",name:"Zacatecas"}},FM:{1:{code:"C",name:"Chuuk"},2:{code:"K",name:"Kosrae"},3:{code:"P",name:"Pohnpei"},4:{code:"Y",name:"Yap"}},MD:{1:{code:"GA",name:"Gagauzia"},2:{code:"CU",name:"Chisinau"},3:{code:"BA",name:"Balti"},4:{code:"CA",name:"Cahul"},5:{code:"ED",name:"Edinet"},6:{code:"LA",name:"Lapusna"},7:{code:"OR",name:"Orhei"},8:{code:"SO",name:"Soroca"},9:{code:"TI",name:"Tighina"},10:{code:"UN",name:"Ungheni"},11:{code:"SN",name:"Stânga Nistrului"}},MC:{1:{code:"FV",name:"Fontvieille"},2:{code:"LC",name:"La Condamine"},3:{code:"MV",name:"Monaco-Ville"},4:{code:"MC",name:"Monte-Carlo"}},MN:{1:{code:"1",name:"Ulanbaatar"},2:{code:"035",name:"Orhon"},3:{code:"037",name:"Darhan uul"},4:{code:"039",name:"Hentiy"},5:{code:"041",name:"Hovsgol"},6:{code:"043",name:"Hovd"},7:{code:"046",name:"Uvs"},8:{code:"047",name:"Tov"},9:{code:"049",name:"Selenge"},10:{code:"051",name:"Suhbaatar"},11:{code:"053",name:"Omnogovi"},12:{code:"055",name:"Ovorhangay"},13:{code:"057",name:"Dzavhan"},14:{code:"059",name:"DundgovL"},15:{code:"061",name:"Dornod"},16:{code:"063",name:"Dornogov"},17:{code:"064",name:"Govi-Sumber"},18:{code:"065",name:"Govi-Altay"},19:{code:"067",name:"Bulgan"},20:{code:"069",name:"Bayanhongor"},21:{code:"071",name:"Bayan-Olgiy"},22:{code:"073",name:"Arhangay"}},MS:{1:{code:"A",name:"Saint Anthony"},2:{code:"G",name:"Saint Georges"},3:{code:"P",name:"Saint Peter"}},MA:{1:{code:"AGD",name:"Agadir"},2:{code:"HOC",name:"Al Hoceima"},3:{code:"AZI",name:"Azilal"},4:{code:"BME",name:"Beni Mellal"},5:{code:"BSL",name:"Ben Slimane"},6:{code:"BLM",name:"Boulemane"},7:{code:"CBL",name:"Casablanca"},8:{code:"CHA",name:"Chaouen"},9:{code:"EJA",name:"El Jadida"},10:{code:"EKS",name:"El Kelaa des Sraghna"},11:{code:"ERA",name:"Er Rachidia"},12:{code:"ESS",name:"Essaouira"},13:{code:"FES",name:"Fes"},14:{code:"FIG",name:"Figuig"},15:{code:"GLM",name:"Guelmim"},16:{code:"IFR",name:"Ifrane"},17:{code:"KEN",name:"Kenitra"},18:{code:"KHM",name:"Khemisset"},19:{code:"KHN",name:"Khenifra"},20:{code:"KHO",name:"Khouribga"},21:{code:"LYN",name:"Laayoune"},22:{code:"LAR",name:"Larache"},23:{code:"MRK",name:"Marrakech"},24:{code:"MKN",name:"Meknes"},25:{code:"NAD",name:"Nador"},26:{code:"ORZ",name:"Ouarzazate"},27:{code:"OUJ",name:"Oujda"},28:{code:"RSA",name:"Rabat-Sale"},29:{code:"SAF",name:"Safi"},30:{code:"SET",name:"Settat"},31:{code:"SKA",name:"Sidi Kacem"},32:{code:"TGR",name:"Tangier"},33:{code:"TAN",name:"Tan-Tan"},34:{code:"TAO",name:"Taounate"},35:{code:"TRD",name:"Taroudannt"},36:{code:"TAT",name:"Tata"},37:{code:"TAZ",name:"Taza"},38:{code:"TET",name:"Tetouan"},39:{code:"TIZ",name:"Tiznit"},40:{code:"ADK",name:"Ad Dakhla"},41:{code:"BJD",name:"Boujdour"},42:{code:"ESM",name:"Es Smara"}},MZ:{1:{code:"CD",name:"Cabo Delgado"},2:{code:"GZ",name:"Gaza"},3:{code:"IN",name:"Inhambane"},4:{code:"MN",name:"Manica"},5:{code:"MC",name:"Maputo (city)"},6:{code:"MP",name:"Maputo"},7:{code:"NA",name:"Nampula"},8:{code:"NI",name:"Niassa"},9:{code:"SO",name:"Sofala"},10:{code:"TE",name:"Tete"},11:{code:"ZA",name:"Zambezia"}},MM:{1:{code:"AY",name:"Ayeyarwady"},2:{code:"BG",name:"Bago"},3:{code:"MG",name:"Magway"},4:{code:"MD",name:"Mandalay"},5:{code:"SG",name:"Sagaing"},6:{code:"TN",name:"Tanintharyi"},7:{code:"YG",name:"Yangon"},8:{code:"CH",name:"Chin State"},9:{code:"KC",name:"Kachin State"},10:{code:"KH",name:"Kayah State"},11:{code:"KN",name:"Kayin State"},12:{code:"MN",name:"Mon State"},13:{code:"RK",name:"Rakhine State"},14:{code:"SH",name:"Shan State"}},NA:{1:{code:"CA",name:"Caprivi"},2:{code:"ER",name:"Erongo"},3:{code:"HA",name:"Hardap"},4:{code:"KR",name:"Karas"},5:{code:"KV",name:"Kavango"},6:{code:"KH",name:"Khomas"},7:{code:"KU",name:"Kunene"},8:{code:"OW",name:"Ohangwena"},9:{code:"OK",name:"Omaheke"},10:{code:"OT",name:"Omusati"},11:{code:"ON",name:"Oshana"},12:{code:"OO",name:"Oshikoto"},13:{code:"OJ",name:"Otjozondjupa"}},NR:{1:{code:"AO",name:"Aiwo"},2:{code:"AA",name:"Anabar"},3:{code:"AT",name:"Anetan"},4:{code:"AI",name:"Anibare"},5:{code:"BA",name:"Baiti"},6:{code:"BO",name:"Boe"},7:{code:"BU",name:"Buada"},8:{code:"DE",name:"Denigomodu"},9:{code:"EW",name:"Ewa"},10:{code:"IJ",name:"Ijuw"},11:{code:"ME",name:"Meneng"},12:{code:"NI",name:"Nibok"},13:{code:"UA",name:"Uaboe"},14:{code:"YA",name:"Yaren"}},NP:{1:{code:"BA",name:"Bagmati"},2:{code:"BH",name:"Bheri"},3:{code:"DH",name:"Dhawalagiri"},4:{code:"GA",name:"Gandaki"},5:{code:"JA",name:"Janakpur"},6:{code:"KA",name:"Karnali"},7:{code:"KO",name:"Kosi"},8:{code:"LU",name:"Lumbini"},9:{code:"MA",name:"Mahakali"},10:{code:"ME",name:"Mechi"},11:{code:"NA",name:"Narayani"},12:{code:"RA",name:"Rapti"},13:{code:"SA",name:"Sagarmatha"},14:{code:"SE",name:"Seti"}},NL:{1:{code:"DR",name:"Drenthe"},2:{code:"FL",name:"Flevoland"},3:{code:"FR",name:"Friesland"},4:{code:"GE",name:"Gelderland"},5:{code:"GR",name:"Groningen"},6:{code:"LI",name:"Limburg"},7:{code:"NB",name:"Noord Brabant"},8:{code:"NH",name:"Noord Holland"},9:{code:"OV",name:"Overijssel"},10:{code:"UT",name:"Utrecht"},11:{code:"ZE",name:"Zeeland"},12:{code:"ZH",name:"Zuid Holland"}},AN:{1:{code:"BON",name:"Bonaire"},2:{code:"CUR",name:"Curaçao"},3:{code:"SAB",name:"Saba"},4:{code:"SEU",name:"Sint Eustatius"},5:{code:"SMA",name:"Sint Maarten"}},NC:{1:{code:"L",name:"Iles Loyaute"},2:{code:"N",name:"Nord"},3:{code:"S",name:"Sud"}},NZ:{1:{code:"AUK",name:"Auckland"},2:{code:"BOP",name:"Bay of Plenty"},3:{code:"CAN",name:"Canterbury"},4:{code:"COR",name:"Coromandel"},5:{code:"GIS",name:"Gisborne"},6:{code:"FIO",name:"Fiordland"},7:{code:"HKB",name:"Hawke's Bay"},8:{code:"MBH",name:"Marlborough"},9:{code:"MWT",name:"Manawatu-Wanganui"},10:{code:"MCM",name:"Mt Cook-Mackenzie"},11:{code:"NSN",name:"Nelson"},12:{code:"NTL",name:"Northland"},13:{code:"OTA",name:"Otago"},14:{code:"STL",name:"Southland"},15:{code:"TKI",name:"Taranaki"},16:{code:"WGN",name:"Wellington"},17:{code:"WKO",name:"Waikato"},18:{code:"WAI",name:"Wairprarapa"},19:{code:"WTC",name:"West Coast"}},NI:{1:{code:"AN",name:"Atlantico Norte"},2:{code:"AS",name:"Atlantico Sur"},3:{code:"BO",name:"Boaco"},4:{code:"CA",name:"Carazo"},5:{code:"CI",name:"Chinandega"},6:{code:"CO",name:"Chontales"},7:{code:"ES",name:"Esteli"},8:{code:"GR",name:"Granada"},9:{code:"JI",name:"Jinotega"},10:{code:"LE",name:"Leon"},11:{code:"MD",name:"Madriz"},12:{code:"MN",name:"Managua"},13:{code:"MS",name:"Masaya"},14:{code:"MT",name:"Matagalpa"},15:{code:"NS",name:"Nuevo Segovia"},16:{code:"RS",name:"Rio San Juan"},17:{code:"RI",name:"Rivas"}},NE:{1:{code:"AG",name:"Agadez"},2:{code:"DF",name:"Diffa"},3:{code:"DS",name:"Dosso"},4:{code:"MA",name:"Maradi"},5:{code:"NM",name:"Niamey"},6:{code:"TH",name:"Tahoua"},7:{code:"TL",name:"Tillaberi"},8:{code:"ZD",name:"Zinder"}},NG:{1:{code:"AB",name:"Abia"},2:{code:"CT",name:"Abuja Federal Capital Territory"},3:{code:"AD",name:"Adamawa"},4:{code:"AK",name:"Akwa Ibom"},5:{code:"AN",name:"Anambra"},6:{code:"BC",name:"Bauchi"},7:{code:"BY",name:"Bayelsa"},8:{code:"BN",name:"Benue"},9:{code:"BO",name:"Borno"},10:{code:"CR",name:"Cross River"},11:{code:"DE",name:"Delta"},12:{code:"EB",name:"Ebonyi"},13:{code:"ED",name:"Edo"},14:{code:"EK",name:"Ekiti"},15:{code:"EN",name:"Enugu"},16:{code:"GO",name:"Gombe"},17:{code:"IM",name:"Imo"},18:{code:"JI",name:"Jigawa"},19:{code:"KD",name:"Kaduna"},20:{code:"KN",name:"Kano"},21:{code:"KT",name:"Katsina"},22:{code:"KE",name:"Kebbi"},23:{code:"KO",name:"Kogi"},24:{code:"KW",name:"Kwara"},25:{code:"LA",name:"Lagos"},26:{code:"NA",name:"Nassarawa"},27:{code:"NI",name:"Niger"},28:{code:"OG",name:"Ogun"},29:{code:"ONG",name:"Ondo"},30:{code:"OS",name:"Osun"},31:{code:"OY",name:"Oyo"},32:{code:"PL",name:"Plateau"},33:{code:"RI",name:"Rivers"},34:{code:"SO",name:"Sokoto"},35:{code:"TA",name:"Taraba"},36:{code:"YO",name:"Yobe"},37:{code:"ZA",name:"Zamfara"}},NU:{1:{code:"MAK",name:"Makefu"},2:{code:"TUA",name:"Tuapa"},3:{code:"NAM",name:"Namukulu"},4:{code:"HIK",name:"Hikutavake"},5:{code:"TOI",name:"Toi"},6:{code:"MUT",name:"Mutalau"},7:{code:"LAK",name:"Lakepa"},8:{code:"LIK",name:"Liku"},9:{code:"HAK",name:"Hakupu"},10:{code:"VAI",name:"Vaiea"},11:{code:"AVA",name:"Avatele"},12:{code:"TAM",name:"Tamakautoga"},13:{code:"ALO",name:"Alofi South"},14:{code:"ALO",name:"Alofi North"}},NF:{1:{code:"NOR",name:"Norfolk Island"}},MP:{1:{code:"N",name:"Northern Islands"},2:{code:"R",name:"Rota"},3:{code:"S",name:"Saipan"},4:{code:"T",name:"Tinian"}},NO:{1:{code:"AK",name:"Akershus"},2:{code:"AA",name:"Aust-Agder"},3:{code:"BU",name:"Buskerud"},4:{code:"FM",name:"Finnmark"},5:{code:"HM",name:"Hedmark"},6:{code:"HL",name:"Hordaland"},7:{code:"MR",name:"Møre og Romsdal"},8:{code:"NL",name:"Nordland"},9:{code:"NT",name:"Nord-Trøndelag"},10:{code:"OP",name:"Oppland"},11:{code:"OL",name:"Oslo"},12:{code:"RL",name:"Rogaland"},13:{code:"SJ",name:"Sogn og Fjordane"},14:{code:"ST",name:"Sør-Trøndelag"},15:{code:"SV",name:"Svalbard"},16:{code:"TM",name:"Telemark"},17:{code:"TR",name:"Troms"},18:{code:"VA",name:"Vest-Agder"},19:{code:"VF",name:"Vestfold"},20:{code:"OF",name:"Østfold"}},OM:{1:{code:"DA",name:"Ad Dakhiliyah"},2:{code:"BA",name:"Al Batinah"},3:{code:"WU",name:"Al Wusta"},4:{code:"SH",name:"Ash Sharqiyah"},5:{code:"ZA",name:"Az Zahirah"},6:{code:"MA",name:"Masqat"},7:{code:"MU",name:"Musandam"},8:{code:"ZU",name:"Zufar"}},PK:{1:{code:"B",name:"Balochistan"},2:{code:"T",name:"Federally Administered Tribal Ar"},3:{code:"I",name:"Islamabad Capital Territory"},4:{code:"N",name:"North-West Frontier"},5:{code:"P",name:"Punjab"},6:{code:"S",name:"Sindh"}},PW:{1:{code:"AM",name:"Aimeliik"},2:{code:"AR",name:"Airai"},3:{code:"AN",name:"Angaur"},4:{code:"HA",name:"Hatohobei"},5:{code:"KA",name:"Kayangel"},6:{code:"KO",name:"Koror"},7:{code:"ME",name:"Melekeok"},8:{code:"NA",name:"Ngaraard"},9:{code:"NG",name:"Ngarchelong"},10:{code:"ND",name:"Ngardmau"},11:{code:"NT",name:"Ngatpang"},12:{code:"NC",name:"Ngchesar"},13:{code:"NR",name:"Ngeremlengui"},14:{code:"NW",name:"Ngiwal"},15:{code:"PE",name:"Peleliu"},16:{code:"SO",name:"Sonsorol"}},PA:{1:{code:"BT",name:"Bocas del Toro"},2:{code:"CH",name:"Chiriqui"},3:{code:"CC",name:"Cocle"},4:{code:"CL",name:"Colon"},5:{code:"DA",name:"Darien"},6:{code:"HE",name:"Herrera"},7:{code:"LS",name:"Los Santos"},8:{code:"PA",name:"Panama"},9:{code:"SB",name:"San Blas"},10:{code:"VG",name:"Veraguas"}},PG:{1:{code:"BV",name:"Bougainville"},2:{code:"CE",name:"Central"},3:{code:"CH",name:"Chimbu"},4:{code:"EH",name:"Eastern Highlands"},5:{code:"EB",name:"East New Britain"},6:{code:"ES",name:"East Sepik"},7:{code:"EN",name:"Enga"},8:{code:"GU",name:"Gulf"},9:{code:"MD",name:"Madang"},10:{code:"MN",name:"Manus"},11:{code:"MB",name:"Milne Bay"},12:{code:"MR",name:"Morobe"},13:{code:"NC",name:"National Capital"},14:{code:"NI",name:"New Ireland"},15:{code:"NO",name:"Northern"},16:{code:"SA",name:"Sandaun"},17:{code:"SH",name:"Southern Highlands"},18:{code:"WE",name:"Western"},19:{code:"WH",name:"Western Highlands"},20:{code:"WB",name:"West New Britain"}},PY:{1:{code:"AG",name:"Alto Paraguay"},2:{code:"AN",name:"Alto Parana"},3:{code:"AM",name:"Amambay"},4:{code:"AS",name:"Asuncion"},5:{code:"BO",name:"Boqueron"},6:{code:"CG",name:"Caaguazu"},7:{code:"CZ",name:"Caazapa"},8:{code:"CN",name:"Canindeyu"},9:{code:"CE",name:"Central"},10:{code:"CC",name:"Concepcion"},11:{code:"CD",name:"Cordillera"},12:{code:"GU",name:"Guaira"},13:{code:"IT",name:"Itapua"},14:{code:"MI",name:"Misiones"},15:{code:"NE",name:"Neembucu"},16:{code:"PA",name:"Paraguari"},17:{code:"PH",name:"Presidente Hayes"},18:{code:"SP",name:"San Pedro"}},PE:{1:{code:"AM",name:"Amazonas"},2:{code:"AN",name:"Ancash"},3:{code:"AP",name:"Apurimac"},4:{code:"AR",name:"Arequipa"},5:{code:"AY",name:"Ayacucho"},6:{code:"CJ",name:"Cajamarca"},7:{code:"CL",name:"Callao"},8:{code:"CU",name:"Cusco"},9:{code:"HV",name:"Huancavelica"},10:{code:"HO",name:"Huanuco"},11:{code:"IC",name:"Ica"},12:{code:"JU",name:"Junin"},13:{code:"LD",name:"La Libertad"},14:{code:"LY",name:"Lambayeque"},15:{code:"LI",name:"Lima"},16:{code:"LO",name:"Loreto"},17:{code:"MD",name:"Madre de Dios"},18:{code:"MO",name:"Moquegua"},19:{code:"PA",name:"Pasco"},20:{code:"PI",name:"Piura"},21:{code:"PU",name:"Puno"},22:{code:"SM",name:"San Martin"},23:{code:"TA",name:"Tacna"},24:{code:"TU",name:"Tumbes"},25:{code:"UC",name:"Ucayali"}},PH:{1:{code:"ABR",name:"Abra"},2:{code:"ANO",name:"Agusan del Norte"},3:{code:"ASU",name:"Agusan del Sur"},4:{code:"AKL",name:"Aklan"},5:{code:"ALB",name:"Albay"},6:{code:"ANT",name:"Antique"},7:{code:"APY",name:"Apayao"},8:{code:"AUR",name:"Aurora"},9:{code:"BAS",name:"Basilan"},10:{code:"BTA",name:"Bataan"},11:{code:"BTE",name:"Batanes"},12:{code:"BTG",name:"Batangas"},13:{code:"BLR",name:"Biliran"},14:{code:"BEN",name:"Benguet"},15:{code:"BOL",name:"Bohol"},16:{code:"BUK",name:"Bukidnon"},17:{code:"BUL",name:"Bulacan"},18:{code:"CAG",name:"Cagayan"},19:{code:"CNO",name:"Camarines Norte"},20:{code:"CSU",name:"Camarines Sur"},21:{code:"CAM",name:"Camiguin"},22:{code:"CAP",name:"Capiz"},23:{code:"CAT",name:"Catanduanes"},24:{code:"CAV",name:"Cavite"},25:{code:"CEB",name:"Cebu"},26:{code:"CMP",name:"Compostela"},27:{code:"DNO",name:"Davao del Norte"},28:{code:"DSU",name:"Davao del Sur"},29:{code:"DOR",name:"Davao Oriental"},30:{code:"ESA",name:"Eastern Samar"},31:{code:"GUI",name:"Guimaras"},32:{code:"IFU",name:"Ifugao"},33:{code:"INO",name:"Ilocos Norte"},34:{code:"ISU",name:"Ilocos Sur"},35:{code:"ILO",name:"Iloilo"},36:{code:"ISA",name:"Isabela"},37:{code:"KAL",name:"Kalinga"},38:{code:"LAG",name:"Laguna"},39:{code:"LNO",name:"Lanao del Norte"},40:{code:"LSU",name:"Lanao del Sur"},41:{code:"UNI",name:"La Union"},42:{code:"LEY",name:"Leyte"},43:{code:"MAG",name:"Maguindanao"},44:{code:"MRN",name:"Marinduque"},45:{code:"MSB",name:"Masbate"},46:{code:"MIC",name:"Mindoro Occidental"},47:{code:"MIR",name:"Mindoro Oriental"},48:{code:"MSC",name:"Misamis Occidental"},49:{code:"MOR",name:"Misamis Oriental"},50:{code:"MOP",name:"Mountain"},51:{code:"NOC",name:"Negros Occidental"},52:{code:"NOR",name:"Negros Oriental"},53:{code:"NCT",name:"North Cotabato"},54:{code:"NSM",name:"Northern Samar"},55:{code:"NEC",name:"Nueva Ecija"},56:{code:"NVZ",name:"Nueva Vizcaya"},57:{code:"PLW",name:"Palawan"},58:{code:"PMP",name:"Pampanga"},59:{code:"PNG",name:"Pangasinan"},60:{code:"QZN",name:"Quezon"},61:{code:"QRN",name:"Quirino"},62:{code:"RIZ",name:"Rizal"},63:{code:"ROM",name:"Romblon"},64:{code:"SMR",name:"Samar"},65:{code:"SRG",name:"Sarangani"},66:{code:"SQJ",name:"Siquijor"},67:{code:"SRS",name:"Sorsogon"},68:{code:"SCO",name:"South Cotabato"},69:{code:"SLE",name:"Southern Leyte"},70:{code:"SKU",name:"Sultan Kudarat"},71:{code:"SLU",name:"Sulu"},72:{code:"SNO",name:"Surigao del Norte"},73:{code:"SSU",name:"Surigao del Sur"},74:{code:"TAR",name:"Tarlac"},75:{code:"TAW",name:"Tawi-Tawi"},76:{code:"ZBL",name:"Zambales"},77:{code:"ZNO",name:"Zamboanga del Norte"},78:{code:"ZSU",name:"Zamboanga del Sur"},79:{code:"ZSI",name:"Zamboanga Sibugay"}},PN:{1:{code:"PIT",name:"Pitcairn Island"}},PL:{1:{code:"DO",name:"Dolnośląskie"},2:{code:"KP",name:"Kujawsko-Pomorskie"},3:{code:"LL",name:"Lubelskie"},4:{code:"LU",name:"Lubuskie"},5:{code:"LO",name:"Łódzkie"},6:{code:"ML",name:"Małopolskie"},7:{code:"MZ",name:"Mazowieckie"},8:{code:"OP",name:"Opolskie"},9:{code:"PP",name:"Podkarpackie"},10:{code:"PL",name:"Podlaskie"},11:{code:"PM",name:"Pomorskie"},12:{code:"SL",name:"Śląskie"},13:{code:"SW",name:"Świętokrzyskie"},14:{code:"WM",name:"Warmińsko-Mazurskie"},15:{code:"WP",name:"Wielkopolskie"},16:{code:"ZA",name:"Zachodniopomorskie"}},PT:{1:{code:"AC",name:"Açores"},2:{code:"AV",name:"Aveiro"},3:{code:"BE",name:"Beja"},4:{code:"BR",name:"Braga"},5:{code:"BA",name:"Bragança"},6:{code:"CB",name:"Castelo Branco"},7:{code:"CO",name:"Coimbra"},8:{code:"EV",name:"évora"},9:{code:"FA",name:"Faro"},10:{code:"GU",name:"Guarda"},12:{code:"LE",name:"Leiria"},13:{code:"LI",name:"Lisboa"},14:{code:"ME",name:"Madeira"},15:{code:"PO",name:"Portalegre"},16:{code:"PR",name:"Porto"},17:{code:"SA",name:"Santarém"},18:{code:"SE",name:"SetÚbal"},19:{code:"VC",name:"Viana do Castelo"},20:{code:"VR",name:"Vila Real"},21:{code:"VI",name:"Viseu"}},PR:{1:{code:"A-A",name:"Añasco"},2:{code:"ADJ",name:"Adjuntas"},3:{code:"AGU",name:"Aguada"},4:{code:"AGU",name:"Aguadilla"},5:{code:"AGU",name:"Aguas Buenas"},6:{code:"AIB",name:"Aibonito"},7:{code:"ARE",name:"Arecibo"},8:{code:"ARR",name:"Arroyo"},9:{code:"BAR",name:"Barceloneta"},10:{code:"BAR",name:"Barranquitas"},11:{code:"BAY",name:"Bayamón"},12:{code:"CAB",name:"Cabo Rojo"},13:{code:"CAG",name:"Caguas"},14:{code:"CAM",name:"Camuy"},15:{code:"CAN",name:"Canóvanas"},16:{code:"CAR",name:"Carolina"},17:{code:"CAT",name:"Cataño"},18:{code:"CAY",name:"Cayey"},19:{code:"CEI",name:"Ceiba"},20:{code:"CIA",name:"Ciales"},21:{code:"CID",name:"Cidra"},22:{code:"COA",name:"Coamo"},23:{code:"COM",name:"Comerío"},24:{code:"COR",name:"Corozal"},25:{code:"CUL",name:"Culebra"},26:{code:"DOR",name:"Dorado"},27:{code:"FAJ",name:"Fajardo"},28:{code:"FLO",name:"Florida"},29:{code:"GUA",name:"Guayama"},30:{code:"GUA",name:"Guayanilla"},31:{code:"GUA",name:"Guaynabo"},32:{code:"GUR",name:"Gurabo"},33:{code:"GU¡",name:"Guánica"},34:{code:"HAT",name:"Hatillo"},35:{code:"HOR",name:"Hormigueros"},36:{code:"HUM",name:"Humacao"},37:{code:"ISA",name:"Isabela"},38:{code:"JAY",name:"Jayuya"},39:{code:"JUA",name:"Juana Díaz"},40:{code:"JUN",name:"Juncos"},41:{code:"LAJ",name:"Lajas"},42:{code:"LAR",name:"Lares"},43:{code:"LAS",name:"Las Marías"},44:{code:"LAS",name:"Las Piedras"},45:{code:"LOÕ",name:"Loíza"},46:{code:"LUQ",name:"Luquillo"},47:{code:"MAN",name:"Manatí"},48:{code:"MAR",name:"Maricao"},49:{code:"MAU",name:"Maunabo"},50:{code:"MAY",name:"Mayagüez"},51:{code:"MOC",name:"Moca"},52:{code:"MOR",name:"Morovis"},53:{code:"NAG",name:"Naguabo"},54:{code:"NAR",name:"Naranjito"},55:{code:"ORO",name:"Orocovis"},56:{code:"PAT",name:"Patillas"},57:{code:"PE-",name:"Peñuelas"},58:{code:"PON",name:"Ponce"},59:{code:"QUE",name:"Quebradillas"},60:{code:"RIN",name:"Rincón"},61:{code:"RIO",name:"Rio Grande"},62:{code:"SAB",name:"Sabana Grande"},63:{code:"SAL",name:"Salinas"},64:{code:"SAN",name:"San Germàn"},65:{code:"SAN",name:"San Juan"},66:{code:"SAN",name:"San Lorenzo"},67:{code:"SAN",name:"San Sebastiàn"},68:{code:"SAN",name:"Santa Isabel"},69:{code:"TOA",name:"Toa Alta"},70:{code:"TOA",name:"Toa Baja"},71:{code:"TRU",name:"Trujillo Alto"},72:{code:"UTU",name:"Utuado"},73:{code:"VEG",name:"Vega Alta"},74:{code:"VEG",name:"Vega Baja"},75:{code:"VIE",name:"Vieques"},76:{code:"VIL",name:"Villalba"},77:{code:"YAB",name:"Yabucoa"},78:{code:"YAU",name:"Yauco"}},QA:{1:{code:"DW",name:"Ad Dawhah"},2:{code:"GW",name:"Al Ghuwayriyah"},3:{code:"JM",name:"Al Jumayliyah"},4:{code:"KR",name:"Al Khawr"},5:{code:"WK",name:"Al Wakrah"},6:{code:"RN",name:"Ar Rayyan"},7:{code:"JB",name:"Jarayan al Batinah"},8:{code:"MS",name:"Madinat ash Shamal"},9:{code:"UD",name:"Umm Sa'id"},10:{code:"UL",name:"Umm Salal"}},RO:{1:{code:"AB",name:"Alba"},2:{code:"AR",name:"Arad"},3:{code:"AG",name:"Arges"},4:{code:"BC",name:"Bacau"},5:{code:"BH",name:"Bihor"},6:{code:"BN",name:"Bistrita-Nasaud"},7:{code:"BT",name:"Botosani"},8:{code:"BV",name:"Brasov"},9:{code:"BR",name:"Braila"},10:{code:"B",name:"Bucuresti"},11:{code:"BZ",name:"Buzau"},12:{code:"CS",name:"Caras-Severin"},13:{code:"CL",name:"Calarasi"},14:{code:"CJ",name:"Cluj"},15:{code:"CT",name:"Constanta"},16:{code:"CV",name:"Covasna"},17:{code:"DB",name:"Dimbovita"},18:{code:"DJ",name:"Dolj"},19:{code:"GL",name:"Galati"},20:{code:"GR",name:"Giurgiu"},21:{code:"GJ",name:"Gorj"},22:{code:"HR",name:"Harghita"},23:{code:"HD",name:"Hunedoara"},24:{code:"IL",name:"Ialomita"},25:{code:"IS",name:"Iasi"},26:{code:"IF",name:"Ilfov"},27:{code:"MM",name:"Maramures"},28:{code:"MH",name:"Mehedinti"},29:{code:"MS",name:"Mures"},30:{code:"NT",name:"Neamt"},31:{code:"OT",name:"Olt"},32:{code:"PH",name:"Prahova"},33:{code:"SM",name:"Satu-Mare"},34:{code:"SJ",name:"Salaj"},35:{code:"SB",name:"Sibiu"},36:{code:"SV",name:"Suceava"},37:{code:"TR",name:"Teleorman"},38:{code:"TM",name:"Timis"},39:{code:"TL",name:"Tulcea"},40:{code:"VS",name:"Vaslui"},41:{code:"VL",name:"Valcea"},42:{code:"VN",name:"Vrancea"}},RU:{1:{code:"AB",name:"Abakan"},2:{code:"AG",name:"Aginskoye"},3:{code:"AN",name:"Anadyr"},4:{code:"AR",name:"Arkahangelsk"},5:{code:"AS",name:"Astrakhan"},6:{code:"BA",name:"Barnaul"},7:{code:"BE",name:"Belgorod"},8:{code:"BI",name:"Birobidzhan"},9:{code:"BL",name:"Blagoveshchensk"},10:{code:"BR",name:"Bryansk"},11:{code:"CH",name:"Cheboksary"},12:{code:"CL",name:"Chelyabinsk"},13:{code:"CR",name:"Cherkessk"},14:{code:"CI",name:"Chita"},15:{code:"DU",name:"Dudinka"},16:{code:"EL",name:"Elista"},17:{code:"GO",name:"Gomo-Altaysk"},18:{code:"GA",name:"Gorno-Altaysk"},19:{code:"GR",name:"Groznyy"},20:{code:"IR",name:"Irkutsk"},21:{code:"IV",name:"Ivanovo"},22:{code:"IZ",name:"Izhevsk"},23:{code:"KA",name:"Kalinigrad"},24:{code:"KL",name:"Kaluga"},25:{code:"KS",name:"Kasnodar"},26:{code:"KZ",name:"Kazan"},27:{code:"KE",name:"Kemerovo"},28:{code:"KH",name:"Khabarovsk"},29:{code:"KM",name:"Khanty-Mansiysk"},30:{code:"KO",name:"Kostroma"},31:{code:"KR",name:"Krasnodar"},32:{code:"KN",name:"Krasnoyarsk"},33:{code:"KU",name:"Kudymkar"},34:{code:"KG",name:"Kurgan"},35:{code:"KK",name:"Kursk"},36:{code:"KY",name:"Kyzyl"},37:{code:"LI",name:"Lipetsk"},38:{code:"MA",name:"Magadan"},39:{code:"MK",name:"Makhachkala"},40:{code:"MY",name:"Maykop"},41:{code:"MO",name:"Moscow"},42:{code:"MU",name:"Murmansk"},43:{code:"NA",name:"Nalchik"},44:{code:"NR",name:"Naryan Mar"},45:{code:"NZ",name:"Nazran"},46:{code:"NI",name:"Nizhniy Novgorod"},47:{code:"NO",name:"Novgorod"},48:{code:"NV",name:"Novosibirsk"},49:{code:"OM",name:"Omsk"},50:{code:"OR",name:"Orel"},51:{code:"OE",name:"Orenburg"},52:{code:"PA",name:"Palana"},53:{code:"PE",name:"Penza"},54:{code:"PR",name:"Perm"},55:{code:"PK",name:"Petropavlovsk-Kamchatskiy"},56:{code:"PT",name:"Petrozavodsk"},57:{code:"PS",name:"Pskov"},58:{code:"RO",name:"Rostov-na-Donu"},59:{code:"RY",name:"Ryazan"},60:{code:"SL",name:"Salekhard"},61:{code:"SA",name:"Samara"},62:{code:"SR",name:"Saransk"},63:{code:"SV",name:"Saratov"},64:{code:"SM",name:"Smolensk"},65:{code:"SP",name:"St. Petersburg"},66:{code:"ST",name:"Stavropol"},67:{code:"SY",name:"Syktyvkar"},68:{code:"TA",name:"Tambov"},69:{code:"TO",name:"Tomsk"},70:{code:"TU",name:"Tula"},71:{code:"TR",name:"Tura"},72:{code:"TV",name:"Tver"},73:{code:"TY",name:"Tyumen"},74:{code:"UF",name:"Ufa"},75:{code:"UL",name:"Ul'yanovsk"},76:{code:"UU",name:"Ulan-Ude"},77:{code:"US",name:"Ust'-Ordynskiy"},78:{code:"VL",name:"Vladikavkaz"},79:{code:"VA",name:"Vladimir"},80:{code:"VV",name:"Vladivostok"},81:{code:"VG",name:"Volgograd"},82:{code:"VD",name:"Vologda"},83:{code:"VO",name:"Voronezh"},84:{code:"VY",name:"Vyatka"},85:{code:"YA",name:"Yakutsk"},86:{code:"YR",name:"Yaroslavl"},87:{code:"YE",name:"Yekaterinburg"},88:{code:"YO",name:"Yoshkar-Ola"}},RW:{1:{code:"BU",name:"Butare"},2:{code:"BY",name:"Byumba"},3:{code:"CY",name:"Cyangugu"},4:{code:"GK",name:"Gikongoro"},5:{code:"GS",name:"Gisenyi"},6:{code:"GT",name:"Gitarama"},7:{code:"KG",name:"Kibungo"},8:{code:"KY",name:"Kibuye"},9:{code:"KR",name:"Kigali Rurale"},10:{code:"KV",name:"Kigali-ville"},11:{code:"RU",name:"Ruhengeri"},12:{code:"UM",name:"Umutara"}},KN:{1:{code:"CCN",name:"Christ Church Nichola Town"},2:{code:"SAS",name:"Saint Anne Sandy Point"},3:{code:"SGB",name:"Saint George Basseterre"},4:{code:"SGG",name:"Saint George Gingerland"},5:{code:"SJW",name:"Saint James Windward"},6:{code:"SJC",name:"Saint John Capesterre"},7:{code:"SJF",name:"Saint John Figtree"},8:{code:"SMC",name:"Saint Mary Cayon"},9:{code:"CAP",name:"Saint Paul Capesterre"},10:{code:"CHA",name:"Saint Paul Charlestown"},11:{code:"SPB",name:"Saint Peter Basseterre"},12:{code:"STL",name:"Saint Thomas Lowland"},13:{code:"STM",name:"Saint Thomas Middle Island"},14:{code:"TPP",name:"Trinity Palmetto Point"}},LC:{1:{code:"AR",name:"Anse-la-Raye"},2:{code:"CA",name:"Castries"},3:{code:"CH",name:"Choiseul"},4:{code:"DA",name:"Dauphin"},5:{code:"DE",name:"Dennery"},6:{code:"GI",name:"Gros-Islet"},7:{code:"LA",name:"Laborie"},8:{code:"MI",name:"Micoud"},9:{code:"PR",name:"Praslin"},10:{code:"SO",name:"Soufriere"},11:{code:"VF",name:"Vieux-Fort"}},VC:{1:{code:"C",name:"Charlotte"},2:{code:"R",name:"Grenadines"},3:{code:"A",name:"Saint Andrew"},4:{code:"D",name:"Saint David"},5:{code:"G",name:"Saint George"},6:{code:"P",name:"Saint Patrick"}},WS:{1:{code:"AN",name:"A'ana"},2:{code:"AI",name:"Aiga-i-le-Tai"},3:{code:"AT",name:"Atua"},4:{code:"FA",name:"Fa'asaleleaga"},5:{code:"GE",name:"Gaga'emauga"},6:{code:"GF",name:"Gagaifomauga"},7:{code:"PA",name:"Palauli"},8:{code:"SA",name:"Satupa'itea"},9:{code:"TU",name:"Tuamasaga"},10:{code:"VF",name:"Va'a-o-Fonoti"},11:{code:"VS",name:"Vaisigano"}},SM:{1:{code:"AC",name:"Acquaviva"},2:{code:"BM",name:"Borgo Maggiore"},3:{code:"CH",name:"Chiesanuova"},4:{code:"DO",name:"Domagnano"},5:{code:"FA",name:"Faetano"},6:{code:"FI",name:"Fiorentino"},7:{code:"MO",name:"Montegiardino"},8:{code:"SM",name:"Citta di San Marino"},9:{code:"SE",name:"Serravalle"}},ST:{1:{code:"S",name:"Sao Tome"},2:{code:"P",name:"Principe"}},SA:{1:{code:"BH",name:"Al Bahah"},2:{code:"HS",name:"Al Hudud ash Shamaliyah"},3:{code:"JF",name:"Al Jawf"},4:{code:"MD",name:"Al Madinah"},5:{code:"QS",name:"Al Qasim"},6:{code:"RD",name:"Ar Riyad"},7:{code:"AQ",name:"Ash Sharqiyah (Eastern)"},8:{code:"AS",name:"'Asir"},9:{code:"HL",name:"Ha'il"},10:{code:"JZ",name:"Jizan"},11:{code:"ML",name:"Makkah"},12:{code:"NR",name:"Najran"},13:{code:"TB",name:"Tabuk"}},SN:{1:{code:"DA",name:"Dakar"},2:{code:"DI",name:"Diourbel"},3:{code:"FA",name:"Fatick"},4:{code:"KA",name:"Kaolack"},5:{code:"KO",name:"Kolda"},6:{code:"LO",name:"Louga"},7:{code:"MA",name:"Matam"},8:{code:"SL",name:"Saint-Louis"},9:{code:"TA",name:"Tambacounda"},10:{code:"TH",name:"Thies"},11:{code:"ZI",name:"Ziguinchor"}},SC:{1:{code:"AP",name:"Anse aux Pins"},2:{code:"AB",name:"Anse Boileau"},3:{code:"AE",name:"Anse Etoile"},4:{code:"AL",name:"Anse Louis"},5:{code:"AR",name:"Anse Royale"},6:{code:"BL",name:"Baie Lazare"},7:{code:"BS",name:"Baie Sainte Anne"},8:{code:"BV",name:"Beau Vallon"},9:{code:"BA",name:"Bel Air"},10:{code:"BO",name:"Bel Ombre"},11:{code:"CA",name:"Cascade"},12:{code:"GL",name:"Glacis"},13:{code:"GM",name:"Grand' Anse (on Mahe)"},14:{code:"GP",name:"Grand' Anse (on Praslin)"},15:{code:"DG",name:"La Digue"},16:{code:"RA",name:"La Riviere Anglaise"},17:{code:"MB",name:"Mont Buxton"},18:{code:"MF",name:"Mont Fleuri"},19:{code:"PL",name:"Plaisance"},20:{code:"PR",name:"Pointe La Rue"},21:{code:"PG",name:"Port Glaud"},22:{code:"SL",name:"Saint Louis"},23:{code:"TA",name:"Takamaka"}},SL:{1:{code:"E",name:"Eastern"},2:{code:"N",name:"Northern"},3:{code:"S",name:"Southern"},4:{code:"W",name:"Western"}},SK:{1:{code:"BA",name:"Banskobystricky"},2:{code:"BR",name:"Bratislavsky"},3:{code:"KO",name:"Kosicky"},4:{code:"NI",name:"Nitriansky"},5:{code:"PR",name:"Presovsky"},6:{code:"TC",name:"Trenciansky"},7:{code:"TV",name:"Trnavsky"},8:{code:"ZI",name:"Zilinsky"}},SI:{1:{code:"4",name:"Štajerska"},2:{code:"2A",name:"Gorenjska"},3:{code:"5",name:"Prekmurje"},4:{code:"3",name:"Koroška"},5:{code:"2B",name:"Notranjska"},6:{code:"1",name:"Primorska"},7:{code:"2C",name:"Dolenjska"},8:{code:"2C",name:"Bela Krajina"}},SB:{1:{code:"CE",name:"Central"},2:{code:"CH",name:"Choiseul"},3:{code:"GC",name:"Guadalcanal"},4:{code:"HO",name:"Honiara"},5:{code:"IS",name:"Isabel"},6:{code:"MK",name:"Makira"},7:{code:"ML",name:"Malaita"},8:{code:"RB",name:"Rennell and Bellona"},9:{code:"TM",name:"Temotu"},10:{code:"WE",name:"Western"}},SO:{1:{code:"AW",name:"Awdal"},2:{code:"BK",name:"Bakool"},3:{code:"BN",name:"Banaadir"},4:{code:"BR",name:"Bari"},5:{code:"BY",name:"Bay"},6:{code:"GA",name:"Galguduud"},7:{code:"GE",name:"Gedo"},8:{code:"HI",name:"Hiiraan"},9:{code:"JD",name:"Jubbada Dhexe"},10:{code:"JH",name:"Jubbada Hoose"},11:{code:"MU",name:"Mudug"},12:{code:"NU",name:"Nugaal"},13:{code:"SA",name:"Sanaag"},14:{code:"SD",name:"Shabeellaha Dhexe"},15:{code:"SH",name:"Shabeellaha Hoose"},16:{code:"SL",name:"Sool"},17:{code:"TO",name:"Togdheer"},18:{code:"WG",name:"Woqooyi Galbeed"}},ZA:{1:{code:"EC",name:"Eastern Cape"},2:{code:"FS",name:"Free State"},3:{code:"GT",name:"Gauteng"},4:{code:"KN",name:"KwaZulu-Natal"},5:{code:"LP",name:"Limpopo"},6:{code:"MP",name:"Mpumalanga"},7:{code:"NW",name:"North West"},8:{code:"NC",name:"Northern Cape"},9:{code:"WC",name:"Western Cape"}},ES:{1:{code:"CA",name:"La Coruña"},2:{code:"AL",name:"Álava"},3:{code:"AB",name:"Albacete"},4:{code:"AC",name:"Alicante"},5:{code:"AM",name:"Almeria"},6:{code:"AS",name:"Asturias"},7:{code:"AV",name:"Ávila"},8:{code:"BJ",name:"Badajoz"},9:{code:"IB",name:"Baleares"},10:{code:"BA",name:"Barcelona"},11:{code:"BU",name:"Burgos"},12:{code:"CC",name:"Cáceres"},13:{code:"CZ",name:"Cádiz"},14:{code:"CT",name:"Cantabria"},15:{code:"CL",name:"Castellón"},16:{code:"CE",name:"Ceuta"},17:{code:"CR",name:"Ciudad Real"},18:{code:"CD",name:"Córdoba"},19:{code:"CU",name:"Cuenca"},20:{code:"GI",name:"Gerona"},21:{code:"GD",name:"Granada"},22:{code:"GJ",name:"Guadalajara"},23:{code:"GP",name:"Guipúzcoa"},24:{code:"HL",name:"Huelva"},25:{code:"HS",name:"Huesca"},26:{code:"JN",name:"Jaén"},27:{code:"RJ",name:"La Rioja"},28:{code:"PM",name:"Las Palmas"},29:{code:"LE",name:"León"},30:{code:"LL",name:"Lérida"},31:{code:"LG",name:"Lugo"},32:{code:"MD",name:"Madrid"},33:{code:"MA",name:"Málaga"},34:{code:"ML",name:"Melilla"},35:{code:"MU",name:"Murcia"},36:{code:"NV",name:"Navarra"},37:{code:"OU",name:"Ourense"},38:{code:"PL",name:"Palencia"},39:{code:"PO",name:"Pontevedra"},40:{code:"SL",name:"Salamanca"},41:{code:"SC",name:"Santa Cruz de Tenerife"},42:{code:"SG",name:"Segovia"},43:{code:"SV",name:"Sevilla"},44:{code:"SO",name:"Soria"},45:{code:"TA",name:"Tarragona"},46:{code:"TE",name:"Teruel"},47:{code:"TO",name:"Toledo"},48:{code:"VC",name:"Valencia"},49:{code:"VD",name:"Valladolid"},50:{code:"VZ",name:"Vizcaya"},51:{code:"ZM",name:"Zamora"},52:{code:"ZR",name:"Zaragoza"}},LK:{1:{code:"CE",name:"Central"},2:{code:"EA",name:"Eastern"},3:{code:"NC",name:"North Central"},4:{code:"NO",name:"Northern"},5:{code:"NW",name:"North Western"},6:{code:"SA",name:"Sabaragamuwa"},7:{code:"SO",name:"Southern"},8:{code:"UV",name:"Uva"},9:{code:"WE",name:"Western"}},SH:{1:{code:"A",name:"Ascension"},2:{code:"S",name:"Saint Helena"},3:{code:"T",name:"Tristan da Cunha"}},PM:{1:{code:"P",name:"Saint Pierre"},2:{code:"M",name:"Miquelon"}},SD:{1:{code:"ANL",name:"A'ali an Nil"},2:{code:"BAM",name:"Al Bahr al Ahmar"},3:{code:"BRT",name:"Al Buhayrat"},4:{code:"JZR",name:"Al Jazirah"},5:{code:"KRT",name:"Al Khartum"},6:{code:"QDR",name:"Al Qadarif"},7:{code:"WDH",name:"Al Wahdah"},8:{code:"ANB",name:"An Nil al Abyad"},9:{code:"ANZ",name:"An Nil al Azraq"},10:{code:"ASH",name:"Ash Shamaliyah"},11:{code:"BJA",name:"Bahr al Jabal"},12:{code:"GIS",name:"Gharb al Istiwa'iyah"},13:{code:"GBG",name:"Gharb Bahr al Ghazal"},14:{code:"GDA",name:"Gharb Darfur"},15:{code:"GKU",name:"Gharb Kurdufan"},16:{code:"JDA",name:"Janub Darfur"},17:{code:"JKU",name:"Janub Kurdufan"},18:{code:"JQL",name:"Junqali"},19:{code:"KSL",name:"Kassala"},20:{code:"NNL",name:"Nahr an Nil"},21:{code:"SBG",name:"Shamal Bahr al Ghazal"},22:{code:"SDA",name:"Shamal Darfur"},23:{code:"SKU",name:"Shamal Kurdufan"},24:{code:"SIS",name:"Sharq al Istiwa'iyah"},25:{code:"SNR",name:"Sinnar"},26:{code:"WRB",name:"Warab"}},SR:{1:{code:"BR",name:"Brokopondo"},2:{code:"CM",name:"Commewijne"},3:{code:"CR",name:"Coronie"},4:{code:"MA",name:"Marowijne"},5:{code:"NI",name:"Nickerie"},6:{code:"PA",name:"Para"},7:{code:"PM",name:"Paramaribo"},9:{code:"SA",name:"Saramacca"},10:{code:"SI",name:"Sipaliwini"},11:{code:"WA",name:"Wanica"}},SZ:{1:{code:"H",name:"Hhohho"},2:{code:"L",name:"Lubombo"},3:{code:"M",name:"Manzini"},4:{code:"S",name:"Shishelweni"}},SE:{1:{code:"K",name:"Blekinge"},2:{code:"W",name:"Dalama"},3:{code:"I",name:"Gotland"},4:{code:"X",name:"Gävleborg"},5:{code:"N",name:"Halland"},6:{code:"Z",name:"Jämtland"},7:{code:"F",name:"Jönköping"},8:{code:"H",name:"Kalmar"},9:{code:"G",name:"Kronoberg"},10:{code:"BD",name:"Norrbotten"},11:{code:"M",name:"Skåne"},12:{code:"AB",name:"Stockholm"},13:{code:"D",name:"Södermanland"},14:{code:"C",name:"Uppsala"},15:{code:"S",name:"Värmland"},16:{code:"AC",name:"Västerbotten"},17:{code:"Y",name:"Västernorrland"},18:{code:"U",name:"Västmanland"},19:{code:"O",name:"Västra Götaland"},20:{code:"T",name:"Örebro"},21:{code:"E",name:"Östergötland"}},CH:{1:{code:"AG",name:"Aargau"},2:{code:"AR",name:"Appenzell Ausserrhoden"},3:{code:"AI",name:"Appenzell Innerrhoden"},4:{code:"BS",name:"Basel-Stadt"},5:{code:"BL",name:"Basel-Landschaft"},6:{code:"BE",name:"Bern"},7:{code:"FR",name:"Fribourg"},8:{code:"GE",name:"Genève"},9:{code:"GL",name:"Glarus"},10:{code:"GR",name:"Graubünden"},11:{code:"JU",name:"Jura"},12:{code:"LU",name:"Lucerne"},13:{code:"NE",name:"Neuchâtel"},14:{code:"NW",name:"Nidwalden"},15:{code:"OW",name:"Obwalden"},16:{code:"SG",name:"St. Gallen"},17:{code:"SH",name:"Schaffhausen"},18:{code:"SZ",name:"Schwyz"},19:{code:"SO",name:"Solothurn"},20:{code:"TG",name:"Thurgau"},21:{code:"TI",name:"Ticino"},22:{code:"UR",name:"Uri"},23:{code:"VS",name:"Valais"},24:{code:"VD",name:"Vaud"},25:{code:"ZG",name:"Zug"},26:{code:"ZH",name:"Zürich"}},SY:{1:{code:"HA",name:"Al Hasakah"},2:{code:"LA",name:"Al Ladhiqiyah"},3:{code:"QU",name:"Al Qunaytirah"},4:{code:"RQ",name:"Ar Raqqah"},5:{code:"SU",name:"As Suwayda"},6:{code:"DA",name:"Dara"},7:{code:"DZ",name:"Dayr az Zawr"},8:{code:"DI",name:"Dimashq"},9:{code:"HL",name:"Halab"},10:{code:"HM",name:"Hamah"},11:{code:"HI",name:"Hims"},12:{code:"ID",name:"Idlib"},13:{code:"RD",name:"Rif Dimashq"},14:{code:"TA",name:"Tartus"}},TW:{1:{code:"CH",name:"Chang-hua"},2:{code:"CI",name:"Chia-i"},3:{code:"HS",name:"Hsin-chu"},4:{code:"HL",name:"Hua-lien"},5:{code:"IL",name:"I-lan"},6:{code:"KH",name:"Kao-hsiung county"},7:{code:"KM",name:"Kin-men"},8:{code:"LC",name:"Lien-chiang"},9:{code:"ML",name:"Miao-li"},10:{code:"NT",name:"Nan-t'ou"},11:{code:"PH",name:"P'eng-hu"},12:{code:"PT",name:"P'ing-tung"},13:{code:"TG",name:"T'ai-chung"},14:{code:"TA",name:"T'ai-nan"},15:{code:"TP",name:"T'ai-pei county"},16:{code:"TT",name:"T'ai-tung"},17:{code:"TY",name:"T'ao-yuan"},18:{code:"YL",name:"Yun-lin"},19:{code:"CC",name:"Chia-i city"},20:{code:"CL",name:"Chi-lung"},21:{code:"HC",name:"Hsin-chu"},22:{code:"TH",name:"T'ai-chung"},23:{code:"TN",name:"T'ai-nan"},24:{code:"KC",name:"Kao-hsiung city"},25:{code:"TC",name:"T'ai-pei city"}},TJ:{1:{code:"GB",name:"Gorno-Badakhstan"},2:{code:"KT",name:"Khatlon"},3:{code:"SU",name:"Sughd"}},TZ:{1:{code:"AR",name:"Arusha"},2:{code:"DS",name:"Dar es Salaam"},3:{code:"DO",name:"Dodoma"},4:{code:"IR",name:"Iringa"},5:{code:"KA",name:"Kagera"},6:{code:"KI",name:"Kigoma"},7:{code:"KJ",name:"Kilimanjaro"},8:{code:"LN",name:"Lindi"},9:{code:"MY",name:"Manyara"},10:{code:"MR",name:"Mara"},11:{code:"MB",name:"Mbeya"},12:{code:"MO",name:"Morogoro"},13:{code:"MT",name:"Mtwara"},14:{code:"MW",name:"Mwanza"},15:{code:"PN",name:"Pemba North"},16:{code:"PS",name:"Pemba South"},17:{code:"PW",name:"Pwani"},18:{code:"RK",name:"Rukwa"},19:{code:"RV",name:"Ruvuma"},20:{code:"SH",name:"Shinyanga"},21:{code:"SI",name:"Singida"},22:{code:"TB",name:"Tabora"},23:{code:"TN",name:"Tanga"},24:{code:"ZC",name:"Zanzibar Central/South"},25:{code:"ZN",name:"Zanzibar North"},26:{code:"ZU",name:"Zanzibar Urban/West"}},TH:{1:{code:"Amnat Charoen",name:"Amnat Charoen"},2:{code:"Ang Thong",name:"Ang Thong"},3:{code:"Ayutthaya",name:"Ayutthaya"},4:{code:"Bangkok",name:"Bangkok"},5:{code:"Buriram",name:"Buriram"},6:{code:"Chachoengsao",name:"Chachoengsao"},7:{code:"Chai Nat",name:"Chai Nat"},8:{code:"Chaiyaphum",name:"Chaiyaphum"},9:{code:"Chanthaburi",name:"Chanthaburi"},10:{code:"Chiang Mai",name:"Chiang Mai"},11:{code:"Chiang Rai",name:"Chiang Rai"},12:{code:"Chon Buri",name:"Chon Buri"},13:{code:"Chumphon",name:"Chumphon"},14:{code:"Kalasin",name:"Kalasin"},15:{code:"Kamphaeng Phet",name:"Kamphaeng Phet"},16:{code:"Kanchanaburi",name:"Kanchanaburi"},17:{code:"Khon Kaen",name:"Khon Kaen"},18:{code:"Krabi",name:"Krabi"},19:{code:"Lampang",name:"Lampang"},20:{code:"Lamphun",name:"Lamphun"},21:{code:"Loei",name:"Loei"},22:{code:"Lop Buri",name:"Lop Buri"},23:{code:"Mae Hong Son",name:"Mae Hong Son"},24:{code:"Maha Sarakham",name:"Maha Sarakham"},25:{code:"Mukdahan",name:"Mukdahan"},26:{code:"Nakhon Nayok",name:"Nakhon Nayok"},27:{code:"Nakhon Pathom",name:"Nakhon Pathom"},28:{code:"Nakhon Phanom",name:"Nakhon Phanom"},29:{code:"Nakhon Ratchasima",name:"Nakhon Ratchasima"},30:{code:"Nakhon Sawan",name:"Nakhon Sawan"},31:{code:"Nakhon Si Thammarat",name:"Nakhon Si Thammarat"},32:{code:"Nan",name:"Nan"},33:{code:"Narathiwat",name:"Narathiwat"},34:{code:"Nong Bua Lamphu",name:"Nong Bua Lamphu"},35:{code:"Nong Khai",name:"Nong Khai"},36:{code:"Nonthaburi",name:"Nonthaburi"},37:{code:"Pathum Thani",name:"Pathum Thani"},38:{code:"Pattani",name:"Pattani"},39:{code:"Phangnga",name:"Phangnga"},40:{code:"Phatthalung",name:"Phatthalung"},41:{code:"Phayao",name:"Phayao"},42:{code:"Phetchabun",name:"Phetchabun"},43:{code:"Phetchaburi",name:"Phetchaburi"},44:{code:"Phichit",name:"Phichit"},45:{code:"Phitsanulok",name:"Phitsanulok"},46:{code:"Phrae",name:"Phrae"},47:{code:"Phuket",name:"Phuket"},48:{code:"Prachin Buri",name:"Prachin Buri"},49:{code:"Prachuap Khiri Khan",name:"Prachuap Khiri Khan"},50:{code:"Ranong",name:"Ranong"},51:{code:"Ratchaburi",name:"Ratchaburi"},52:{code:"Rayong",name:"Rayong"},53:{code:"Roi Et",name:"Roi Et"},54:{code:"Sa Kaeo",name:"Sa Kaeo"},55:{code:"Sakon Nakhon",name:"Sakon Nakhon"},56:{code:"Samut Prakan",name:"Samut Prakan"},57:{code:"Samut Sakhon",name:"Samut Sakhon"},58:{code:"Samut Songkhram",name:"Samut Songkhram"},59:{code:"Sara Buri",name:"Sara Buri"},60:{code:"Satun",name:"Satun"},61:{code:"Sing Buri",name:"Sing Buri"},62:{code:"Sisaket",name:"Sisaket"},63:{code:"Songkhla",name:"Songkhla"},64:{code:"Sukhothai",name:"Sukhothai"},65:{code:"Suphan Buri",name:"Suphan Buri"},66:{code:"Surat Thani",name:"Surat Thani"},67:{code:"Surin",name:"Surin"},68:{code:"Tak",name:"Tak"},69:{code:"Trang",name:"Trang"},70:{code:"Trat",name:"Trat"},71:{code:"Ubon Ratchathani",name:"Ubon Ratchathani"},72:{code:"Udon Thani",name:"Udon Thani"},73:{code:"Uthai Thani",name:"Uthai Thani"},74:{code:"Uttaradit",name:"Uttaradit"},75:{code:"Yala",name:"Yala"},76:{code:"Yasothon",name:"Yasothon"}},TG:{1:{code:"K",name:"Kara"},2:{code:"P",name:"Plateaux"},3:{code:"S",name:"Savanes"},4:{code:"C",name:"Centrale"},5:{code:"M",name:"Maritime"}},TK:{1:{code:"A",name:"Atafu"},2:{code:"F",name:"Fakaofo"},3:{code:"N",name:"Nukunonu"}},TO:{1:{code:"H",name:"Ha'apai"},2:{code:"T",name:"Tongatapu"},3:{code:"V",name:"Vava'u"}},TT:{1:{code:"CT",name:"Couva/Tabaquite/Talparo"},2:{code:"DM",name:"Diego Martin"},3:{code:"MR",name:"Mayaro/Rio Claro"},4:{code:"PD",name:"Penal/Debe"},5:{code:"PT",name:"Princes Town"},6:{code:"SG",name:"Sangre Grande"},7:{code:"SL",name:"San Juan/Laventille"},8:{code:"SI",name:"Siparia"},9:{code:"TP",name:"Tunapuna/Piarco"},10:{code:"PS",name:"Port of Spain"},11:{code:"SF",name:"San Fernando"},12:{code:"AR",name:"Arima"},13:{code:"PF",name:"Point Fortin"},14:{code:"CH",name:"Chaguanas"},15:{code:"TO",name:"Tobago"}},TN:{1:{code:"AR",name:"Ariana"},2:{code:"BJ",name:"Beja"},3:{code:"BA",name:"Ben Arous"},4:{code:"BI",name:"Bizerte"},5:{code:"GB",name:"Gabes"},6:{code:"GF",name:"Gafsa"},7:{code:"JE",name:"Jendouba"},8:{code:"KR",name:"Kairouan"},9:{code:"KS",name:"Kasserine"},10:{code:"KB",name:"Kebili"},11:{code:"KF",name:"Kef"},12:{code:"MH",name:"Mahdia"},13:{code:"MN",name:"Manouba"},14:{code:"ME",name:"Medenine"},15:{code:"MO",name:"Monastir"},16:{code:"NA",name:"Nabeul"},17:{code:"SF",name:"Sfax"},18:{code:"SD",name:"Sidi"},19:{code:"SL",name:"Siliana"},20:{code:"SO",name:"Sousse"},21:{code:"TA",name:"Tataouine"},22:{code:"TO",name:"Tozeur"},23:{code:"TU",name:"Tunis"},24:{code:"ZA",name:"Zaghouan"}},TR:{1:{code:"ADA",name:"Adana"},2:{code:"ADI",name:"Adiyaman"},3:{code:"AFY",name:"Afyonkarahisar"},4:{code:"AGR",name:"Agri"},5:{code:"AKS",name:"Aksaray"},6:{code:"AMA",name:"Amasya"},7:{code:"ANK",name:"Ankara"},8:{code:"ANT",name:"Antalya"},9:{code:"ARD",name:"Ardahan"},10:{code:"ART",name:"Artvin"},11:{code:"AYI",name:"Aydin"},12:{code:"BAL",name:"Balikesir"},13:{code:"BAR",name:"Bartin"},14:{code:"BAT",name:"Batman"},15:{code:"BAY",name:"Bayburt"},16:{code:"BIL",name:"Bilecik"},17:{code:"BIN",name:"Bingol"},18:{code:"BIT",name:"Bitlis"},19:{code:"BOL",name:"Bolu"},20:{code:"BRD",name:"Burdur"},21:{code:"BRS",name:"Bursa"},22:{code:"CKL",name:"Canakkale"},23:{code:"CKR",name:"Cankiri"},24:{code:"COR",name:"Corum"},25:{code:"DEN",name:"Denizli"},26:{code:"DIY",name:"Diyarbakir"},27:{code:"DUZ",name:"Duzce"},28:{code:"EDI",name:"Edirne"},29:{code:"ELA",name:"Elazig"},30:{code:"EZC",name:"Erzincan"},31:{code:"EZR",name:"Erzurum"},32:{code:"ESK",name:"Eskisehir"},33:{code:"GAZ",name:"Gaziantep"},34:{code:"GIR",name:"Giresun"},35:{code:"GMS",name:"Gumushane"},36:{code:"HKR",name:"Hakkari"},37:{code:"HTY",name:"Hatay"},38:{code:"IGD",name:"Igdir"},39:{code:"ISP",name:"Isparta"},40:{code:"IST",name:"Istanbul"},41:{code:"IZM",name:"Izmir"},42:{code:"KAH",name:"Kahramanmaras"},43:{code:"KRB",name:"Karabuk"},44:{code:"KRM",name:"Karaman"},45:{code:"KRS",name:"Kars"},46:{code:"KAS",name:"Kastamonu"},47:{code:"KAY",name:"Kayseri"},48:{code:"KLS",name:"Kilis"},49:{code:"KRK",name:"Kirikkale"},50:{code:"KLR",name:"Kirklareli"},51:{code:"KRH",name:"Kirsehir"},52:{code:"KOC",name:"Kocaeli"},53:{code:"KON",name:"Konya"},54:{code:"KUT",name:"Kutahya"},55:{code:"MAL",name:"Malatya"},56:{code:"MAN",name:"Manisa"},57:{code:"MAR",name:"Mardin"},58:{code:"MER",name:"Mersin"},59:{code:"MUG",name:"Mugla"},60:{code:"MUS",name:"Mus"},61:{code:"NEV",name:"Nevsehir"},62:{code:"NIG",name:"Nigde"},63:{code:"ORD",name:"Ordu"},64:{code:"OSM",name:"Osmaniye"},65:{code:"RIZ",name:"Rize"},66:{code:"SAK",name:"Sakarya"},67:{code:"SAM",name:"Samsun"},68:{code:"SAN",name:"Sanliurfa"},69:{code:"SII",name:"Siirt"},70:{code:"SIN",name:"Sinop"},71:{code:"SIR",name:"Sirnak"},72:{code:"SIV",name:"Sivas"},73:{code:"TEL",name:"Tekirdag"},74:{code:"TOK",name:"Tokat"},75:{code:"TRA",name:"Trabzon"},76:{code:"TUN",name:"Tunceli"},77:{code:"USK",name:"Usak"},78:{code:"VAN",name:"Van"},79:{code:"YAL",name:"Yalova"},80:{code:"YOZ",name:"Yozgat"},81:{code:"ZON",name:"Zonguldak"}},TM:{1:{code:"A",name:"Ahal Welayaty"},2:{code:"B",name:"Balkan Welayaty"},3:{code:"D",name:"Dashhowuz Welayaty"},4:{code:"L",name:"Lebap Welayaty"},5:{code:"M",name:"Mary Welayaty"}},TC:{1:{code:"AC",name:"Ambergris Cays"},2:{code:"DC",name:"Dellis Cay"},3:{code:"FC",name:"French Cay"},4:{code:"LW",name:"Little Water Cay"},5:{code:"RC",name:"Parrot Cay"},6:{code:"PN",name:"Pine Cay"},7:{code:"SL",name:"Salt Cay"},8:{code:"GT",name:"Grand Turk"},9:{code:"SC",name:"South Caicos"},10:{code:"EC",name:"East Caicos"},11:{code:"MC",name:"Middle Caicos"},12:{code:"NC",name:"North Caicos"},13:{code:"PR",name:"Providenciales"},14:{code:"WC",name:"West Caicos"}},TV:{1:{code:"NMG",name:"Nanumanga"},2:{code:"NLK",name:"Niulakita"},3:{code:"NTO",name:"Niutao"},4:{code:"FUN",name:"Funafuti"},5:{code:"NME",name:"Nanumea"},6:{code:"NUI",name:"Nui"},7:{code:"NFT",name:"Nukufetau"},8:{code:"NLL",name:"Nukulaelae"},9:{code:"VAI",name:"Vaitupu"}},UG:{1:{code:"KAL",name:"Kalangala"},2:{code:"KMP",name:"Kampala"},3:{code:"KAY",name:"Kayunga"},4:{code:"KIB",name:"Kiboga"},5:{code:"LUW",name:"Luwero"},6:{code:"MAS",name:"Masaka"},7:{code:"MPI",name:"Mpigi"},8:{code:"MUB",name:"Mubende"},9:{code:"MUK",name:"Mukono"},10:{code:"NKS",name:"Nakasongola"},11:{code:"RAK",name:"Rakai"},12:{code:"SEM",name:"Sembabule"},13:{code:"WAK",name:"Wakiso"},14:{code:"BUG",name:"Bugiri"},15:{code:"BUS",name:"Busia"},16:{code:"IGA",name:"Iganga"},17:{code:"JIN",name:"Jinja"},18:{code:"KAB",name:"Kaberamaido"},19:{code:"KML",name:"Kamuli"},20:{code:"KPC",name:"Kapchorwa"},21:{code:"KTK",name:"Katakwi"},22:{code:"KUM",name:"Kumi"},23:{code:"MAY",name:"Mayuge"},24:{code:"MBA",name:"Mbale"},25:{code:"PAL",name:"Pallisa"},26:{code:"SIR",name:"Sironko"},27:{code:"SOR",name:"Soroti"},28:{code:"TOR",name:"Tororo"},29:{code:"ADJ",name:"Adjumani"},30:{code:"APC",name:"Apac"},31:{code:"ARU",name:"Arua"},32:{code:"GUL",name:"Gulu"},33:{code:"KIT",name:"Kitgum"},34:{code:"KOT",name:"Kotido"},35:{code:"LIR",name:"Lira"},36:{code:"MRT",name:"Moroto"},37:{code:"MOY",name:"Moyo"},38:{code:"NAK",name:"Nakapiripirit"},39:{code:"NEB",name:"Nebbi"},40:{code:"PAD",name:"Pader"},41:{code:"YUM",name:"Yumbe"},42:{code:"BUN",name:"Bundibugyo"},43:{code:"BSH",name:"Bushenyi"},44:{code:"HOI",name:"Hoima"},45:{code:"KBL",name:"Kabale"},46:{code:"KAR",name:"Kabarole"},47:{code:"KAM",name:"Kamwenge"},48:{code:"KAN",name:"Kanungu"},49:{code:"KAS",name:"Kasese"},50:{code:"KBA",name:"Kibaale"},51:{code:"KIS",name:"Kisoro"},52:{code:"KYE",name:"Kyenjojo"},53:{code:"MSN",name:"Masindi"},54:{code:"MBR",name:"Mbarara"},55:{code:"NTU",name:"Ntungamo"},56:{code:"RUK",name:"Rukungiri"}},UA:{1:{code:"CK",name:"Cherkasy"},2:{code:"CH",name:"Chernihiv"},3:{code:"CV",name:"Chernivtsi"},4:{code:"CR",name:"Crimea"},5:{code:"DN",name:"Dnipropetrovs'k"},6:{code:"DO",name:"Donets'k"},7:{code:"IV",name:"Ivano-Frankivs'k"},8:{code:"KL",name:"Kharkiv Kherson"},9:{code:"KM",name:"Khmel'nyts'kyy"},10:{code:"KR",name:"Kirovohrad"},11:{code:"KV",name:"Kiev"},12:{code:"KY",name:"Kyyiv"},13:{code:"LU",name:"Luhans'k"},14:{code:"LV",name:"L'viv"},15:{code:"MY",name:"Mykolayiv"},16:{code:"OD",name:"Odesa"},17:{code:"PO",name:"Poltava"},18:{code:"RI",name:"Rivne"},19:{code:"SE",name:"Sevastopol"},20:{code:"SU",name:"Sumy"},21:{code:"TE",name:"Ternopil'"},22:{code:"VI",name:"Vinnytsya"},23:{code:"VO",name:"Volyn'"},24:{code:"ZK",name:"Zakarpattya"},25:{code:"ZA",name:"Zaporizhzhya"},26:{code:"ZH",name:"Zhytomyr"}},AE:{1:{code:"AZ",name:"Abu Zaby"},2:{code:"AJ",name:"'Ajman"},3:{code:"FU",name:"Al Fujayrah"},4:{code:"SH",name:"Ash Shariqah"},5:{code:"DU",name:"Dubayy"},6:{code:"RK",name:"R'as al Khaymah"},7:{code:"UQ",name:"Umm al Qaywayn"}},GB:{1:{code:"ABN",name:"Aberdeen"},2:{code:"ABNS",name:"Aberdeenshire"},3:{code:"ANG",name:"Anglesey"},4:{code:"AGS",name:"Angus"},5:{code:"ARY",name:"Argyll and Bute"},6:{code:"BEDS",name:"Bedfordshire"},7:{code:"BERKS",name:"Berkshire"},8:{code:"BLA",name:"Blaenau Gwent"},9:{code:"BRI",name:"Bridgend"},10:{code:"BSTL",name:"Bristol"},11:{code:"BUCKS",name:"Buckinghamshire"},12:{code:"CAE",name:"Caerphilly"},13:{code:"CAMBS",name:"Cambridgeshire"},14:{code:"CDF",name:"Cardiff"},15:{code:"CARM",name:"Carmarthenshire"},16:{code:"CDGN",name:"Ceredigion"},17:{code:"CHES",name:"Cheshire"},18:{code:"CLACK",name:"Clackmannanshire"},19:{code:"CON",name:"Conwy"},20:{code:"CORN",name:"Cornwall"},21:{code:"DNBG",name:"Denbighshire"},22:{code:"DERBY",name:"Derbyshire"},23:{code:"DVN",name:"Devon"},24:{code:"DOR",name:"Dorset"},25:{code:"DGL",name:"Dumfries and Galloway"},26:{code:"DUND",name:"Dundee"},27:{code:"DHM",name:"Durham"},28:{code:"ARYE",name:"East Ayrshire"},29:{code:"DUNBE",name:"East Dunbartonshire"},30:{code:"LOTE",name:"East Lothian"},31:{code:"RENE",name:"East Renfrewshire"},32:{code:"ERYS",name:"East Riding of Yorkshire"},33:{code:"SXE",name:"East Sussex"},34:{code:"EDIN",name:"Edinburgh"},35:{code:"ESX",name:"Essex"},36:{code:"FALK",name:"Falkirk"},37:{code:"FFE",name:"Fife"},38:{code:"FLINT",name:"Flintshire"},39:{code:"GLAS",name:"Glasgow"},40:{code:"GLOS",name:"Gloucestershire"},41:{code:"LDN",name:"Greater London"},42:{code:"MCH",name:"Greater Manchester"},43:{code:"GDD",name:"Gwynedd"},44:{code:"HANTS",name:"Hampshire"},45:{code:"HWR",name:"Herefordshire"},46:{code:"HERTS",name:"Hertfordshire"},47:{code:"HLD",name:"Highlands"},48:{code:"IVER",name:"Inverclyde"},49:{code:"IOW",name:"Isle of Wight"},50:{code:"KNT",name:"Kent"},51:{code:"LANCS",name:"Lancashire"},52:{code:"LEICS",name:"Leicestershire"},53:{code:"LINCS",name:"Lincolnshire"},54:{code:"MSY",name:"Merseyside"},55:{code:"MERT",name:"Merthyr Tydfil"},56:{code:"MLOT",name:"Midlothian"},57:{code:"MMOUTH",name:"Monmouthshire"},58:{code:"MORAY",name:"Moray"},59:{code:"NPRTAL",name:"Neath Port Talbot"},60:{code:"NEWPT",name:"Newport"},61:{code:"NOR",name:"Norfolk"},62:{code:"ARYN",name:"North Ayrshire"},63:{code:"LANN",name:"North Lanarkshire"},64:{code:"YSN",name:"North Yorkshire"},65:{code:"NHM",name:"Northamptonshire"},66:{code:"NLD",name:"Northumberland"},67:{code:"NOT",name:"Nottinghamshire"},68:{code:"ORK",name:"Orkney Islands"},69:{code:"OFE",name:"Oxfordshire"},70:{code:"PEM",name:"Pembrokeshire"},71:{code:"PERTH",name:"Perth and Kinross"},72:{code:"PWS",name:"Powys"},73:{code:"REN",name:"Renfrewshire"},74:{code:"RHON",name:"Rhondda Cynon Taff"},75:{code:"RUT",name:"Rutland"},76:{code:"BOR",name:"Scottish Borders"},77:{code:"SHET",name:"Shetland Islands"},78:{code:"SPE",name:"Shropshire"},79:{code:"SOM",name:"Somerset"},80:{code:"ARYS",name:"South Ayrshire"},81:{code:"LANS",name:"South Lanarkshire"},82:{code:"YSS",name:"South Yorkshire"},83:{code:"SFD",name:"Staffordshire"},84:{code:"STIR",name:"Stirling"},85:{code:"SFK",name:"Suffolk"},86:{code:"SRY",name:"Surrey"},87:{code:"SWAN",name:"Swansea"},88:{code:"TORF",name:"Torfaen"},89:{code:"TWR",name:"Tyne and Wear"},90:{code:"VGLAM",name:"Vale of Glamorgan"},91:{code:"WARKS",name:"Warwickshire"},92:{code:"WDUN",name:"West Dunbartonshire"},93:{code:"WLOT",name:"West Lothian"},94:{code:"WMD",name:"West Midlands"},95:{code:"SXW",name:"West Sussex"},96:{code:"YSW",name:"West Yorkshire"},97:{code:"WIL",name:"Western Isles"},98:{code:"WLT",name:"Wiltshire"},99:{code:"WORCS",name:"Worcestershire"},100:{code:"WRX",name:"Wrexham"}},US:{1:{code:"AL",name:"Alabama"},2:{code:"AK",name:"Alaska"},3:{code:"AS",name:"American Samoa"},4:{code:"AZ",name:"Arizona"},5:{code:"AR",name:"Arkansas"},6:{code:"AF",name:"Armed Forces Africa"},7:{code:"AA",name:"Armed Forces Americas"},8:{code:"AC",name:"Armed Forces Canada"},9:{code:"AE",name:"Armed Forces Europe"},10:{code:"AM",name:"Armed Forces Middle East"},11:{code:"AP",name:"Armed Forces Pacific"},12:{code:"CA",name:"California"},13:{code:"CO",name:"Colorado"},14:{code:"CT",name:"Connecticut"},15:{code:"DE",name:"Delaware"},16:{code:"DC",name:"District of Columbia"},17:{code:"FM",name:"Federated States Of Micronesia"},18:{code:"FL",name:"Florida"},19:{code:"GA",name:"Georgia"},20:{code:"GU",name:"Guam"},21:{code:"HI",name:"Hawaii"},22:{code:"ID",name:"Idaho"},23:{code:"IL",name:"Illinois"},24:{code:"IN",name:"Indiana"},25:{code:"IA",name:"Iowa"},26:{code:"KS",name:"Kansas"},27:{code:"KY",name:"Kentucky"},28:{code:"LA",name:"Louisiana"},29:{code:"ME",name:"Maine"},30:{code:"MH",name:"Marshall Islands"},31:{code:"MD",name:"Maryland"},32:{code:"MA",name:"Massachusetts"},33:{code:"MI",name:"Michigan"},34:{code:"MN",name:"Minnesota"},35:{code:"MS",name:"Mississippi"},36:{code:"MO",name:"Missouri"},37:{code:"MT",name:"Montana"},38:{code:"NE",name:"Nebraska"},39:{code:"NV",name:"Nevada"},40:{code:"NH",name:"New Hampshire"},41:{code:"NJ",name:"New Jersey"},42:{code:"NM",name:"New Mexico"},43:{code:"NY",name:"New York"},44:{code:"NC",name:"North Carolina"},45:{code:"ND",name:"North Dakota"},46:{code:"MP",name:"Northern Mariana Islands"},47:{code:"OH",name:"Ohio"},48:{code:"OK",name:"Oklahoma"},49:{code:"OR",name:"Oregon"},50:{code:"PW",name:"Palau"},51:{code:"PA",name:"Pennsylvania"},52:{code:"PR",name:"Puerto Rico"},53:{code:"RI",name:"Rhode Island"},54:{code:"SC",name:"South Carolina"},55:{code:"SD",name:"South Dakota"},56:{code:"TN",name:"Tennessee"},57:{code:"TX",name:"Texas"},58:{code:"UT",name:"Utah"},59:{code:"VT",name:"Vermont"},60:{code:"VI",name:"Virgin Islands"},61:{code:"VA",name:"Virginia"},62:{code:"WA",name:"Washington"},63:{code:"WV",name:"West Virginia"},64:{code:"WI",name:"Wisconsin"},65:{code:"WY",name:"Wyoming"}},UM:{1:{code:"BI",name:"Baker Island"},2:{code:"HI",name:"Howland Island"},3:{code:"JI",name:"Jarvis Island"},4:{code:"JA",name:"Johnston Atoll"},5:{code:"KR",name:"Kingman Reef"},6:{code:"MA",name:"Midway Atoll"},7:{code:"NI",name:"Navassa Island"},8:{code:"PA",name:"Palmyra Atoll"},9:{code:"WI",name:"Wake Island"}},UY:{1:{code:"AR",name:"Artigas"},2:{code:"CA",name:"Canelones"},3:{code:"CL",name:"Cerro Largo"},4:{code:"CO",name:"Colonia"},5:{code:"DU",name:"Durazno"},6:{code:"FS",name:"Flores"},7:{code:"FA",name:"Florida"},8:{code:"LA",name:"Lavalleja"},9:{code:"MA",name:"Maldonado"},10:{code:"MO",name:"Montevideo"},11:{code:"PA",name:"Paysandu"},12:{code:"RN",name:"Rio Negro"},13:{code:"RV",name:"Rivera"},14:{code:"RO",name:"Rocha"},15:{code:"SL",name:"Salto"},16:{code:"SJ",name:"San Jose"},17:{code:"SO",name:"Soriano"},18:{code:"TA",name:"Tacuarembo"},19:{code:"TT",name:"Treinta y Tres"}},UZ:{1:{code:"AN",name:"Andijon"},2:{code:"BU",name:"Buxoro"},3:{code:"FA",name:"Farg'ona"},4:{code:"JI",name:"Jizzax"},5:{code:"NG",name:"Namangan"},6:{code:"NW",name:"Navoiy"},7:{code:"QA",name:"Qashqadaryo"},8:{code:"QR",name:"Qoraqalpog'iston Republikasi"},9:{code:"SA",name:"Samarqand"},10:{code:"SI",name:"Sirdaryo"},11:{code:"SU",name:"Surxondaryo"},12:{code:"TK",name:"Toshkent City"},13:{code:"TO",name:"Toshkent Region"},14:{code:"XO",name:"Xorazm"}},VU:{1:{code:"MA",name:"Malampa"},2:{code:"PE",name:"Penama"},3:{code:"SA",name:"Sanma"},4:{code:"SH",name:"Shefa"},5:{code:"TA",name:"Tafea"},6:{code:"TO",name:"Torba"}},VE:{1:{code:"AM",name:"Amazonas"},2:{code:"AN",name:"Anzoategui"},3:{code:"AP",name:"Apure"},4:{code:"AR",name:"Aragua"},5:{code:"BA",name:"Barinas"},6:{code:"BO",name:"Bolivar"},7:{code:"CA",name:"Carabobo"},8:{code:"CO",name:"Cojedes"},9:{code:"DA",name:"Delta Amacuro"},10:{code:"DF",name:"Dependencias Federales"},11:{code:"DI",name:"Distrito Federal"},12:{code:"FA",name:"Falcon"},13:{code:"GU",name:"Guarico"},14:{code:"LA",name:"Lara"},15:{code:"ME",name:"Merida"},16:{code:"MI",name:"Miranda"},17:{code:"MO",name:"Monagas"},18:{code:"NE",name:"Nueva Esparta"},19:{code:"PO",name:"Portuguesa"},20:{code:"SU",name:"Sucre"},21:{code:"TA",name:"Tachira"},22:{code:"TR",name:"Trujillo"},23:{code:"VA",name:"Vargas"},24:{code:"YA",name:"Yaracuy"},25:{code:"ZU",name:"Zulia"}},VN:{1:{code:"AG",name:"An Giang"},2:{code:"BG",name:"Bac Giang"},3:{code:"BK",name:"Bac Kan"},4:{code:"BL",name:"Bac Lieu"},5:{code:"BC",name:"Bac Ninh"},6:{code:"BR",name:"Ba Ria-Vung Tau"},7:{code:"BN",name:"Ben Tre"},8:{code:"BH",name:"Binh Dinh"},9:{code:"BU",name:"Binh Duong"},10:{code:"BP",name:"Binh Phuoc"},11:{code:"BT",name:"Binh Thuan"},12:{code:"CM",name:"Ca Mau"},13:{code:"CT",name:"Can Tho"},14:{code:"CB",name:"Cao Bang"},15:{code:"DL",name:"Dak Lak"},16:{code:"DG",name:"Dak Nong"},17:{code:"DN",name:"Da Nang"},18:{code:"DB",name:"Dien Bien"},19:{code:"DI",name:"Dong Nai"},20:{code:"DT",name:"Dong Thap"},21:{code:"GL",name:"Gia Lai"},22:{code:"HG",name:"Ha Giang"},23:{code:"HD",name:"Hai Duong"},24:{code:"HP",name:"Hai Phong"},25:{code:"HM",name:"Ha Nam"},26:{code:"HI",name:"Ha Noi"},27:{code:"HT",name:"Ha Tay"},28:{code:"HH",name:"Ha Tinh"},29:{code:"HB",name:"Hoa Binh"},30:{code:"HC",name:"Ho Chin Minh"},31:{code:"HU",name:"Hau Giang"},32:{code:"HY",name:"Hung Yen"}},VI:{1:{code:"C",name:"Saint Croix"},2:{code:"J",name:"Saint John"},3:{code:"T",name:"Saint Thomas"}},WF:{1:{code:"A",name:"Alo"},2:{code:"S",name:"Sigave"},3:{code:"W",name:"Wallis"}},YE:{1:{code:"AB",name:"Abyan"},2:{code:"AD",name:"Adan"},3:{code:"AM",name:"Amran"},4:{code:"BA",name:"Al Bayda"},5:{code:"DA",name:"Ad Dali"},6:{code:"DH",name:"Dhamar"},7:{code:"HD",name:"Hadramawt"},8:{code:"HJ",name:"Hajjah"},9:{code:"HU",name:"Al Hudaydah"},10:{code:"IB",name:"Ibb"},11:{code:"JA",name:"Al Jawf"},12:{code:"LA",name:"Lahij"},13:{code:"MA",name:"Ma'rib"},14:{code:"MR",name:"Al Mahrah"},15:{code:"MW",name:"Al Mahwit"},16:{code:"SD",name:"Sa'dah"},17:{code:"SN",name:"San'a"},18:{code:"SH",name:"Shabwah"},19:{code:"TA",name:"Ta'izz"}},YU:{1:{code:"KOS",name:"Kosovo"},2:{code:"MON",name:"Montenegro"},3:{code:"SER",name:"Serbia"},4:{code:"VOJ",name:"Vojvodina"}},ZR:{1:{code:"BC",name:"Bas-Congo"},2:{code:"BN",name:"Bandundu"},3:{code:"EQ",name:"Equateur"},4:{code:"KA",name:"Katanga"},5:{code:"KE",name:"Kasai-Oriental"},6:{code:"KN",name:"Kinshasa"},7:{code:"KW",name:"Kasai-Occidental"},8:{code:"MA",name:"Maniema"},9:{code:"NK",name:"Nord-Kivu"},10:{code:"OR",name:"Orientale"},11:{code:"SK",name:"Sud-Kivu"}},ZM:{1:{code:"CE",name:"Central"},2:{code:"CB",name:"Copperbelt"},3:{code:"EA",name:"Eastern"},4:{code:"LP",name:"Luapula"},5:{code:"LK",name:"Lusaka"},6:{code:"NO",name:"Northern"},7:{code:"NW",name:"North-Western"},8:{code:"SO",name:"Southern"},9:{code:"WE",name:"Western"}},ZW:{1:{code:"BU",name:"Bulawayo"},2:{code:"HA",name:"Harare"},3:{code:"ML",name:"Manicaland"},4:{code:"MC",name:"Mashonaland Central"},5:{code:"ME",name:"Mashonaland East"},6:{code:"MW",name:"Mashonaland West"},7:{code:"MV",name:"Masvingo"},8:{code:"MN",name:"Matabeleland North"},9:{code:"MS",name:"Matabeleland South"},10:{code:"MD",name:"Midlands"}}},BFHTimePickerDelimiter=":",BFHTimePickerModes={am:"AM",pm:"PM"},BFHTimezonesList={AF:{"Asia/Kabul":"Kabul"},AL:{"Europe/Tirane":"Tirane"},DZ:{"Africa/Algiers":"Algiers"},AS:{"Pacific/Pago_Pago":"Pago Pago"},AD:{"Europe/Andorra":"Andorra"},AO:{"Africa/Luanda":"Luanda"},AI:{"America/Anguilla":"Anguilla"},AQ:{"Antarctica/Casey":"Casey","Antarctica/Davis":"Davis","Antarctica/DumontDUrville":"DumontDUrville","Antarctica/Macquarie":"Macquarie","Antarctica/Mawson":"Mawson","Antarctica/McMurdo":"McMurdo","Antarctica/Palmer":"Palmer","Antarctica/Rothera":"Rothera","Antarctica/South_Pole":"South Pole","Antarctica/Syowa":"Syowa","Antarctica/Vostok":"Vostok"},AG:{"America/Antigua":"Antigua"},AR:{"America/Argentina/Buenos_Aires":"Argentina / Buenos Aires","America/Argentina/Catamarca":"Argentina / Catamarca","America/Argentina/Cordoba":"Argentina / Cordoba","America/Argentina/Jujuy":"Argentina / Jujuy","America/Argentina/La_Rioja":"Argentina / La Rioja","America/Argentina/Mendoza":"Argentina / Mendoza","America/Argentina/Rio_Gallegos":"Argentina / Rio Gallegos","America/Argentina/Salta":"Argentina / Salta","America/Argentina/San_Juan":"Argentina / San Juan","America/Argentina/San_Luis":"Argentina / San Luis","America/Argentina/Tucuman":"Argentina / Tucuman","America/Argentina/Ushuaia":"Argentina / Ushuaia"},AM:{"Asia/Yerevan":"Yerevan"},AW:{"America/Aruba":"Aruba"},AU:{"Australia/Adelaide":"Adelaide","Australia/Brisbane":"Brisbane","Australia/Broken_Hill":"Broken Hill","Australia/Currie":"Currie","Australia/Darwin":"Darwin","Australia/Eucla":"Eucla","Australia/Hobart":"Hobart","Australia/Lindeman":"Lindeman","Australia/Lord_Howe":"Lord Howe","Australia/Melbourne":"Melbourne","Australia/Perth":"Perth","Australia/Sydney":"Sydney"},AT:{"Europe/Vienna":"Vienna"},AZ:{"Asia/Baku":"Baku"},BH:{"Asia/Bahrain":"Bahrain"},BD:{"Asia/Dhaka":"Dhaka"},BB:{"America/Barbados":"Barbados"},BY:{"Europe/Minsk":"Minsk"},BE:{"Europe/Brussels":"Brussels"},BZ:{"America/Belize":"Belize"},BJ:{"Africa/Porto-Novo":"Porto-Novo"},BM:{"Atlantic/Bermuda":"Bermuda"},BT:{"Asia/Thimphu":"Thimphu"},BO:{"America/La_Paz":"La Paz"},BA:{"Europe/Sarajevo":"Sarajevo"},BW:{"Africa/Gaborone":"Gaborone"},BR:{"America/Araguaina":"Araguaina","America/Bahia":"Bahia","America/Belem":"Belem","America/Boa_Vista":"Boa Vista","America/Campo_Grande":"Campo Grande","America/Cuiaba":"Cuiaba","America/Eirunepe":"Eirunepe","America/Fortaleza":"Fortaleza","America/Maceio":"Maceio","America/Manaus":"Manaus","America/Noronha":"Noronha","America/Porto_Velho":"Porto Velho","America/Recife":"Recife","America/Rio_Branco":"Rio Branco","America/Santarem":"Santarem","America/Sao_Paulo":"Sao Paulo"},VG:{"America/Tortola":"Tortola"},BN:{"Asia/Brunei":"Brunei"},BG:{"Europe/Sofia":"Sofia"},BF:{"Africa/Ouagadougou":"Ouagadougou"},BI:{"Africa/Bujumbura":"Bujumbura"},CI:{"Africa/Abidjan":"Abidjan"},KH:{"Asia/Phnom_Penh":"Phnom Penh"},CM:{"Africa/Douala":"Douala"},CA:{"America/Atikokan":"Atikokan","America/Blanc-Sablon":"Blanc-Sablon","America/Cambridge_Bay":"Cambridge Bay","America/Creston":"Creston","America/Dawson":"Dawson","America/Dawson_Creek":"Dawson Creek","America/Edmonton":"Edmonton","America/Glace_Bay":"Glace Bay","America/Goose_Bay":"Goose Bay","America/Halifax":"Halifax","America/Inuvik":"Inuvik","America/Iqaluit":"Iqaluit","America/Moncton":"Moncton","America/Montreal":"Montreal","America/Nipigon":"Nipigon","America/Pangnirtung":"Pangnirtung","America/Rainy_River":"Rainy River","America/Rankin_Inlet":"Rankin Inlet","America/Regina":"Regina","America/Resolute":"Resolute","America/St_Johns":"St Johns","America/Swift_Current":"Swift Current","America/Thunder_Bay":"Thunder Bay","America/Toronto":"Toronto","America/Vancouver":"Vancouver","America/Whitehorse":"Whitehorse","America/Winnipeg":"Winnipeg","America/Yellowknife":"Yellowknife"},CV:{"Atlantic/Cape_Verde":"Cape Verde"},KY:{"America/Cayman":"Cayman"},CF:{"Africa/Bangui":"Bangui"},TD:{"Africa/Ndjamena":"Ndjamena"},CL:{"America/Santiago":"Santiago","Pacific/Easter":"Easter"},CN:{"Asia/Chongqing":"Chongqing","Asia/Harbin":"Harbin","Asia/Kashgar":"Kashgar","Asia/Shanghai":"Shanghai","Asia/Urumqi":"Urumqi"},CO:{"America/Bogota":"Bogota"},KM:{"Indian/Comoro":"Comoro"},CG:{"Africa/Brazzaville":"Brazzaville"},CR:{"America/Costa_Rica":"Costa Rica"},HR:{"Europe/Zagreb":"Zagreb"},CU:{"America/Havana":"Havana"},CY:{"Asia/Nicosia":"Nicosia"},CZ:{"Europe/Prague":"Prague"},CD:{"Africa/Kinshasa":"Kinshasa","Africa/Lubumbashi":"Lubumbashi"},DK:{"Europe/Copenhagen":"Copenhagen"},DJ:{"Africa/Djibouti":"Djibouti"},DM:{"America/Dominica":"Dominica"},DO:{"America/Santo_Domingo":"Santo Domingo"},TP:{},EC:{"America/Guayaquil":"Guayaquil","Pacific/Galapagos":"Galapagos"},EG:{"Africa/Cairo":"Cairo"},SV:{"America/El_Salvador":"El Salvador"},GQ:{"Africa/Malabo":"Malabo"},ER:{"Africa/Asmara":"Asmara"},EE:{"Europe/Tallinn":"Tallinn"},ET:{"Africa/Addis_Ababa":"Addis Ababa"},FO:{"Atlantic/Faroe":"Faroe"},FK:{"Atlantic/Stanley":"Stanley"},FJ:{"Pacific/Fiji":"Fiji"},FI:{"Europe/Helsinki":"Helsinki"},MK:{"Europe/Skopje":"Skopje"},FR:{"Europe/Paris":"Paris"},GA:{"Africa/Libreville":"Libreville"},GE:{"Asia/Tbilisi":"Tbilisi"},DE:{"Europe/Berlin":"Berlin"},GH:{"Africa/Accra":"Accra"},GR:{"Europe/Athens":"Athens"},GL:{"America/Danmarkshavn":"Danmarkshavn","America/Godthab":"Godthab","America/Scoresbysund":"Scoresbysund","America/Thule":"Thule"},GD:{"America/Grenada":"Grenada"},GU:{"Pacific/Guam":"Guam"},GT:{"America/Guatemala":"Guatemala"},GN:{"Africa/Conakry":"Conakry"},GW:{"Africa/Bissau":"Bissau"},GY:{"America/Guyana":"Guyana"},HT:{"America/Port-au-Prince":"Port-au-Prince"},HN:{"America/Tegucigalpa":"Tegucigalpa"},HK:{"Asia/Hong_Kong":"Hong Kong"},HU:{"Europe/Budapest":"Budapest"},IS:{"Atlantic/Reykjavik":"Reykjavik"},IN:{"Asia/Kolkata":"Kolkata"},ID:{"Asia/Jakarta":"Jakarta","Asia/Jayapura":"Jayapura","Asia/Makassar":"Makassar","Asia/Pontianak":"Pontianak"},IR:{"Asia/Tehran":"Tehran"},IQ:{"Asia/Baghdad":"Baghdad"},IE:{"Europe/Dublin":"Dublin"},IL:{"Asia/Jerusalem":"Jerusalem"},IT:{"Europe/Rome":"Rome"},JM:{"America/Jamaica":"Jamaica"},JP:{"Asia/Tokyo":"Tokyo"},JO:{"Asia/Amman":"Amman"},KZ:{"Asia/Almaty":"Almaty","Asia/Aqtau":"Aqtau","Asia/Aqtobe":"Aqtobe","Asia/Oral":"Oral","Asia/Qyzylorda":"Qyzylorda"},KE:{"Africa/Nairobi":"Nairobi"},KI:{"Pacific/Enderbury":"Enderbury","Pacific/Kiritimati":"Kiritimati","Pacific/Tarawa":"Tarawa"},KW:{"Asia/Kuwait":"Kuwait"},KG:{"Asia/Bishkek":"Bishkek"},LA:{"Asia/Vientiane":"Vientiane"},LV:{"Europe/Riga":"Riga"},LB:{"Asia/Beirut":"Beirut"},LS:{"Africa/Maseru":"Maseru"},LR:{"Africa/Monrovia":"Monrovia"},LY:{"Africa/Tripoli":"Tripoli"},LI:{"Europe/Vaduz":"Vaduz"},LT:{"Europe/Vilnius":"Vilnius"},LU:{"Europe/Luxembourg":"Luxembourg"},MO:{"Asia/Macau":"Macau"},MG:{"Indian/Antananarivo":"Antananarivo"},MW:{"Africa/Blantyre":"Blantyre"},MY:{"Asia/Kuala_Lumpur":"Kuala Lumpur","Asia/Kuching":"Kuching"},MV:{"Indian/Maldives":"Maldives"},ML:{"Africa/Bamako":"Bamako"},MT:{"Europe/Malta":"Malta"},MH:{"Pacific/Kwajalein":"Kwajalein","Pacific/Majuro":"Majuro"},MR:{"Africa/Nouakchott":"Nouakchott"},MU:{"Indian/Mauritius":"Mauritius"},MX:{"America/Bahia_Banderas":"Bahia Banderas","America/Cancun":"Cancun","America/Chihuahua":"Chihuahua","America/Hermosillo":"Hermosillo","America/Matamoros":"Matamoros","America/Mazatlan":"Mazatlan","America/Merida":"Merida","America/Mexico_City":"Mexico City","America/Monterrey":"Monterrey","America/Ojinaga":"Ojinaga","America/Santa_Isabel":"Santa Isabel","America/Tijuana":"Tijuana"},FM:{"Pacific/Chuuk":"Chuuk","Pacific/Kosrae":"Kosrae","Pacific/Pohnpei":"Pohnpei"},MD:{"Europe/Chisinau":"Chisinau"},MC:{"Europe/Monaco":"Monaco"},MN:{"Asia/Choibalsan":"Choibalsan","Asia/Hovd":"Hovd","Asia/Ulaanbaatar":"Ulaanbaatar"},ME:{"Europe/Podgorica":"Podgorica"},MS:{"America/Montserrat":"Montserrat"},MA:{"Africa/Casablanca":"Casablanca"},MZ:{"Africa/Maputo":"Maputo"},MM:{"Asia/Rangoon":"Rangoon"},NA:{"Africa/Windhoek":"Windhoek"},NR:{"Pacific/Nauru":"Nauru"},NP:{"Asia/Kathmandu":"Kathmandu"},NL:{"Europe/Amsterdam":"Amsterdam"},AN:{},NZ:{"Pacific/Auckland":"Auckland","Pacific/Chatham":"Chatham"},NI:{"America/Managua":"Managua"},NE:{"Africa/Niamey":"Niamey"},NG:{"Africa/Lagos":"Lagos"},NF:{"Pacific/Norfolk":"Norfolk"},KP:{"Asia/Pyongyang":"Pyongyang"},MP:{"Pacific/Saipan":"Saipan"},NO:{"Europe/Oslo":"Oslo"},OM:{"Asia/Muscat":"Muscat"},PK:{"Asia/Karachi":"Karachi"},PW:{"Pacific/Palau":"Palau"},PA:{"America/Panama":"Panama"},PG:{"Pacific/Port_Moresby":"Port Moresby"},PY:{"America/Asuncion":"Asuncion"},PE:{"America/Lima":"Lima"},PH:{"Asia/Manila":"Manila"},PN:{"Pacific/Pitcairn":"Pitcairn"},PL:{"Europe/Warsaw":"Warsaw"},PT:{"Atlantic/Azores":"Azores","Atlantic/Madeira":"Madeira","Europe/Lisbon":"Lisbon"},PR:{"America/Puerto_Rico":"Puerto Rico"},QA:{"Asia/Qatar":"Qatar"},RO:{"Europe/Bucharest":"Bucharest"},RU:{"Asia/Anadyr":"Anadyr","Asia/Irkutsk":"Irkutsk","Asia/Kamchatka":"Kamchatka","Asia/Krasnoyarsk":"Krasnoyarsk","Asia/Magadan":"Magadan","Asia/Novokuznetsk":"Novokuznetsk","Asia/Novosibirsk":"Novosibirsk","Asia/Omsk":"Omsk","Asia/Sakhalin":"Sakhalin","Asia/Vladivostok":"Vladivostok","Asia/Yakutsk":"Yakutsk","Asia/Yekaterinburg":"Yekaterinburg","Europe/Kaliningrad":"Kaliningrad","Europe/Moscow":"Moscow","Europe/Samara":"Samara","Europe/Volgograd":"Volgograd"},RW:{"Africa/Kigali":"Kigali"},ST:{"Africa/Sao_Tome":"Sao Tome"},SH:{"Atlantic/St_Helena":"St Helena"},KN:{"America/St_Kitts":"St Kitts"},LC:{"America/St_Lucia":"St Lucia"},VC:{"America/St_Vincent":"St Vincent"},WS:{"Pacific/Apia":"Apia"},SM:{"Europe/San_Marino":"San Marino"},SA:{"Asia/Riyadh":"Riyadh"},SN:{"Africa/Dakar":"Dakar"},RS:{"Europe/Belgrade":"Belgrade"},SC:{"Indian/Mahe":"Mahe"},SL:{"Africa/Freetown":"Freetown"},SG:{"Asia/Singapore":"Singapore"},SK:{"Europe/Bratislava":"Bratislava"},SI:{"Europe/Ljubljana":"Ljubljana"},SB:{"Pacific/Guadalcanal":"Guadalcanal"},SO:{"Africa/Mogadishu":"Mogadishu"},ZA:{"Africa/Johannesburg":"Johannesburg"},GS:{"Atlantic/South_Georgia":"South Georgia"},KR:{"Asia/Seoul":"Seoul"},ES:{"Africa/Ceuta":"Ceuta","Atlantic/Canary":"Canary","Europe/Madrid":"Madrid"},LK:{"Asia/Colombo":"Colombo"},SD:{"Africa/Khartoum":"Khartoum"},SR:{"America/Paramaribo":"Paramaribo"},SZ:{"Africa/Mbabane":"Mbabane"},SE:{"Europe/Stockholm":"Stockholm"},CH:{"Europe/Zurich":"Zurich"},SY:{"Asia/Damascus":"Damascus"},TW:{"Asia/Taipei":"Taipei"},TJ:{"Asia/Dushanbe":"Dushanbe"},TZ:{"Africa/Dar_es_Salaam":"Dar es Salaam"},TH:{"Asia/Bangkok":"Bangkok"},BS:{"America/Nassau":"Nassau"},GM:{"Africa/Banjul":"Banjul"},TG:{"Africa/Lome":"Lome"},TO:{"Pacific/Tongatapu":"Tongatapu"},TT:{"America/Port_of_Spain":"Port of Spain"},TN:{"Africa/Tunis":"Tunis"},TR:{"Europe/Istanbul":"Istanbul"},TM:{"Asia/Ashgabat":"Ashgabat"},TC:{"America/Grand_Turk":"Grand Turk"},TV:{"Pacific/Funafuti":"Funafuti"},VI:{"America/St_Thomas":"St Thomas"},UG:{"Africa/Kampala":"Kampala"},UA:{"Europe/Kiev":"Kiev","Europe/Simferopol":"Simferopol","Europe/Uzhgorod":"Uzhgorod","Europe/Zaporozhye":"Zaporozhye"},AE:{"Asia/Dubai":"Dubai"},GB:{"Europe/London":"London"},US:{"America/Adak":"Adak","America/Anchorage":"Anchorage","America/Boise":"Boise","America/Chicago":"Chicago","America/Denver":"Denver","America/Detroit":"Detroit","America/Indiana/Indianapolis":"Indiana / Indianapolis","America/Indiana/Knox":"Indiana / Knox","America/Indiana/Marengo":"Indiana / Marengo","America/Indiana/Petersburg":"Indiana / Petersburg","America/Indiana/Tell_City":"Indiana / Tell City","America/Indiana/Vevay":"Indiana / Vevay","America/Indiana/Vincennes":"Indiana / Vincennes","America/Indiana/Winamac":"Indiana / Winamac","America/Juneau":"Juneau","America/Kentucky/Louisville":"Kentucky / Louisville","America/Kentucky/Monticello":"Kentucky / Monticello","America/Los_Angeles":"Los Angeles","America/Menominee":"Menominee","America/Metlakatla":"Metlakatla","America/New_York":"New York","America/Nome":"Nome","America/North_Dakota/Beulah":"North Dakota / Beulah","America/North_Dakota/Center":"North Dakota / Center","America/North_Dakota/New_Salem":"North Dakota / New Salem","America/Phoenix":"Phoenix","America/Shiprock":"Shiprock","America/Sitka":"Sitka","America/Yakutat":"Yakutat","Pacific/Honolulu":"Honolulu"},UY:{"America/Montevideo":"Montevideo"},UZ:{"Asia/Samarkand":"Samarkand","Asia/Tashkent":"Tashkent"},VU:{"Pacific/Efate":"Efate"},VA:{"Europe/Vatican":"Vatican"},VE:{"America/Caracas":"Caracas"},VN:{"Asia/Ho_Chi_Minh":"Ho Chi Minh"},EH:{"Africa/El_Aaiun":"El Aaiun"},YE:{"Asia/Aden":"Aden"},ZM:{"Africa/Lusaka":"Lusaka"},ZW:{"Africa/Harare":"Harare"}};
+function(e){"use strict";function a(e){var a=e.toString(16);return 1===a.length?"0"+a:a}function n(e,n,t){return"#"+a(e)+a(n)+a(t)}function t(){var a;e(i).each(function(n){return a=o(e(this)),a.hasClass("open")?(a.trigger(n=e.Event("hide.bfhcolorpicker")),n.isDefaultPrevented()?!0:(a.removeClass("open").trigger("hidden.bfhcolorpicker"),void 0)):!0})}function o(e){return e.closest(".bfh-colorpicker")}var i="[data-toggle=bfh-colorpicker]",r=function(a,n){this.options=e.extend({},e.fn.bfhcolorpicker.defaults,n),this.$element=e(a),this.initPopover()};r.prototype={constructor:r,initPalette:function(){var e,a,n;e=this.$element.find("canvas"),a=e[0].getContext("2d"),n=a.createLinearGradient(0,0,e.width(),0),n.addColorStop(0,"rgb(255, 255, 255)"),n.addColorStop(.1,"rgb(255,   0,   0)"),n.addColorStop(.25,"rgb(255,   0, 255)"),n.addColorStop(.4,"rgb(0,     0, 255)"),n.addColorStop(.55,"rgb(0,   255, 255)"),n.addColorStop(.7,"rgb(0,   255,   0)"),n.addColorStop(.85,"rgb(255, 255,   0)"),n.addColorStop(1,"rgb(255,   0,   0)"),a.fillStyle=n,a.fillRect(0,0,a.canvas.width,a.canvas.height),n=a.createLinearGradient(0,0,0,e.height()),n.addColorStop(0,"rgba(255, 255, 255, 1)"),n.addColorStop(.5,"rgba(255, 255, 255, 0)"),n.addColorStop(.5,"rgba(0,     0,   0, 0)"),n.addColorStop(1,"rgba(0,     0,   0, 1)"),a.fillStyle=n,a.fillRect(0,0,a.canvas.width,a.canvas.height)},initPopover:function(){var e,a;e="",a="","right"===this.options.align?a='<span class="input-group-addon"><span class="bfh-colorpicker-icon"></span></span>':e='<span class="input-group-addon"><span class="bfh-colorpicker-icon"></span></span>',this.$element.html('<div class="input-group bfh-colorpicker-toggle" data-toggle="bfh-colorpicker">'+e+'<input type="text" name="'+this.options.name+'" class="'+this.options.input+'" placeholder="'+this.options.placeholder+'" readonly>'+a+'</div><div class="bfh-colorpicker-popover"><canvas class="bfh-colorpicker-palette" width="384" height="256"></canvas></div>'),this.$element.on("click.bfhcolorpicker.data-api touchstart.bfhcolorpicker.data-api",i,r.prototype.toggle).on("mousedown.bfhcolorpicker.data-api","canvas",r.prototype.mouseDown).on("click.bfhcolorpicker.data-api touchstart.bfhcolorpicker.data-api",".bfh-colorpicker-popover",function(){return!1}),this.initPalette(),this.$element.val(this.options.color)},updateVal:function(e,a){var t,o,i,r,s,d,l;s=5,t=this.$element.find("canvas"),o=t[0].getContext("2d"),i=e-t.offset().left,r=a-t.offset().top,i=Math.round(i/s)*s,r=Math.round(r/s)*s,0>i&&(i=0),i>=t.width()&&(i=t.width()-1),0>r&&(r=0),r>t.height()&&(r=t.height()),d=o.getImageData(i,r,1,1),l=n(d.data[0],d.data[1],d.data[2]),l!==this.$element.val()&&(this.$element.val(l),this.$element.trigger("change.bfhcolorpicker"))},mouseDown:function(){var a,n;a=e(this),n=o(a),e(document).on("mousemove.bfhcolorpicker.data-api",{colorpicker:n},r.prototype.mouseMove).one("mouseup.bfhcolorpicker.data-api",{colorpicker:n},r.prototype.mouseUp)},mouseMove:function(e){var a;a=e.data.colorpicker,a.data("bfhcolorpicker").updateVal(e.pageX,e.pageY)},mouseUp:function(a){var n;n=a.data.colorpicker,n.data("bfhcolorpicker").updateVal(a.pageX,a.pageY),e(document).off("mousemove.bfhcolorpicker.data-api"),n.data("bfhcolorpicker").options.close===!0&&t()},toggle:function(a){var n,i,r;if(n=e(this),i=o(n),i.is(".disabled")||void 0!==i.attr("disabled"))return!0;if(r=i.hasClass("open"),t(),!r){if(i.trigger(a=e.Event("show.bfhcolorpicker")),a.isDefaultPrevented())return!0;i.toggleClass("open").trigger("shown.bfhcolorpicker"),n.focus()}return!1}};var s=e.fn.bfhcolorpicker;e.fn.bfhcolorpicker=function(a){return this.each(function(){var n,t,o;n=e(this),t=n.data("bfhcolorpicker"),o="object"==typeof a&&a,this.type="bfhcolorpicker",t||n.data("bfhcolorpicker",t=new r(this,o)),"string"==typeof a&&t[a].call(n)})},e.fn.bfhcolorpicker.Constructor=r,e.fn.bfhcolorpicker.defaults={align:"left",input:"form-control",placeholder:"",name:"",color:"#000000",close:!0},e.fn.bfhcolorpicker.noConflict=function(){return e.fn.bfhcolorpicker=s,this};var d;e.valHooks.div&&(d=e.valHooks.div),e.valHooks.div={get:function(a){return e(a).hasClass("bfh-colorpicker")?e(a).find('input[type="text"]').val():d?d.get(a):void 0},set:function(a,n){if(e(a).hasClass("bfh-colorpicker"))e(a).find(".bfh-colorpicker-icon").css("background-color",n),e(a).find('input[type="text"]').val(n);else if(d)return d.set(a,n)}},e(document).ready(function(){e("div.bfh-colorpicker").each(function(){var a;a=e(this),a.bfhcolorpicker(a.data())})}),e(document).on("click.bfhcolorpicker.data-api",t)}(window.jQuery),+function(e){"use strict";var a=function(a,n){this.options=e.extend({},e.fn.bfhcountries.defaults,n),this.$element=e(a),this.$element.is("select")&&this.addCountries(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapCountries(),this.$element.is("span")&&this.displayCountry()};a.prototype={constructor:a,getCountries:function(){var a,n;if(this.options.available){if("string"==typeof this.options.available){n=[],this.options.available=this.options.available.split(",");for(a in BFHCountriesList)BFHCountriesList.hasOwnProperty(a)&&e.inArray(a,this.options.available)>=0&&(n[a]=BFHCountriesList[a])}else n=this.options.available;return n}return BFHCountriesList},addCountries:function(){var e,a,n;e=this.options.country,n=this.getCountries(),this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(a in n)n.hasOwnProperty(a)&&this.$element.append('<option value="'+a+'">'+n[a]+"</option>");this.$element.val(e)},addBootstrapCountries:function(){var e,a,n,t,o,i;t=this.options.country,e=this.$element.find('input[type="hidden"]'),a=this.$element.find(".bfh-selectbox-option"),n=this.$element.find("[role=option]"),i=this.getCountries(),n.html(""),this.options.blank===!0&&n.append('<li><a tabindex="-1" href="#" data-option=""></a></li>');for(o in i)i.hasOwnProperty(o)&&(this.options.flags===!0?n.append('<li><a tabindex="-1" href="#" data-option="'+o+'"><i class="glyphicon bfh-flag-'+o+'"></i>'+i[o]+"</a></li>"):n.append('<li><a tabindex="-1" href="#" data-option="'+o+'">'+i[o]+"</a></li>"));this.$element.val(t)},displayCountry:function(){var e;e=this.options.country,this.options.flags===!0?this.$element.html('<i class="glyphicon bfh-flag-'+e+'"></i> '+BFHCountriesList[e]):this.$element.html(BFHCountriesList[e])}};var n=e.fn.bfhcountries;e.fn.bfhcountries=function(n){return this.each(function(){var t,o,i;t=e(this),o=t.data("bfhcountries"),i="object"==typeof n&&n,o||t.data("bfhcountries",o=new a(this,i)),"string"==typeof n&&o[n].call(t)})},e.fn.bfhcountries.Constructor=a,e.fn.bfhcountries.defaults={country:"",available:"",flags:!1,blank:!0},e.fn.bfhcountries.noConflict=function(){return e.fn.bfhcountries=n,this},e(document).ready(function(){e("form select.bfh-countries, span.bfh-countries, div.bfh-countries").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhcountries(a.data())})})}(window.jQuery),+function(e){"use strict";var a=function(a,n){this.options=e.extend({},e.fn.bfhcurrencies.defaults,n),this.$element=e(a),this.$element.is("select")&&this.addCurrencies(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapCurrencies(),this.$element.is("span")&&this.displayCurrency()};a.prototype={constructor:a,getCurrencies:function(){var a,n;if(this.options.available){n=[],this.options.available=this.options.available.split(",");for(a in BFHCurrenciesList)BFHCurrenciesList.hasOwnProperty(a)&&e.inArray(a,this.options.available)>=0&&(n[a]=BFHCurrenciesList[a]);return n}return BFHCurrenciesList},addCurrencies:function(){var e,a,n;e=this.options.currency,n=this.getCurrencies(),this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(a in n)n.hasOwnProperty(a)&&this.$element.append('<option value="'+a+'">'+n[a].label+"</option>");this.$element.val(e)},addBootstrapCurrencies:function(){var e,a,n,t,o,i,r;t=this.options.currency,e=this.$element.find('input[type="hidden"]'),a=this.$element.find(".bfh-selectbox-option"),n=this.$element.find("[role=option]"),i=this.getCurrencies(),n.html(""),this.options.blank===!0&&n.append('<li><a tabindex="-1" href="#" data-option=""></a></li>');for(o in i)i.hasOwnProperty(o)&&(this.options.flags===!0?(r=i[o].currencyflag?i[o].currencyflag:o.substr(0,2),n.append('<li><a tabindex="-1" href="#" data-option="'+o+'"><i class="glyphicon bfh-flag-'+r+'"></i>'+i[o].label+"</a></li>")):n.append('<li><a tabindex="-1" href="#" data-option="'+o+'">'+i[o].label+"</a></li>"));this.$element.val(t)},displayCurrency:function(){var e,a;e=this.options.currency,this.options.flags===!0?(a=BFHCurrenciesList[e].currencyflag?BFHCurrenciesList[e].currencyflag:e.substr(0,2),this.$element.html('<i class="glyphicon bfh-flag-'+a+'"></i> '+BFHCurrenciesList[e].label)):this.$element.html(BFHCurrenciesList[e].label)}};var n=e.fn.bfhcurrencies;e.fn.bfhcurrencies=function(n){return this.each(function(){var t,o,i;t=e(this),o=t.data("bfhcurrencies"),i="object"==typeof n&&n,o||t.data("bfhcurrencies",o=new a(this,i)),"string"==typeof n&&o[n].call(t)})},e.fn.bfhcurrencies.Constructor=a,e.fn.bfhcurrencies.defaults={currency:"",available:"",flags:!1,blank:!0},e.fn.bfhcurrencies.noConflict=function(){return e.fn.bfhcurrencies=n,this},e(document).ready(function(){e("form select.bfh-currencies, span.bfh-currencies, div.bfh-currencies").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhcurrencies(a.data())})})}(window.jQuery),+function(e){"use strict";function a(e,a){return new Date(a,e,0).getDate()}function n(e,a,n){return new Date(a,e,n).getDay()}function t(e,a,n,t){return a+=1,a=String(a),t=String(t),1===a.length&&(a="0"+a),1===t.length&&(t="0"+t),e.replace("m",a).replace("y",n).replace("d",t)}function o(e,a,n){var t,o,i;t=[{part:"m",position:e.indexOf("m")},{part:"y",position:e.indexOf("y")},{part:"d",position:e.indexOf("d")}],t.sort(function(e,a){return e.position-a.position}),i=a.match(/(\d+)/g);for(o in t)if(t.hasOwnProperty(o)&&t[o].part===n)return Number(i[o]).toString()}function i(){var a;e(s).each(function(n){return a=r(e(this)),a.hasClass("open")?(a.trigger(n=e.Event("hide.bfhdatepicker")),n.isDefaultPrevented()?!0:(a.removeClass("open").trigger("hidden.bfhdatepicker"),void 0)):!0})}function r(e){return e.closest(".bfh-datepicker")}var s="[data-toggle=bfh-datepicker]",d=function(a,n){this.options=e.extend({},e.fn.bfhdatepicker.defaults,n),this.$element=e(a),this.initCalendar()};d.prototype={constructor:d,setDate:function(){var e,a,n;e=this.options.date,n=this.options.format,""===e||"today"===e||void 0===e?(a=new Date,"today"===e&&this.$element.val(t(n,a.getMonth(),a.getFullYear(),a.getDate())),this.$element.data("month",a.getMonth()),this.$element.data("year",a.getFullYear())):(this.$element.val(e),this.$element.data("month",Number(o(n,e,"m")-1)),this.$element.data("year",Number(o(n,e,"y"))))},setDateLimit:function(e,a){var n,t;t=this.options.format,""!==e?(this.$element.data(a+"limit",!0),"today"===e?(n=new Date,this.$element.data(a+"day",n.getDate()),this.$element.data(a+"month",n.getMonth()),this.$element.data(a+"year",n.getFullYear())):(this.$element.data(a+"day",Number(o(t,e,"d"))),this.$element.data(a+"month",Number(o(t,e,"m")-1)),this.$element.data(a+"year",Number(o(t,e,"y"))))):this.$element.data(a+"limit",!1)},initCalendar:function(){var e,a,n;e="",a="",n="",""!==this.options.icon&&("right"===this.options.align?a='<span class="input-group-addon"><i class="'+this.options.icon+'"></i></span>':e='<span class="input-group-addon"><i class="'+this.options.icon+'"></i></span>',n="input-group"),this.$element.html('<div class="'+n+' bfh-datepicker-toggle" data-toggle="bfh-datepicker">'+e+'<input type="text" name="'+this.options.name+'" class="'+this.options.input+'" placeholder="'+this.options.placeholder+'" readonly>'+a+'</div><div class="bfh-datepicker-calendar"><table class="calendar table table-bordered"><thead><tr class="months-header"><th class="month" colspan="4"><a class="previous" href="#"><i class="glyphicon glyphicon-chevron-left"></i></a><span></span><a class="next" href="#"><i class="glyphicon glyphicon-chevron-right"></i></a></th><th class="year" colspan="3"><a class="previous" href="#"><i class="glyphicon glyphicon-chevron-left"></i></a><span></span><a class="next" href="#"><i class="glyphicon glyphicon-chevron-right"></i></a></th></tr><tr class="days-header"></tr></thead><tbody></tbody></table></div>'),this.$element.on("click.bfhdatepicker.data-api touchstart.bfhdatepicker.data-api",s,d.prototype.toggle).on("click.bfhdatepicker.data-api touchstart.bfhdatepicker.data-api",".bfh-datepicker-calendar > table.calendar .month > .previous",d.prototype.previousMonth).on("click.bfhdatepicker.data-api touchstart.bfhdatepicker.data-api",".bfh-datepicker-calendar > table.calendar .month > .next",d.prototype.nextMonth).on("click.bfhdatepicker.data-api touchstart.bfhdatepicker.data-api",".bfh-datepicker-calendar > table.calendar .year > .previous",d.prototype.previousYear).on("click.bfhdatepicker.data-api touchstart.bfhdatepicker.data-api",".bfh-datepicker-calendar > table.calendar .year > .next",d.prototype.nextYear).on("click.bfhdatepicker.data-api touchstart.bfhdatepicker.data-api",".bfh-datepicker-calendar > table.calendar td:not(.off)",d.prototype.select).on("click.bfhdatepicker.data-api touchstart.bfhdatepicker.data-api",".bfh-datepicker-calendar > table.calendar",function(){return!1}),this.setDate(),this.setDateLimit(this.options.min,"lower"),this.setDateLimit(this.options.max,"higher"),this.updateCalendar()},updateCalendarHeader:function(e,a,n){var t,o;for(e.find("table > thead > tr > th.month > span").text(BFHMonthsList[a]),e.find("table > thead > tr > th.year > span").text(n),t=e.find("table > thead > tr.days-header"),t.html(""),o=BFHDayOfWeekStart;o<BFHDaysList.length;o+=1)t.append("<th>"+BFHDaysList[o]+"</th>");for(o=0;BFHDayOfWeekStart>o;o+=1)t.append("<th>"+BFHDaysList[o]+"</th>")},checkMinDate:function(e,a,n){var t,o,i,r;return t=this.$element.data("lowerlimit"),t===!0&&(o=this.$element.data("lowerday"),i=this.$element.data("lowermonth"),r=this.$element.data("loweryear"),o>e&&a===i&&n===r||i>a&&n===r||r>n)?!0:!1},checkMaxDate:function(e,a,n){var t,o,i,r;return t=this.$element.data("higherlimit"),t===!0&&(o=this.$element.data("higherday"),i=this.$element.data("highermonth"),r=this.$element.data("higheryear"),e>o&&a===i&&n===r||a>i&&n===r||n>r)?!0:!1},checkToday:function(e,a,n){var t;return t=new Date,e===t.getDate()&&a===t.getMonth()&&n===t.getFullYear()?!0:!1},updateCalendarDays:function(e,t,o){var i,r,s,d,l,c,m;for(i=e.find("table > tbody").html(""),r=a(t,o),s=a(t+1,o),d=n(t,o,1),l=n(t,o,s),c="",m=0;(d-BFHDayOfWeekStart+7)%7>m;m+=1)c+='<td class="off">'+(r-(d-BFHDayOfWeekStart+7)%7+m+1)+"</td>";for(m=1;s>=m;m+=1)c+=this.checkMinDate(m,t,o)?'<td data-day="'+m+'" class="off">'+m+"</td>":this.checkMaxDate(m,t,o)?'<td data-day="'+m+'" class="off">'+m+"</td>":this.checkToday(m,t,o)?'<td data-day="'+m+'" class="today">'+m+"</td>":'<td data-day="'+m+'">'+m+"</td>",n(t,o,m)===(6+BFHDayOfWeekStart)%7&&(i.append("<tr>"+c+"</tr>"),c="");for(m=1;(7-(l+1-BFHDayOfWeekStart+7)%7)%7+1>=m;m+=1)c+='<td class="off">'+m+"</td>",m===(7-(l+1-BFHDayOfWeekStart+7)%7)%7&&i.append("<tr>"+c+"</tr>")},updateCalendar:function(){var e,a,n;e=this.$element.find(".bfh-datepicker-calendar"),a=this.$element.data("month"),n=this.$element.data("year"),this.updateCalendarHeader(e,a,n),this.updateCalendarDays(e,a,n)},previousMonth:function(){var a,n,t;return a=e(this),n=r(a),0===Number(n.data("month"))?(n.data("month",11),n.data("year",Number(n.data("year"))-1)):n.data("month",Number(n.data("month"))-1),t=n.data("bfhdatepicker"),t.updateCalendar(),!1},nextMonth:function(){var a,n,t;return a=e(this),n=r(a),11===Number(n.data("month"))?(n.data("month",0),n.data("year",Number(n.data("year"))+1)):n.data("month",Number(n.data("month"))+1),t=n.data("bfhdatepicker"),t.updateCalendar(),!1},previousYear:function(){var a,n,t;return a=e(this),n=r(a),n.data("year",Number(n.data("year"))-1),t=n.data("bfhdatepicker"),t.updateCalendar(),!1},nextYear:function(){var a,n,t;return a=e(this),n=r(a),n.data("year",Number(n.data("year"))+1),t=n.data("bfhdatepicker"),t.updateCalendar(),!1},select:function(a){var n,o,s,d,l,c;n=e(this),a.preventDefault(),a.stopPropagation(),o=r(n),s=o.data("bfhdatepicker"),d=o.data("month"),l=o.data("year"),c=n.data("day"),o.val(t(s.options.format,d,l,c)),o.trigger("change.bfhdatepicker"),s.options.close===!0&&i()},toggle:function(a){var n,t,o;if(n=e(this),t=r(n),t.is(".disabled")||void 0!==t.attr("disabled"))return!0;if(o=t.hasClass("open"),i(),!o){if(t.trigger(a=e.Event("show.bfhdatepicker")),a.isDefaultPrevented())return!0;t.toggleClass("open").trigger("shown.bfhdatepicker"),n.focus()}return!1}};var l=e.fn.bfhdatepicker;e.fn.bfhdatepicker=function(a){return this.each(function(){var n,t,o;n=e(this),t=n.data("bfhdatepicker"),o="object"==typeof a&&a,this.type="bfhdatepicker",t||n.data("bfhdatepicker",t=new d(this,o)),"string"==typeof a&&t[a].call(n)})},e.fn.bfhdatepicker.Constructor=d,e.fn.bfhdatepicker.defaults={icon:"glyphicon glyphicon-calendar",align:"left",input:"form-control",placeholder:"",name:"",date:"today",format:"m/d/y",min:"",max:"",close:!0},e.fn.bfhdatepicker.noConflict=function(){return e.fn.bfhdatepicker=l,this};var c;e.valHooks.div&&(c=e.valHooks.div),e.valHooks.div={get:function(a){return e(a).hasClass("bfh-datepicker")?e(a).find('input[type="text"]').val():c?c.get(a):void 0},set:function(a,n){if(e(a).hasClass("bfh-datepicker"))e(a).find('input[type="text"]').val(n);else if(c)return c.set(a,n)}},e(document).ready(function(){e("div.bfh-datepicker").each(function(){var a;a=e(this),a.bfhdatepicker(a.data())})}),e(document).on("click.bfhdatepicker.data-api",i)}(window.jQuery),+function(e){"use strict";var a=function(a,n){this.options=e.extend({},e.fn.bfhfonts.defaults,n),this.$element=e(a),this.$element.is("select")&&this.addFonts(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapFonts()};a.prototype={constructor:a,getFonts:function(){var a,n;if(this.options.available){n=[],this.options.available=this.options.available.split(",");for(a in BFHFontsList)BFHFontsList.hasOwnProperty(a)&&e.inArray(a,this.options.available)>=0&&(n[a]=BFHFontsList[a]);return n}return BFHFontsList},addFonts:function(){var e,a,n;e=this.options.font,n=this.getFonts(),this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(a in n)n.hasOwnProperty(a)&&this.$element.append('<option value="'+a+'">'+a+"</option>");this.options.showCustom&&this.$element.append('<option value="Custom">Use Custom Font</option>'),this.options.showMore&&this.$element.append('<option value="Google">More Fonts...</option>'),this.$element.val(e)},addBootstrapFonts:function(){var e,a,n,t,o,i;t=this.options.font,e=this.$element.find('input[type="hidden"]'),a=this.$element.find(".bfh-selectbox-option"),n=this.$element.find("[role=option]"),i=this.getFonts(),n.html(""),this.options.blank===!0&&n.append('<li><a tabindex="-1" href="#" data-option=""></a></li>');for(o in i)i.hasOwnProperty(o)&&n.append('<li><a tabindex="-1" href="#" style=\'font-family: '+i[o]+"' data-option=\""+o+'">'+o+"</a></li>");this.options.showCustom&&n.append('<li><a tabindex="-1" href="#" style=\'font-family: Custom\' data-option="Use Custom Font">Use Custom Font</a></li>'),this.options.showMore&&n.append('<li><a tabindex="-1" href="#" style=\'font-family: Google\' data-option="More Fonts...">More Fonts...</a></li>'),this.$element.val(t)}};var n=e.fn.bfhfonts;e.fn.bfhfonts=function(n){return this.each(function(){var t,o,i;t=e(this),o=t.data("bfhfonts"),i="object"==typeof n&&n,o||t.data("bfhfonts",o=new a(this,i)),"string"==typeof n&&o[n].call(t)})},e.fn.bfhfonts.Constructor=a,e.fn.bfhfonts.defaults={font:"",available:"",blank:!0,showCustom:!1,showMore:!1},e.fn.bfhfonts.noConflict=function(){return e.fn.bfhfonts=n,this},e(document).ready(function(){e("form select.bfh-fonts, span.bfh-fonts, div.bfh-fonts").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhfonts(a.data())})})}(window.jQuery),+function(e){"use strict";var a=function(a,n){this.options=e.extend({},e.fn.bfhfontsizes.defaults,n),this.$element=e(a),this.$element.is("select")&&this.addFontSizes(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapFontSizes()};a.prototype={constructor:a,getFontsizes:function(){var a,n;if(this.options.available){n=[],this.options.available=this.options.available.split(",");for(a in BFHFontSizesList)BFHFontSizesList.hasOwnProperty(a)&&e.inArray(a,this.options.available)>=0&&(n[a]=BFHFontSizesList[a]);return n}return BFHFontSizesList},addFontSizes:function(){var e,a,n;e=this.options.fontsize,n=this.getFontsizes(),this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(a in n)n.hasOwnProperty(a)&&this.$element.append('<option value="'+a+'">'+n[a]+"</option>");this.$element.val(e)},addBootstrapFontSizes:function(){var e,a,n,t,o,i;t=this.options.fontsize,e=this.$element.find('input[type="hidden"]'),a=this.$element.find(".bfh-selectbox-option"),n=this.$element.find("[role=option]"),i=this.getFontsizes(),n.html(""),this.options.blank===!0&&n.append('<li><a tabindex="-1" href="#" data-option=""></a></li>');for(o in i)i.hasOwnProperty(o)&&n.append('<li><a tabindex="-1" href="#" data-option="'+o+'">'+i[o]+"</a></li>");this.$element.val(t)}};var n=e.fn.bfhfontsizes;e.fn.bfhfontsizes=function(n){return this.each(function(){var t,o,i;t=e(this),o=t.data("bfhfontsizes"),i="object"==typeof n&&n,o||t.data("bfhfontsizes",o=new a(this,i)),"string"==typeof n&&o[n].call(t)})},e.fn.bfhfontsizes.Constructor=a,e.fn.bfhfontsizes.defaults={fontsize:"",available:"",blank:!0},e.fn.bfhfontsizes.noConflict=function(){return e.fn.bfhfontsizes=n,this},e(document).ready(function(){e("form select.bfh-fontsizes, span.bfh-fontsizes, div.bfh-fontsizes").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhfontsizes(a.data())})})}(window.jQuery),+function(e){"use strict";var a=function(a,n){this.options=e.extend({},e.fn.bfhgooglefonts.defaults,n),this.$element=e(a),this.$element.is("select")&&this.addFonts(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapFonts()};a.prototype={constructor:a,getFonts:function(){var a,n;if(n=[],this.options.subset)for(a in BFHGoogleFontsList.items)BFHGoogleFontsList.items.hasOwnProperty(a)&&e.inArray(this.options.subset,BFHGoogleFontsList.items[a].subsets)>=0&&(n[BFHGoogleFontsList.items[a].family]={info:BFHGoogleFontsList.items[a],index:parseInt(a,10)});else if(this.options.available){this.options.available=this.options.available.split(",");for(a in BFHGoogleFontsList.items)BFHGoogleFontsList.items.hasOwnProperty(a)&&e.inArray(BFHGoogleFontsList.items[a].family,this.options.available)>=0&&(n[BFHGoogleFontsList.items[a].family]={info:BFHGoogleFontsList.items[a],index:parseInt(a,10)})}else for(a in BFHGoogleFontsList.items)BFHGoogleFontsList.items.hasOwnProperty(a)&&(n[BFHGoogleFontsList.items[a].family]={info:BFHGoogleFontsList.items[a],index:parseInt(a,10)});return n},addFonts:function(){var e,a,n;e=this.options.font,n=this.getFonts(),this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(a in n)n.hasOwnProperty(a)&&this.$element.append('<option value="'+n[a].info.family+'">'+n[a].info.family+"</option>");this.options.showCustom&&this.$element.append('<option value="Custom">Use Custom Font</option>'),this.options.showMore&&this.$element.append('<option value="Google">More Fonts...</option>'),this.$element.val(e)},addBootstrapFonts:function(){var e,a,n,t,o,i;t=this.options.font,e=this.$element.find('input[type="hidden"]'),a=this.$element.find(".bfh-selectbox-option"),n=this.$element.find("[role=option]"),i=this.getFonts(),n.html(""),this.options.blank===!0&&n.append('<li><a tabindex="-1" href="#" data-option="" style="background-image: none;"></a></li>');for(o in i)i.hasOwnProperty(o)&&n.append('<li><a tabindex="-1" href="#" style="background-position: 0 -'+(30*i[o].index-2)+'px;" data-option="'+i[o].info.family+'">'+i[o].info.family+"</a></li>");this.options.showCustom&&n.append('<li><a tabindex="-1" href="#" style=\'font-family: Custom\' data-option="Use Custom Font">Use Custom Font</a></li>'),this.options.showMore&&n.append('<li><a tabindex="-1" href="#" style=\'font-family: Google\' data-option="More Fonts...">More Fonts...</a></li>'),this.$element.val(t)}};var n=e.fn.bfhgooglefonts;e.fn.bfhgooglefonts=function(n){return this.each(function(){var t,o,i;t=e(this),o=t.data("bfhgooglefonts"),i="object"==typeof n&&n,o||t.data("bfhgooglefonts",o=new a(this,i)),"string"==typeof n&&o[n].call(t)})},e.fn.bfhgooglefonts.Constructor=a,e.fn.bfhgooglefonts.defaults={font:"",available:"",subset:"",blank:!0},e.fn.bfhgooglefonts.noConflict=function(){return e.fn.bfhgooglefonts=n,this},e(document).ready(function(){e("form select.bfh-googlefonts, span.bfh-googlefonts, div.bfh-googlefonts").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhgooglefonts(a.data())})})}(window.jQuery),!function(e){"use strict";var a=function(a,n){var t,o;this.options=e.extend({},e.fn.bfhgooglefontlist.defaults,n),this.$element=e(a),this.familyList={};for(t in BFHGoogleFontsList.items)BFHGoogleFontsList.items.hasOwnProperty(t)&&(o=BFHGoogleFontsList.items[t],this.familyList[o.family]={font:BFHGoogleFontsList.items[t],i:parseInt(t,10)});this.addFonts()};a.prototype={constructor:a,addFonts:function(){var a,n,t,o,i=this;a=this.options.family,this.$element.html("");var r=function(a){a.preventDefault(),i.$element.trigger("select",e(this).data("option"))};for(n in this.familyList)this.familyList.hasOwnProperty(n)&&(o=this.familyList[n],t=e('<a href="#" class="list-group-item" style="background-position: 0 -'+(30*o.i-2)+'px;" data-option="'+o.font.family+'">'+o.font.family+"</a>"),t.bind("click",r),this.$element.append(t))}},e.fn.bfhgooglefontlist=function(n){return this.each(function(){var t,o,i;t=e(this),o=t.data("bfhgooglefontlist"),i="object"==typeof n&&n,this.type="bfhgooglefontlist",o||t.data("bfhgooglefontlist",o=new a(this,i)),"string"==typeof n&&o[n]()})},e.fn.bfhgooglefontlist.Constructor=a,e.fn.bfhgooglefontlist.defaults={family:""},e(window).on("load",function(){e("div.bfh-googlefontlist").each(function(){var a;a=e(this),a.bfhgooglefontlist(a.data())})})}(window.jQuery),+function(e){"use strict";var a=function(a,n){this.options=e.extend({},e.fn.bfhlanguages.defaults,n),this.$element=e(a),this.$element.is("select")&&this.addLanguages(),this.$element.is("span")&&this.displayLanguage(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapLanguages()};a.prototype={constructor:a,getLanguages:function(){var e,a,n;if(this.options.available){n=[],this.options.available=this.options.available.split(",");for(a in this.options.available)this.options.available.hasOwnProperty(a)&&(-1!==this.options.available[a].indexOf("_")?(e=this.options.available[a].split("_"),n[e[0]]={name:BFHLanguagesList[e[0]],country:e[1]}):n[this.options.available[a]]=BFHLanguagesList[this.options.available[a]]);return n}return BFHLanguagesList},addLanguages:function(){var e,a,n;e=this.options.language,a=this.getLanguages(),this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(n in a)a.hasOwnProperty(n)&&(a[n].hasOwnProperty("name")?this.$element.append('<option value="'+n+"_"+a[n].country+'">'+a[n].name.toProperCase()+" ("+BFHCountriesList[a[n].country]+")</option>"):this.$element.append('<option value="'+n+'">'+a[n].toProperCase()+"</option>"));this.$element.val(e)},addBootstrapLanguages:function(){var e,a,n,t,o,i;t=this.options.language,e=this.$element.find('input[type="hidden"]'),a=this.$element.find(".bfh-selectbox-option"),n=this.$element.find("[role=option]"),o=this.getLanguages(),n.html(""),this.options.blank===!0&&n.append('<li><a tabindex="-1" href="#" data-option=""></a></li>');for(i in o)o.hasOwnProperty(i)&&(o[i].hasOwnProperty("name")?this.options.flags===!0?n.append('<li><a tabindex="-1" href="#" data-option="'+i+"_"+o[i].country+'"><i class="glyphicon bfh-flag-'+o[i].country+'"></i>'+o[i].name.toProperCase()+"</a></li>"):n.append('<li><a tabindex="-1" href="#" data-option="'+i+"_"+o[i].country+'">'+o[i].name.toProperCase()+" ("+BFHCountriesList[o[i].country]+")</a></li>"):n.append('<li><a tabindex="-1" href="#" data-option="'+i+'">'+o[i]+"</a></li>"));this.$element.val(t)},displayLanguage:function(){var e;e=this.options.language,-1!==e.indexOf("_")?(e=e.split("_"),this.options.flags===!0?this.$element.html('<i class="glyphicon bfh-flag-'+e[1]+'"></i> '+BFHLanguagesList[e[0]].toProperCase()):this.$element.html(BFHLanguagesList[e[0]].toProperCase()+" ("+BFHCountriesList[e[1]]+")")):this.$element.html(BFHLanguagesList[e].toProperCase())}};var n=e.fn.bfhlanguages;e.fn.bfhlanguages=function(n){return this.each(function(){var t,o,i;t=e(this),o=t.data("bfhlanguages"),i="object"==typeof n&&n,o||t.data("bfhlanguages",o=new a(this,i)),"string"==typeof n&&o[n].call(t)})},e.fn.bfhlanguages.Constructor=a,e.fn.bfhlanguages.defaults={language:"",available:"",flags:!1,blank:!0},e.fn.bfhlanguages.noConflict=function(){return e.fn.bfhlanguages=n,this},e(document).ready(function(){e("form select.bfh-languages, span.bfh-languages, div.bfh-languages").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhlanguages(a.data())})}),String.prototype.toProperCase=function(){return this.replace(/\w\S*/g,function(e){return e.charAt(0).toUpperCase()+e.substr(1).toLowerCase()})}}(window.jQuery),+function(e){"use strict";var a=function(a,n){this.options=e.extend({},e.fn.bfhnumber.defaults,n),this.$element=e(a),this.initInput()};a.prototype={constructor:a,initInput:function(){this.options.buttons===!0&&(this.$element.wrap('<div class="input-group"></div>'),this.$element.parent().append('<span class="input-group-addon bfh-number-btn inc"><span class="glyphicon glyphicon-chevron-up"></span></span>'),this.$element.parent().append('<span class="input-group-addon bfh-number-btn dec"><span class="glyphicon glyphicon-chevron-down"></span></span>')),this.$element.on("change.bfhnumber.data-api",a.prototype.change),this.options.keyboard===!0&&this.$element.on("keydown.bfhnumber.data-api",a.prototype.keydown),this.options.buttons===!0&&this.$element.parent().on("mousedown.bfhnumber.data-api",".inc",a.prototype.btninc).on("mousedown.bfhnumber.data-api",".dec",a.prototype.btndec),this.formatNumber()},keydown:function(a){var n;if(n=e(this).data("bfhnumber"),n.$element.is(".disabled")||void 0!==n.$element.attr("disabled"))return!0;switch(a.which){case 38:n.increment();break;case 40:n.decrement()}return!0},mouseup:function(e){var a,n,t;a=e.data.btn,n=a.$element.data("timer"),t=a.$element.data("interval"),clearTimeout(n),clearInterval(t)},btninc:function(){var n,t;return n=e(this).parent().find(".bfh-number").data("bfhnumber"),n.$element.is(".disabled")||void 0!==n.$element.attr("disabled")?!0:(n.increment(),t=setTimeout(function(){var e;e=setInterval(function(){n.increment()},80),n.$element.data("interval",e)},750),n.$element.data("timer",t),e(document).one("mouseup",{btn:n},a.prototype.mouseup),!0)},btndec:function(){var n,t;return n=e(this).parent().find(".bfh-number").data("bfhnumber"),n.$element.is(".disabled")||void 0!==n.$element.attr("disabled")?!0:(n.decrement(),t=setTimeout(function(){var e;e=setInterval(function(){n.decrement()},80),n.$element.data("interval",e)},750),n.$element.data("timer",t),e(document).one("mouseup",{btn:n},a.prototype.mouseup),!0)},change:function(){var a;return a=e(this).data("bfhnumber"),a.$element.is(".disabled")||void 0!==a.$element.attr("disabled")?!0:(a.formatNumber(),!0)},increment:function(){var e;e=this.getValue(),e+=1,this.$element.val(e).change()
},decrement:function(){var e;e=this.getValue(),e-=1,this.$element.val(e).change()},getValue:function(){var e;return e=this.$element.val(),"-1"!==e&&(e=String(e).replace(/\D/g,"")),0===String(e).length&&(e=this.options.min),parseInt(e)},formatNumber:function(){var e,a,n,t;if(e=this.getValue(),e>this.options.max&&(e=this.options.wrap===!0?this.options.min:this.options.max),e<this.options.min&&(e=this.options.wrap===!0?this.options.max:this.options.min),this.options.zeros===!0)for(a=String(this.options.max).length,n=String(e).length,t=n;a>t;t+=1)e="0"+e;e!==this.$element.val()&&this.$element.val(e)}};var n=e.fn.bfhnumber;e.fn.bfhnumber=function(n){return this.each(function(){var t,o,i;t=e(this),o=t.data("bfhnumber"),i="object"==typeof n&&n,o||t.data("bfhnumber",o=new a(this,i)),"string"==typeof n&&o[n].call(t)})},e.fn.bfhnumber.Constructor=a,e.fn.bfhnumber.defaults={min:0,max:9999,zeros:!1,keyboard:!0,buttons:!0,wrap:!1},e.fn.bfhnumber.noConflict=function(){return e.fn.bfhnumber=n,this},e(document).ready(function(){e('form input[type="text"].bfh-number, form input[type="number"].bfh-number').each(function(){var a;a=e(this),a.bfhnumber(a.data())})})}(window.jQuery),+function(e){"use strict";function a(e,a){var n,t,o,i;for(n="",a=String(a).replace(/\D/g,""),t=0,o=0;t<e.length;t+=1)/\d/g.test(e.charAt(t))?e.charAt(t)===a.charAt(o)?(n+=a.charAt(o),o+=1):n+=e.charAt(t):"d"!==e.charAt(t)?(""!==a.charAt(o)||"+"===e.charAt(t))&&(n+=e.charAt(t)):""===a.charAt(o)?n+="":(n+=a.charAt(o),o+=1);return i=e.charAt(n.length),"d"!==i&&(n+=i),n}function n(e){var a,n=0;return document.selection?(e.focus(),a=document.selection.createRange(),a.moveStart("character",-e.value.length),n=a.text.length):(e.selectionStart||0===e.selectionStart)&&(n=e.selectionStart),n}function t(e,a){var n;document.selection?(e.focus(),n=document.selection.createRange(),n.moveStart("character",-e.value.length),n.moveStart("character",a),n.moveEnd("character",0),n.select()):(e.selectionStart||0===e.selectionStart)&&(e.selectionStart=a,e.selectionEnd=a,e.focus())}var o=function(a,n){this.options=e.extend({},e.fn.bfhphone.defaults,n),this.$element=e(a),(this.$element.is('input[type="text"]')||this.$element.is('input[type="tel"]'))&&this.addFormatter(),this.$element.is("span")&&this.displayFormatter()};o.prototype={constructor:o,addFormatter:function(){var a;""!==this.options.country&&(a=e(document).find("#"+this.options.country),0!==a.length?(this.options.format=BFHPhoneFormatList[a.val()],a.on("change",{phone:this},this.changeCountry)):this.options.format=BFHPhoneFormatList[this.options.country]),this.$element.on("keyup.bfhphone.data-api",o.prototype.change),this.loadFormatter()},loadFormatter:function(){var e;e=a(this.options.format,this.$element.val()),this.$element.val(e)},displayFormatter:function(){var e;""!==this.options.country&&(this.options.format=BFHPhoneFormatList[this.options.country]),e=a(this.options.format,this.options.number),this.$element.html(e)},changeCountry:function(a){var n,t;n=e(this),t=a.data.phone,t.$element.val(String(t.$element.val()).replace(/\+\d*/g,"")),t.options.format=BFHPhoneFormatList[n.val()],t.loadFormatter()},change:function(o){var i,r,s,d;return i=e(this).data("bfhphone"),i.$element.is(".disabled")||void 0!==i.$element.attr("disabled")?!0:(r=n(i.$element[0]),s=!1,r===i.$element.val().length&&(s=!0),8===o.which&&"d"!==i.options.format.charAt(i.$element.val().length)&&i.$element.val(String(i.$element.val()).substring(0,i.$element.val().length-1)),d=a(i.options.format,i.$element.val()),d===i.$element.val()?!0:(i.$element.val(d),s&&(r=i.$element.val().length),t(i.$element[0],r),!0))}};var i=e.fn.bfhphone;e.fn.bfhphone=function(a){return this.each(function(){var n,t,i;n=e(this),t=n.data("bfhphone"),i="object"==typeof a&&a,t||n.data("bfhphone",t=new o(this,i)),"string"==typeof a&&t[a].call(n)})},e.fn.bfhphone.Constructor=o,e.fn.bfhphone.defaults={format:"",number:"",country:""},e.fn.bfhphone.noConflict=function(){return e.fn.bfhphone=i,this},e(document).ready(function(){e('form input[type="text"].bfh-phone, form input[type="tel"].bfh-phone, span.bfh-phone').each(function(){var a;a=e(this),a.bfhphone(a.data())})})}(window.jQuery),+function(e){"use strict";function a(){var a;e(t).each(function(t){return a=n(e(this)),a.hasClass("open")?(a.trigger(t=e.Event("hide.bfhselectbox")),t.isDefaultPrevented()?!0:(a.removeClass("open").trigger("hidden.bfhselectbox"),void 0)):!0})}function n(e){return e.closest(".bfh-selectbox")}var t="[data-toggle=bfh-selectbox]",o=function(a,n){this.options=e.extend({},e.fn.bfhselectbox.defaults,n),this.$element=e(a),this.initSelectBox()};o.prototype={constructor:o,initSelectBox:function(){var a;a="",0===this.$element.find(".bfh-selectbox-options").length&&(this.$element.find("div").each(function(){a=a+'<li><a tabindex="-1" href="#" data-option="'+e(this).data("value")+'">'+e(this).html()+"</a></li>"}),this.$element.html('<input type="hidden" name="'+this.options.name+'" value=""><a class="bfh-selectbox-toggle '+this.options.input+'" role="button" data-toggle="bfh-selectbox" href="#"><span class="bfh-selectbox-option"></span><span class="'+this.options.icon+' selectbox-caret"></span></a><div class="bfh-selectbox-options"><div role="listbox"><ul role="option"></ul></div></div>'),this.$element.find("[role=option]").html(a),this.options.filter===!0&&this.$element.find(".bfh-selectbox-options").prepend('<div class="bfh-selectbox-filter-container"><input type="text" class="bfh-selectbox-filter form-control"></div>'),this.$element.val(this.options.value)),this.$element.on("click.bfhselectbox.data-api touchstart.bfhselectbox.data-api",t,o.prototype.toggle).on("keydown.bfhselectbox.data-api",t+", [role=option]",o.prototype.keydown).on("mouseenter.bfhselectbox.data-api","[role=option] > li > a",o.prototype.mouseenter).on("click.bfhselectbox.data-api","[role=option] > li > a",o.prototype.select).on("click.bfhselectbox.data-api",".bfh-selectbox-filter",function(){return!1}).on("propertychange.bfhselectbox.data-api change.bfhselectbox.data-api input.bfhselectbox.data-api paste.bfhselectbox.data-api",".bfh-selectbox-filter",o.prototype.filter)},toggle:function(t){var o,i,r;if(o=e(this),i=n(o),i.is(".disabled")||void 0!==i.attr("disabled"))return!0;if(r=i.hasClass("open"),a(),!r){if(i.trigger(t=e.Event("show.bfhselectbox")),t.isDefaultPrevented())return!0;i.toggleClass("open").trigger("shown.bfhselectbox").find('[role=option] > li > [data-option="'+i.val()+'"]').focus()}return!1},filter:function(){var a,t,o;a=e(this),t=n(a),o=e("[role=option] li a",t),o.hide().filter(function(){return-1!==e(this).text().toUpperCase().indexOf(a.val().toUpperCase())}).show()},keydown:function(a){var i,r,s,d,l;return/(38|40|27)/.test(a.keyCode)?(i=e(this),a.preventDefault(),a.stopPropagation(),s=n(i),d=s.hasClass("open"),!d||d&&27===a.keyCode?(27===a.which&&s.find(t).focus(),i.click()):(r=e("[role=option] li:not(.divider) a:visible",s),r.length?(e("body").off("mouseenter.bfh-selectbox.data-api","[role=option] > li > a",o.prototype.mouseenter),l=r.index(r.filter(":focus")),38===a.keyCode&&l>0&&(l-=1),40===a.keyCode&&l<r.length-1&&(l+=1),l||(l=0),r.eq(l).focus(),e("body").on("mouseenter.bfh-selectbox.data-api","[role=option] > li > a",o.prototype.mouseenter),void 0):!0)):!0},mouseenter:function(){var a;a=e(this),a.focus()},select:function(t){var o,i;return o=e(this),t.preventDefault(),t.stopPropagation(),o.is(".disabled")||void 0!==o.attr("disabled")?!0:(i=n(o),i.val(o.data("option")),i.trigger("change.bfhselectbox"),a(),void 0)}};var i=e.fn.bfhselectbox;e.fn.bfhselectbox=function(a){return this.each(function(){var n,t,i;n=e(this),t=n.data("bfhselectbox"),i="object"==typeof a&&a,this.type="bfhselectbox",t||n.data("bfhselectbox",t=new o(this,i)),"string"==typeof a&&t[a].call(n)})},e.fn.bfhselectbox.Constructor=o,e.fn.bfhselectbox.defaults={icon:"caret",input:"form-control",name:"",value:"",filter:!1},e.fn.bfhselectbox.noConflict=function(){return e.fn.bfhselectbox=i,this};var r;e.valHooks.div&&(r=e.valHooks.div),e.valHooks.div={get:function(a){return e(a).hasClass("bfh-selectbox")?e(a).find('input[type="hidden"]').val():r?r.get(a):void 0},set:function(a,n){var t,o;if(e(a).hasClass("bfh-selectbox"))t=e(a),t.find("li a[data-option='"+n+"']").length>0?o=t.find("li a[data-option='"+n+"']").html():t.find("li a").length>0?o=t.find("li a").eq(0).html():(n="",o=""),t.find('input[type="hidden"]').val(n),t.find(".bfh-selectbox-option").html(o);else if(r)return r.set(a,n)}},e(document).ready(function(){e("div.bfh-selectbox").each(function(){var a;a=e(this),a.bfhselectbox(a.data())})}),e(document).on("click.bfhselectbox.data-api",a)}(window.jQuery),+function(e){"use strict";var a=function(a,n){this.options=e.extend({},e.fn.bfhslider.defaults,n),this.$element=e(a),this.initSlider()};a.prototype={constructor:a,initSlider:function(){""===this.options.value&&(this.options.value=this.options.min),this.$element.html('<input type="hidden" name="'+this.options.name+'" value=""><div class="bfh-slider-handle"><div class="bfh-slider-value"></div></div>'),this.$element.find('input[type="hidden"]').val(this.options.value),this.updateHandle(this.options.value),this.$element.on("mousedown.bfhslider.data-api",a.prototype.mouseDown)},updateHandle:function(e){var a,n,t,o;o=this.options.max-this.options.min,n=this.$element.width(),t=this.$element.position().left,a=Math.round((e-this.options.min)*(n-20)/o+t),this.$element.find(".bfh-slider-handle").css("left",a+"px"),this.$element.find(".bfh-slider-value").text(e)},updateVal:function(e){var a,n,t,o,i;return i=this.options.max-this.options.min,a=this.$element.width(),n=this.$element.offset().left,t=n+a,n>e&&(e=n),e+20>t&&(e=t),o=(e-n)/a,o=Math.ceil(o*i+this.options.min),o===this.$element.val()?!0:(this.$element.val(o),this.$element.trigger("change.bfhslider"),void 0)},mouseDown:function(){var n;return n=e(this),n.is(".disabled")||void 0!==n.attr("disabled")?!0:(e(document).on("mousemove.bfhslider.data-api",{slider:n},a.prototype.mouseMove).one("mouseup.bfhslider.data-api",{slider:n},a.prototype.mouseUp),void 0)},mouseMove:function(e){var a;a=e.data.slider,a.data("bfhslider").updateVal(e.pageX)},mouseUp:function(a){var n;n=a.data.slider,n.data("bfhslider").updateVal(a.pageX),e(document).off("mousemove.bfhslider.data-api")}};var n=e.fn.bfhslider;e.fn.bfhslider=function(n){return this.each(function(){var t,o,i;t=e(this),o=t.data("bfhslider"),i="object"==typeof n&&n,this.type="bfhslider",o||t.data("bfhslider",o=new a(this,i)),"string"==typeof n&&o[n].call(t)})},e.fn.bfhslider.Constructor=a,e.fn.bfhslider.defaults={name:"",value:"",min:0,max:100},e.fn.bfhslider.noConflict=function(){return e.fn.bfhslider=n,this};var t;e.valHooks.div&&(t=e.valHooks.div),e.valHooks.div={get:function(a){return e(a).hasClass("bfh-slider")?e(a).find('input[type="hidden"]').val():t?t.get(a):void 0},set:function(a,n){if(e(a).hasClass("bfh-slider"))e(a).find('input[type="hidden"]').val(n),e(a).data("bfhslider").updateHandle(n);else if(t)return t.set(a,n)}},e(document).ready(function(){e("div.bfh-slider").each(function(){var a;a=e(this),a.bfhslider(a.data())})})}(window.jQuery),+function(e){"use strict";var a=function(a,n){this.options=e.extend({},e.fn.bfhstates.defaults,n),this.$element=e(a),this.$element.is("select")&&this.addStates(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapStates(),this.$element.is("span")&&this.displayState()};a.prototype={constructor:a,addStates:function(){var a,n;a=this.options.country,""!==a&&(n=e(document).find("#"+a),0!==n.length&&(a=n.val(),n.on("change",{state:this},this.changeCountry))),this.loadStates(a)},loadStates:function(e){var a,n;a=this.options.state,this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(n in BFHStatesList[e])BFHStatesList[e].hasOwnProperty(n)&&this.$element.append('<option value="'+BFHStatesList[e][n].code+'">'+BFHStatesList[e][n].name+"</option>");this.$element.val(a)},changeCountry:function(a){var n,t,o;n=e(this),t=a.data.state,o=n.val(),t.loadStates(o)},addBootstrapStates:function(){var a,n;a=this.options.country,""!==a&&(n=e(document).find("#"+a),0!==n.length&&(a=n.find('input[type="hidden"]').val(),n.on("change.bfhselectbox",{state:this},this.changeBootstrapCountry))),this.loadBootstrapStates(a)},loadBootstrapStates:function(e){var a,n,t,o,i,r;o=this.options.state,i="",a=this.$element.find('input[type="hidden"]'),n=this.$element.find(".bfh-selectbox-option"),t=this.$element.find("[role=option]"),t.html(""),this.options.blank===!0&&t.append('<li><a tabindex="-1" href="#" data-option=""></a></li>');for(r in BFHStatesList[e])BFHStatesList[e].hasOwnProperty(r)&&(t.append('<li><a tabindex="-1" href="#" data-option="'+BFHStatesList[e][r].code+'">'+BFHStatesList[e][r].name+"</a></li>"),BFHStatesList[e][r].code===o&&(i=BFHStatesList[e][r].name));this.$element.val(o)},changeBootstrapCountry:function(a){var n,t,o;n=e(this),t=a.data.state,o=n.val(),t.loadBootstrapStates(o)},displayState:function(){var e,a,n,t;e=this.options.country,a=this.options.state,n="";for(t in BFHStatesList[e])if(BFHStatesList[e].hasOwnProperty(t)&&BFHStatesList[e][t].code===a){n=BFHStatesList[e][t].name;break}this.$element.html(n)}};var n=e.fn.bfhstates;e.fn.bfhstates=function(n){return this.each(function(){var t,o,i;t=e(this),o=t.data("bfhstates"),i="object"==typeof n&&n,o||t.data("bfhstates",o=new a(this,i)),"string"==typeof n&&o[n].call(t)})},e.fn.bfhstates.Constructor=a,e.fn.bfhstates.defaults={country:"",state:"",blank:!0},e.fn.bfhstates.noConflict=function(){return e.fn.bfhstates=n,this},e(document).ready(function(){e("form select.bfh-states, span.bfh-states, div.bfh-states").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhstates(a.data())})})}(window.jQuery),+function(e){"use strict";function a(e,a){return e=String(e),1===e.length&&(e="0"+e),a=String(a),1===a.length&&(a="0"+a),e+BFHTimePickerDelimiter+a}function n(){var a;e(o).each(function(n){return a=t(e(this)),a.hasClass("open")?(a.trigger(n=e.Event("hide.bfhtimepicker")),n.isDefaultPrevented()?!0:(a.removeClass("open").trigger("hidden.bfhtimepicker"),void 0)):!0})}function t(e){return e.closest(".bfh-timepicker")}var o="[data-toggle=bfh-timepicker]",i=function(a,n){this.options=e.extend({},e.fn.bfhtimepicker.defaults,n),this.$element=e(a),this.initPopover()};i.prototype={constructor:i,setTime:function(){var e,n,t,o,i,r,s;e=this.options.time,r="",s="",""===e||"now"===e||void 0===e?(n=new Date,o=n.getHours(),i=n.getMinutes(),"12h"===this.options.mode&&(o>12?(o-=12,r=" "+BFHTimePickerModes.pm,s="pm"):(r=" "+BFHTimePickerModes.am,s="am")),"now"===e&&this.$element.find('.bfh-timepicker-toggle > input[type="text"]').val(a(o,i)+r),this.$element.data("hour",o),this.$element.data("minute",i),this.$element.data("mode",s)):(t=String(e).split(BFHTimePickerDelimiter),o=t[0],i=t[1],"12h"===this.options.mode&&(t=String(i).split(" "),i=t[0],s=t[1]===BFHTimePickerModes.pm?"pm":"am"),this.$element.find('.bfh-timepicker-toggle > input[type="text"]').val(e),this.$element.data("hour",o),this.$element.data("minute",i),this.$element.data("mode",s))},initPopover:function(){var a,n,t,r,s;a="",n="",t="",""!==this.options.icon&&("right"===this.options.align?n='<span class="input-group-addon"><i class="'+this.options.icon+'"></i></span>':a='<span class="input-group-addon"><i class="'+this.options.icon+'"></i></span>',t="input-group"),r="",s="23","12h"===this.options.mode&&(r='<td><div class="bfh-selectbox" data-input="'+this.options.input+'" data-value="am"><div data-value="am">'+BFHTimePickerModes.am+'</div><div data-value="pm">'+BFHTimePickerModes.pm+"</div></div>",s="11"),this.$element.html('<div class="'+t+' bfh-timepicker-toggle" data-toggle="bfh-timepicker">'+a+'<input type="text" name="'+this.options.name+'" class="'+this.options.input+'" placeholder="'+this.options.placeholder+'" readonly>'+n+'</div><div class="bfh-timepicker-popover"><table class="table"><tbody><tr><td class="hour"><input type="text" class="'+this.options.input+' bfh-number"  data-min="0" data-max="'+s+'" data-zeros="true" data-wrap="true"></td><td class="separator">'+BFHTimePickerDelimiter+'</td><td class="minute"><input type="text" class="'+this.options.input+' bfh-number"  data-min="0" data-max="59" data-zeros="true" data-wrap="true"></td>'+r+"</tr></tbody></table></div>"),this.$element.on("click.bfhtimepicker.data-api touchstart.bfhtimepicker.data-api",o,i.prototype.toggle).on("click.bfhtimepicker.data-api touchstart.bfhtimepicker.data-api",".bfh-timepicker-popover > table",function(){return!1}),this.$element.find(".bfh-number").each(function(){var a;a=e(this),a.bfhnumber(a.data()),a.on("change",i.prototype.change)}),this.$element.find(".bfh-selectbox").each(function(){var a;a=e(this),a.bfhselectbox(a.data()),a.on("change.bfhselectbox",i.prototype.change)}),this.setTime(),this.updatePopover()},updatePopover:function(){var e,a,n;e=this.$element.data("hour"),a=this.$element.data("minute"),n=this.$element.data("mode"),this.$element.find(".hour input[type=text]").val(e).change(),this.$element.find(".minute input[type=text]").val(a).change(),this.$element.find(".bfh-selectbox").val(n)},change:function(){var a,n,o,i;return a=e(this),n=t(a),o=n.data("bfhtimepicker"),o&&"undefined"!==o&&(i="","12h"===o.options.mode&&(i=" "+BFHTimePickerModes[n.find(".bfh-selectbox").val()]),n.find('.bfh-timepicker-toggle > input[type="text"]').val(n.find(".hour input[type=text]").val()+BFHTimePickerDelimiter+n.find(".minute input[type=text]").val()+i),n.trigger("change.bfhtimepicker")),!1},toggle:function(a){var o,i,r;if(o=e(this),i=t(o),i.is(".disabled")||void 0!==i.attr("disabled"))return!0;if(r=i.hasClass("open"),n(),!r){if(i.trigger(a=e.Event("show.bfhtimepicker")),a.isDefaultPrevented())return!0;i.toggleClass("open").trigger("shown.bfhtimepicker"),o.focus()}return!1}};var r=e.fn.bfhtimepicker;e.fn.bfhtimepicker=function(a){return this.each(function(){var n,t,o;n=e(this),t=n.data("bfhtimepicker"),o="object"==typeof a&&a,this.type="bfhtimepicker",t||n.data("bfhtimepicker",t=new i(this,o)),"string"==typeof a&&t[a].call(n)})},e.fn.bfhtimepicker.Constructor=i,e.fn.bfhtimepicker.defaults={icon:"glyphicon glyphicon-time",align:"left",input:"form-control",placeholder:"",name:"",time:"now",mode:"24h"},e.fn.bfhtimepicker.noConflict=function(){return e.fn.bfhtimepicker=r,this};var s;e.valHooks.div&&(s=e.valHooks.div),e.valHooks.div={get:function(a){return e(a).hasClass("bfh-timepicker")?e(a).find('.bfh-timepicker-toggle > input[type="text"]').val():s?s.get(a):void 0},set:function(a,n){var t;if(e(a).hasClass("bfh-timepicker"))t=e(a).data("bfhtimepicker"),t.options.time=n,t.setTime(),t.updatePopover();else if(s)return s.set(a,n)}},e(document).ready(function(){e("div.bfh-timepicker").each(function(){var a;a=e(this),a.bfhtimepicker(a.data())})}),e(document).on("click.bfhtimepicker.data-api",n)}(window.jQuery),+function(e){"use strict";var a=function(a,n){this.options=e.extend({},e.fn.bfhtimezones.defaults,n),this.$element=e(a),this.$element.is("select")&&this.addTimezones(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapTimezones()};a.prototype={constructor:a,addTimezones:function(){var a,n;a=this.options.country,""!==a&&(n=e(document).find("#"+a),0!==n.length&&(a=n.val(),n.on("change",{timezone:this},this.changeCountry))),this.loadTimezones(a)},loadTimezones:function(e){var a,n;a=this.options.timezone,this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(n in BFHTimezonesList[e])BFHTimezonesList[e].hasOwnProperty(n)&&this.$element.append('<option value="'+n+'">'+BFHTimezonesList[e][n]+"</option>");this.$element.val(a)},changeCountry:function(a){var n,t,o;n=e(this),t=a.data.timezone,o=n.val(),t.loadTimezones(o)},addBootstrapTimezones:function(){var a,n;a=this.options.country,""!==a&&(n=e(document).find("#"+a),0!==n.length&&(a=n.find('input[type="hidden"]').val(),n.on("change.bfhselectbox",{timezone:this},this.changeBootstrapCountry))),this.loadBootstrapTimezones(a)},loadBootstrapTimezones:function(e){var a,n,t,o,i;o=this.options.timezone,a=this.$element.find('input[type="hidden"]'),n=this.$element.find(".bfh-selectbox-option"),t=this.$element.find("[role=option]"),t.html(""),this.options.blank===!0&&t.append('<li><a tabindex="-1" href="#" data-option=""></a></li>');for(i in BFHTimezonesList[e])BFHTimezonesList[e].hasOwnProperty(i)&&t.append('<li><a tabindex="-1" href="#" data-option="'+i+'">'+BFHTimezonesList[e][i]+"</a></li>");this.$element.val(o)},changeBootstrapCountry:function(a){var n,t,o;n=e(this),t=a.data.timezone,o=n.val(),t.loadBootstrapTimezones(o)}};var n=e.fn.bfhtimezones;e.fn.bfhtimezones=function(n){return this.each(function(){var t,o,i;t=e(this),o=t.data("bfhtimezones"),i="object"==typeof n&&n,o||t.data("bfhtimezones",o=new a(this,i)),"string"==typeof n&&o[n].call(t)})},e.fn.bfhtimezones.Constructor=a,e.fn.bfhtimezones.defaults={country:"",timezone:"",blank:!0},e.fn.bfhtimezones.noConflict=function(){return e.fn.bfhtimezones=n,this},e(document).ready(function(){e("form select.bfh-timezones, div.bfh-timezones").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhtimezones(a.data())})})}(window.jQuery);var CONFIG={};if("undefined"==typeof TEMPLATES)var TEMPLATES={};TEMPLATES["font-picker-template.html"]='<!-- Font Family -->\n<!-- Can\'t use an HTML select because the items in the drop-down need to be\n     styled individually. -->\n<div class="bfh-selectbox">\n  <input class="font-family" type="hidden" value="">\n  <button type="button" class="btn btn-default btn-sm dropdown-toggle font-select-btn"\n    data-toggle="bfh-selectbox">\n    <span class="bfh-selectbox-option"></span>\n    <span class="caret selectbox-caret"></span>\n  </button>\n  <div class="bfh-selectbox-options">\n    <div role="listbox">\n      <ul role="option"></ul>\n    </div>\n  </div>\n</div>\n\n<!-- Google Fonts -->\n<div class="google-fonts modal fade" tabindex="-1" role="dialog"\n  aria-hidden="true" data-backdrop="false">\n  <div class="modal-dialog">\n    <div class="modal-content">\n      <div class="modal-header">\n        <button class="close" type="button" aria-hidden="true"\n          data-dismiss="modal">\n          <span>&times;</span><span class="sr-only">Close</span>\n        </button>\n        <h2 class="modal-title">Google Fonts</h2>\n      </div>\n      <div class="modal-body">\n        <div class="list-group bfh-googlefontlist"></div>\n      </div>\n      <div class="modal-footer">\n        <button type="button" class="btn btn-primary btn-fixed-width" data-dismiss="modal">\n          <span data-i18n="cancel">Cancel</span> <i class="fa fa-times fa-white icon-right"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Custom Font -->\n<div class="custom-font modal fade" tabindex="-1" role="dialog"\n  aria-hidden="true" data-backdrop="false">\n  <div class="modal-dialog">\n    <div class="modal-content">\n      <div class="modal-header">\n        <button class="close" type="button" aria-hidden="true"\n          data-dismiss="modal">\n          <span>&times;</span><span class="sr-only">Close</span>\n        </button>\n        <h2 class="modal-title">Custom Font</h2>\n      </div>\n      <div class="modal-body">\n        <div class="custom-font-error alert alert-danger">\n          Unable to validate the URL entered. Please un-check "Validate URL" to bypass validation.\n        </div>\n        <div class="url-field"></div>\n      </div>\n      <div class="modal-footer">\n        <button type="button" class="save-custom-font btn btn-success btn-fixed-width" >\n          <span data-i18n="select">Select</span> <i class="fa fa-check fa-white icon-right"></i>\n        </button>\n        <button type="button" class="btn btn-primary btn-fixed-width" data-dismiss="modal">\n          <span data-i18n="cancel">Cancel</span> <i class="fa fa-times fa-white icon-right"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n';var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Validation=function(){"use strict";function e(e,a){var n=e.value.trim();return s.test(n)?parseFloat(n)>parseFloat(a):!1}function a(e,a){var n=e.value.trim();return s.test(n)?parseFloat(n)<parseFloat(a):!1}function n(e){var a=e.value.trim();return r.test(a)}function t(e){var a=e.value.trim(),n=!1;return"checkbox"===e.type||"radio"===e.type?e.checked===!0&&(n=!0):null!==a&&""!==a&&(n=!0),n}function o(e){var a=e.value.trim();return-1===a.indexOf("://")&&(a="http://"+a),i.test(a)}var i=/^(?:(?:https?|ftp):\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]+-?)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]+-?)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:\/[^\s]*)?$/i,r=/^(\-|\+)?([0-9]+|Infinity)$/,s=/^\-?[0-9]*\.?[0-9]+$/;return{isGreaterThan:e,isLessThan:a,isValidRequired:t,isValidURL:o,isValidNumber:n}}(),RiseVision.Common.Utilities=function(){function e(e,a){var n="font-family:"+a.font.family+"; ",t="color: "+a.color+"; ",o="font-size: "+a.size+"px; ",i="font-weight: "+(a.bold?"bold":"normal")+"; ",r="font-style: "+(a.italic?"italic":"normal")+"; ",s="text-decoration: "+(a.underline?"underline":"none")+"; ",d="background-color: "+a.highlightColor+"; ";return"."+e+" {"+n+t+o+i+r+s+d+"}"}function a(e){for(var a=document.createElement("style"),n=0,t=e.length;t>n;n++)a.appendChild(document.createTextNode(e[n]));document.head.appendChild(a)}function n(n,i){n.forEach(function(n){n.class&&n.fontSetting&&a([e(n.class,n.fontSetting)]),n.fontSetting.font.type&&("custom"===n.fontSetting.font.type&&n.fontSetting.font.family&&n.fontSetting.font.url?t(n.fontSetting.font.family,n.fontSetting.font.url,i):"google"===n.fontSetting.font.type&&n.fontSetting.font.family&&o(n.fontSetting.font.family,i))})}function t(e,a,n){var t=null,o="font-family: "+e+"; src: url('"+a+"');";n=n||document,t=n.styleSheets[0],null!==t&&t.addRule("@font-face",o)}function o(e,a){var n=document.createElement("link");a=a||document,n.setAttribute("rel","stylesheet"),n.setAttribute("type","text/css"),n.setAttribute("href","https://fonts.googleapis.com/css?family="+e),null!==n&&a.getElementsByTagName("head")[0].appendChild(n)}return{getFontCssStyle:e,addCSSRules:a,loadFonts:n,loadCustomFont:t,loadGoogleFont:o}}(),function(e,a,n,t){"use strict";function o(a,n){function o(){y.append(t["font-picker-template.html"]),w=y.find(".bfh-selectbox"),A=y.find(".font-family"),k=y.find(".custom-font"),S=k.find(".url-field"),C=y.find(".custom-font-error"),w.bfhfonts(n),y.find(".bfh-googlefontlist").bfhgooglefontlist(),S.urlField({url:n["font-url"]}),S=S.data("plugin_urlField"),B=n["font-url"],i(),s(),"function"==typeof n.load&&n.load.call(y)}function i(){var a=!1;T=A.val(),""!==B?(v.loadCustomFont(T,B,M),T=r):null!==T&&(w.find(".bfh-selectbox-options a").each(function(){return e(this).text()===T?(a=!0,!1):void 0}),a||b(T,!0))}function s(){var e=y.find(".google-fonts");w.on("change.bfhselectbox",function(a){"More Fonts..."===a.target.value?e.modal("show"):a.target.value===r?(T=A.val(),C.hide(),k.modal("show")):(T=A.val(),w.trigger("standardFontSelected",[T,y.find("a[data-option='"+T+"']").css("font-family")]))}),y.find(".save-custom-font").on("click",function(){var e="";B=S.getUrl(),e=d(),S.validateUrl()?(v.loadCustomFont(e,B,M),k.modal("hide"),w.trigger("customFontSelected",[e,B])):C.show()}),e.on("select",function(a,n){b(n,!0),e.modal("hide"),T=A.val(),w.trigger("googleFontSelected",n)}),e.find(".close").on("click",function(){w.find(".bfh-selectbox-option").data("option",T).html(T),A.val(T)})}function d(){return B.split("/").pop().split(".")[0]}function l(){var a=w.find("[role=option] li").length,n=w.find("[role=option] li:nth-last-child(2)"),t=w.find("[role=option] li:last"),o=w.find("[role=option] li").slice(0,a-2).sort(function(a,n){var t=e(a).find("a").text(),o=e(n).find("a").text();return t==o?0:o>t?-1:1});w.find("[role=option]").html(o).append(n).append(t)}function c(){return""!==B?d():A.val()}function m(){return y.find("a[data-option='"+A.val()+"']").css("font-family")}function u(){return S.getUrl()}function f(a){var n=a.split(","),t=null,o=!1;e.each(n,function(e,a){return a=a.replace(/'/g,"").trim(),t=w.find("a[data-option='"+a+"']"),1===t.length?(w.find(".bfh-selectbox-option").text(t.text()).data("option",a),A.val(a),o=!0,!1):void 0}),o||(w.find(".bfh-selectbox-option").text(r).data("option",r),A.val(r))}function h(){f("Arial, 'Helvetica Neue', Helvetica, sans-serif")}function p(e){M=e}function b(e,a){var n=w.find("[role=option]");v.loadGoogleFont(e,M),n.prepend("<li class='google-font'><a tabindex='-1' href='#' style='font-family: Google' data-option='"+e+"'>"+e+"</a></li>"),a&&(w.find(".bfh-selectbox-option").data("option",e).html(e),w.find(".font-family").val(e)),l()}function g(e,a){v.loadCustomFont(e,a,M),B=a,T=r}var v=RiseVision.Common.Utilities,y=e(a),w=null,A=null,k=null,S=null,C=null,M=null,T="",B="";return n=e.extend({},{blank:!1,font:"Arial","font-url":"",load:null,showCustom:!0,showMore:!0},n),o(),{getFont:c,getFontStyle:m,getFontURL:u,setFont:f,reset:h,setContentDoc:p,addGoogleFont:b,addCustomFont:g}}var i="fontPicker",r="Use Custom Font";e.fn.fontPicker=function(a){return this.each(function(){e.data(this,"plugin_"+i)||e.data(this,"plugin_"+i,new o(this,a))})}}(jQuery,window,document,TEMPLATES,CONFIG),angular.module("risevision.widget.common.fontpicker",[]).directive("fontPicker",["$log",function(){return{restrict:"E",scope:{font:"="},template:"<div class='font-picker'></div>",link:function(e,a,n){var t,o,i=$(a).find("div.font-picker");i.data("plugin_fontPicker")||(i.fontPicker({font:n.defaultFont||"Verdana",blank:!1,showCustom:!0,showMore:!0}),o=i.data("plugin_fontPicker")),e.$watch("font",function(e){e&&(o.setFont(e.family),e.hasOwnProperty("type")&&"custom"===e.type&&o.addCustomFont(e.family,e.url))}),t=i.find("div.bfh-selectbox"),t.bfhselectbox(t.data()),i.on("standardFontSelected",function(a,n,t){e.$apply(function(){e.font.type="standard",e.font.font=n,e.font.family=t,delete e.font.url})}),i.on("customFontSelected",function(a,n,t){e.$apply(function(){e.font.type="custom",e.font.font=n,e.font.family=n,e.font.url=t})}),i.on("googleFontSelected",function(a,n){e.$apply(function(){e.font.type="google",e.font.font=n,e.font.family=n,delete e.font.url})})}}}]);var CONFIG={};if(function(e){"use strict";function a(a,n){function t(){s.append("<select class='form-control bfh-fontsizes' data-style='btn-default btn-sm'></select>"),s.find(".bfh-fontsizes").bfhfontsizes({fontsize:n["font-size"],blank:n.blank}).selectpicker(),s.find(".bfh-fontsizes").on("change.bfhselectbox",function(){s.trigger("sizeChanged",o())})}function o(){return s.find(".bfh-fontsizes").val()}function i(a){var n=s.find(".bfh-fontsizes");a&&(a=parseInt(a,10),n.find("> .dropdown-menu li").each(function(){e(this).find("span").text()==a?e(this).toggleClass("selected",!0):e(this).toggleClass("selected",!1)}),n.find("> button").attr("title",a),n.find(".filter-option").html(a),n.val(a))}function r(){i(d)}var s=e(a),d="14";return n=e.extend({},{"font-size":d,blank:!1},n),t(),{getFontSize:o,setFontSize:i,reset:r}}var n="fontSizePicker";e.fn.fontSizePicker=function(t){return this.each(function(){e.data(this,"plugin_"+n)||e.data(this,"plugin_"+n,new a(this,t))})}}(jQuery,window,document,CONFIG),angular.module("risevision.widget.common.fontsizepicker",[]).directive("fontSizePicker",["$log",function(){return{restrict:"E",scope:!1,replace:!0,require:"?ngModel",link:function(e,a,n,t){var o=$(a);if(!o.data("plugin_fontSizePicker")){o.fontSizePicker({"font-size":"18"});var i=o.data("plugin_fontSizePicker")}t&&(t.$render=function(){t.$modelValue&&i.setFontSize(t.$modelValue)
}),o.on("sizeChanged",function(a,n){e.$apply(function(){t.$setViewValue(n)})})}}}]),"undefined"!=typeof angular&&angular.module("risevision.widget.common.storage-selector.config",[]).value("STORAGE_MODAL","http://storage.risevision.com/storage-modal.html#/files/"),function(){"use strict";angular.module("risevision.widget.common.storage-selector",["ui.bootstrap","risevision.widget.common.storage-selector.config"]).directive("storageSelector",["$window","$templateCache","$modal","$sce","$log","STORAGE_MODAL",function(e,a,n,t,o,i){return{restrict:"EA",scope:{local:"@",useCtrl:"@",instanceTemplate:"@",companyId:"@"},template:a.get("storage-selector.html"),link:function(e){e.storageUrl="",e.open=function(){var a=n.open({templateUrl:e.instanceTemplate||"storage.html",controller:e.useCtrl||"StorageCtrl",size:"lg",backdrop:!0,resolve:{storageUrl:function(){return{url:t.trustAsResourceUrl(e.storageUrl)}}}});a.result.then(function(a){e.$emit("picked",a)},function(){o.info("Modal dismissed at: "+new Date)})},e.local?e.storageUrl=i+"local":e.$watch("companyId",function(a){a&&(e.storageUrl=i+a)})}}}])}(),angular.module("risevision.widget.common.storage-selector").controller("StorageCtrl",["$scope","$modalInstance","storageUrl","$window","$log",function(e,a,n,t){e.storageUrl=n,t.addEventListener("message",function(e){var n="storage-stage-rva-test.risevision.com",t="storage.risevision.com";(-1!==e.origin.indexOf(n)||-1!==e.origin.indexOf(t))&&(Array.isArray(e.data)?a.close(e.data):"string"==typeof e.data&&"close"===e.data&&a.dismiss("cancel"))})}]),function(){try{app=angular.module("risevision.widget.common.storage-selector")}catch(e){app=angular.module("risevision.widget.common.storage-selector",[])}app.run(["$templateCache",function(e){"use strict";e.put("storage-selector.html",'<button class="btn btn-widget-icon-storage" ng-click="open()" type="button" />\n<script type="text/ng-template" id="storage.html">\n        <iframe class="modal-dialog" scrolling="no" marginwidth="0" src="{{ storageUrl.url }}"></iframe>\n</script>\n')}])}(),"undefined"==typeof TEMPLATES)var TEMPLATES={};if(TEMPLATES["alignment.html"]='<div class="btn-group alignment">\n  <button type="button" class="btn btn-default btn-sm btn-alignment dropdown-toggle"\n    data-toggle="dropdown" data-wysihtml5-command-value="left">\n    <i class="fa fa-align-left"></i>\n    <span class="caret"></span>\n  </button>\n  <div class="dropdown-menu" role="menu">\n    <div class="btn-group">\n      <button type="button" class="btn btn-default btn-sm" data-wysihtml5-command="alignment"\n        data-wysihtml5-command-value="left" tabindex="-1">\n        <i class="fa fa-align-left"></i>\n      </button>\n      <button type="button" class="btn btn-default btn-sm" data-wysihtml5-command="alignment"\n        data-wysihtml5-command-value="center" tabindex="-1">\n        <i class="fa fa-align-center"></i>\n      </button>\n      <button type="button" class="btn btn-default btn-sm" data-wysihtml5-command="alignment"\n        data-wysihtml5-command-value="right" tabindex="-1">\n        <i class="fa fa-align-right"></i>\n      </button>\n      <button type="button" class="btn btn-default btn-sm" data-wysihtml5-command="alignment"\n        data-wysihtml5-command-value="justify" tabindex="-1">\n        <i class="fa fa-align-justify"></i>\n      </button>\n    </div>\n  </div>\n</div>\n',function(e,a,n,t){"use strict";function o(a,n){function o(){d.append(t["alignment.html"]),l=d.find(".btn-alignment"),r(n.align),d.find(".dropdown-menu button").on("click",function(){var a=e(this).data("wysihtml5-command-value");r(a),d.trigger("alignmentChanged",a)})}function i(){return l.data("wysihtml5-command-value")}function r(e){var a=d.find(".btn-alignment .fa"),n=a.attr("class").match(/fa-align-[a-z]+/g),t="fa-align-"+e;n&&n.length>0&&a.removeClass(n[0]),a.addClass(t),l.data("wysihtml5-command-value",e)}function s(){r(c)}var d=e(a),l=null,c="left";return n=e.extend({},{align:c},n),o(),{getAlignment:i,setAlignment:r,reset:s}}var i="alignment";e.fn.alignment=function(a){return this.each(function(){e.data(this,"plugin_"+i)||e.data(this,"plugin_"+i,new o(this,a))})}}(jQuery,window,document,TEMPLATES),"undefined"==typeof WIDGET_SETTINGS_UI_CONFIG)var WIDGET_SETTINGS_UI_CONFIG={};if("undefined"==typeof TEMPLATES)var TEMPLATES={};if(TEMPLATES["font-style.html"]='<div class="btn-group">\n  <a class="btn btn-sm btn-default bold" data-wysihtml5-command="bold" title="CTRL+B" tabindex="-1">B</a>\n  <a class="btn btn-sm btn-default italic" data-wysihtml5-command="italic" title="CTRL+I" tabindex="-1">I</a>\n  <a class="btn btn-sm btn-default underline" data-wysihtml5-command="underline" title="CTRL+U" tabindex="-1">U</a>\n</div>\n',function(e,a,n,t){"use strict";function o(a,n){function o(){b.append(t["font-style.html"]),g=b.find(".bold"),v=b.find(".italic"),y=b.find(".underline"),h({bold:n.bold,italic:n.italic,underline:n.underline}),b.find(".btn").on("click",function(){var a=!e(this).hasClass("active");r(e(this),a),b.trigger("styleChanged",[e(this).attr("data-wysihtml5-command"),a])})}function i(e){return e.hasClass("active")}function r(e,a){a?e.addClass("active"):e.removeClass("active")}function s(){return i(g)}function d(e){r(g,e)}function l(){return i(v)}function c(e){r(v,e)}function m(){return i(y)}function u(e){r(y,e)}function f(){return{bold:s(),italic:l(),underline:m()}}function h(e){r(g,e.bold),r(v,e.italic),r(y,e.underline)}function p(){h(w)}var b=e(a),g=null,v=null,y=null,w={bold:!1,italic:!1,underline:!1};return n=e.extend({},w,n),o(),{isBold:s,isItalic:l,isUnderline:m,setBold:d,setItalic:c,setUnderline:u,getStyles:f,setStyles:h,reset:p}}var i="fontStyle";e.fn.fontStyle=function(a){return this.each(function(){e.data(this,"plugin_"+i)||e.data(this,"plugin_"+i,new o(this,a))})}}(jQuery,window,document,TEMPLATES),"undefined"==typeof WIDGET_SETTINGS_UI_CONFIG)var WIDGET_SETTINGS_UI_CONFIG={};if("undefined"==typeof TEMPLATES)var TEMPLATES={};if(TEMPLATES["url-field-template.html"]='<div class="form-group validate-url">\n  <div class="checkbox">\n    <label>\n      <input name="validate-url" type="checkbox" value="validate-url" checked="checked"> Validate URL\n    </label>\n  </div>\n</div>\n<div class="form-group">\n  <label>URL</label>\n  <input name="url" type="text" class="form-control" />\n</div>\n',function(e,a,n,t){"use strict";function o(a,n){function o(){return e.trim(c.val())}function i(e){return-1===e.indexOf("://")&&(e="http://"+e),f.test(e)}function r(e){"string"==typeof e&&c&&c.val(e)}function s(){if(!h)return!0;var e=i(o());return e||m.is(":visible")||m.show(),e}function d(){l.append(t["url-field-template.html"]),c=l.find("input[name='url']"),m=l.find("div.validate-url"),u=l.find("input[name='validate-url']"),m.hide(),r(n.url),u.on("click",function(){h=e(this).is(":checked")})}var l=e(a),c=null,m=null,u=null,f=/^(?:(?:https?|ftp):\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]+-?)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]+-?)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:\/[^\s]*)?$/i,h=!0;return n=e.extend({},{url:"http://"},n),d(),{setUrl:r,getUrl:o,validateUrl:s}}var i="urlField";e.fn.urlField=function(a){return this.each(function(){e.data(this,"plugin_"+i)||e.data(this,"plugin_"+i,new o(this,a))})}}(jQuery,window,document,TEMPLATES),"undefined"==typeof WIDGET_SETTINGS_UI_CONFIG)var WIDGET_SETTINGS_UI_CONFIG={};if(function(){"use strict";angular.module("risevision.widget.common.alignment",[]).directive("alignment",function(){return{restrict:"E",scope:{align:"="},transclude:!1,link:function(e,a){var n=$(a);e.$watch("align",function(e){e&&(n.data("plugin_alignment")?n.data("plugin_alignment").setAlignment(e):n.alignment({align:e}))}),n.on("alignmentChanged",function(a,n){e.$apply(function(){e.align=n})})}}})}(),function(){"use strict";angular.module("risevision.widget.common.url-field",["risevision.common.i18n","risevision.widget.common.tooltip","risevision.widget.common.storage-selector"]).directive("urlField",["$templateCache","$log",function(e,a){return{restrict:"E",require:"?ngModel",scope:{url:"=",hideLabel:"@",hideStorage:"@",companyId:"@"},template:e.get("_angular/url-field/url-field.html"),link:function(e,n,t,o){function i(e){var a;return a=/^(?:(?:https?|ftp):\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]+-?)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]+-?)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:\/[^\s]*)?$/i,-1===e.indexOf("://")&&(e="http://"+e),a.test(e)}e.doValidation=!0,e.forcedValid=!1,e.valid=!0,e.hideStorage||e.$on("picked",function(a,n){e.url=n[0]}),e.$watch("url",function(a){a&&e.doValidation&&(e.valid=i(e.url))}),e.$watch("valid",function(e){o&&(a.info("Calling $setValidity() on parent controller"),o.$setValidity("valid",e))}),e.$watch("doValidation",function(a){"undefined"!=typeof e.url&&(a?(e.forcedValid=!1,e.valid=i(e.url)):(e.forcedValid=!0,e.valid=!0))})}}}])}(),function(){try{app=angular.module("risevision.widget.common.url-field")}catch(e){app=angular.module("risevision.widget.common.url-field",[])}app.run(["$templateCache",function(e){"use strict";e.put("_angular/url-field/url-field.html",'<div class="form-group" >\n  <label for="url" ng-if="!hideLabel">{{ "url.label" | translate }}</label>\n  <div ng-class="{\'input-group\':!hideStorage}">\n    <input id="url" name="url" type="text" ng-model="url" class="form-control" placeholder="http://">\n    <span class="input-url-addon" ng-if="!hideStorage"><storage-selector company-id="{{companyId}}"></storage-selector></span>\n  </div>\n  <p ng-if="!valid" class="help-block">{{ "url.invalid" | translate }}</p>\n  <div class="checkbox" ng-show="forcedValid || !valid">\n    <label>\n      <input name="validate-url" ng-click="doValidation = !doValidation" type="checkbox"\n             value="validate-url" checked="checked"> {{"url.validate.label" | translate}}\n    </label>\n    <span popover="{{\'url.validate.tooltip\' | translate}}" popover-trigger="click"\n          popover-placement="top" rv-tooltip></span>\n  </div>\n</div>\n')}])}(),function(){"use strict";angular.module("risevision.widget.common.color-picker",["risevision.widget.common"]).directive("colorPicker",["i18nLoader",function(e){return{restrict:"A",scope:{color:"=",type:"@"},transclude:!1,link:function(a,n){function t(e){a.$apply(function(){a.color=e.toRgbString()})}var o=$(n);a.type=a.type?a.type:"background",a.$watch("color",function(n){n&&(o.next().hasClass(".sp-replacer.sp-light")?o.spectrum("set",n):e.get().then(function(){var e={cancelText:"Cancel",chooseText:"Apply",color:n,preferredFormat:"rgb",showAlpha:!0,showInput:!0,type:a.type,change:t,showPalette:!0,palette:[["#000","#444","#666","#999","#ccc","#eee","#f3f3f3","#fff"],["#f00","#f90","#ff0","#0f0","#0ff","#00f","#90f","#f0f"],["#f4cccc","#fce5cd","#fff2cc","#d9ead3","#d0e0e3","#cfe2f3","#d9d2e9","#ead1dc"],["#ea9999","#f9cb9c","#ffe599","#b6d7a8","#a2c4c9","#9fc5e8","#b4a7d6","#d5a6bd"],["#e06666","#f6b26b","#ffd966","#93c47d","#76a5af","#6fa8dc","#8e7cc3","#c27ba0"],["#c00","#e69138","#f1c232","#6aa84f","#45818e","#3d85c6","#674ea7","#a64d79"],["#900","#b45f06","#bf9000","#38761d","#134f5c","#0b5394","#351c75","#741b47"],["#600","#783f04","#7f6000","#274e13","#0c343d","#073763","#20124d","#4c1130"]]};o.spectrum(e)}))})}}}])}(),function(){"use strict";angular.module("risevision.widget.common.font-style",[]).directive("fontStyle",function(){function e(e,a){var n=$(a);n.fontStyle({}),e.$watch("bold",function(e){e&&n.data("plugin_fontStyle")&&n.data("plugin_fontStyle").setBold(e)}),e.$watch("italic",function(e){e&&n.data("plugin_fontStyle")&&n.data("plugin_fontStyle").setItalic(e)}),e.$watch("underline",function(e){e&&n.data("plugin_fontStyle")&&n.data("plugin_fontStyle").setUnderline(e)}),n.on("styleChanged",function(a,n,t){e.$apply(function(){"bold"===n?e.bold=t:"italic"===n?e.italic=t:"underline"===n&&(e.underline=t)})})}return{restrict:"E",scope:{bold:"=",italic:"=",underline:"="},link:e}})}(),function(){"use strict";angular.module("risevision.widget.common.font-setting",["risevision.common.i18n","risevision.widget.common.font-style","risevision.widget.common.alignment","risevision.widget.common.color-picker","risevision.widget.common.fontsizepicker","risevision.widget.common.fontpicker"]).directive("fontSetting",["$templateCache",function(e){return{restrict:"AE",scope:{fontData:"=",previewText:"@",hideAlignment:"@"},template:e.get("_angular/font-setting/font-setting.html"),transclude:!1,link:function(e,a,n){function t(a){if(e.previewText&&a){var n=o.find(".font-picker-text"),t=o.find(".font-picker-text span");t.css("font-family",a.font.family),t.css("font-size",a.size+"px"),t.css("font-weight",a.bold?"bold":"normal"),t.css("font-style",a.italic?"italic":"normal"),t.css("text-decoration",a.underline?"underline":"none"),t.css("color",a.color),t.css("background-color",a.highlightColor),n.css("text-align",a.align)}}var o=$(a);e.defaultFont={font:{type:"standard",name:"Verdana",family:"Verdana"},size:"20",bold:!1,italic:!1,underline:!1,color:"black",highlightColor:"transparent"},("undefined"==typeof n.hideAlignment||"true"!==n.hideAlignment)&&(e.defaultFont.align="left"),e.defaults=function(e){if(e)for(var a=1,n=arguments.length;n>a;a++){var t=arguments[a];for(var o in t)void 0===e[o]&&(e[o]=t[o])}return e};var i=e.$watch("fontData",function(a){a&&(e.defaults(a,e.defaultFont),t(a),i(),e.previewText&&e.$watch("fontData",t,!0))})}}}])}(),function(){try{app=angular.module("risevision.widget.common.font-setting")}catch(e){app=angular.module("risevision.widget.common.font-setting",[])}app.run(["$templateCache",function(e){"use strict";e.put("_angular/font-setting/font-setting.html",'<div class="row" class="font-settings">\n  <div class="col-md-12">\n    <ul class="list-inline">\n      <li class="pull-left">\n        <font-picker font="fontData.font"></font-picker>\n      </li>\n      <li class="pull-left">\n        <font-size-picker ng-model="fontData.size"></font-size-picker>\n      </li>\n      <li class="pull-left font-setting-button">\n        <font-style bold="fontData.bold" italic="fontData.italic" underline="fontData.underline"></font-style>\n      </li>\n      <li class="pull-left font-setting-button">\n        <input color-picker type="text" color="fontData.color" />\n      </li>\n      <li class="pull-left font-setting-button">\n        <input color-picker type="highlight" color="fontData.highlightColor" />\n      </li>\n      <li class="pull-left" ng-if="!hideAlignment">\n        <alignment align="fontData.align" class="font-setting-button"></alignment>\n      </li>\n    </ul>\n  </div>\n</div>\n<div class="row" ng-if="previewText">\n  <div class="col-md-12">\n    <div class="font-picker-text form-group">\n      <span>{{previewText}}</span>\n    </div>\n  </div>\n</div>\n')}])}(),"undefined"!=typeof angular&&(angular.module("risevision.widget.weather.config",[]).value("current","https://s3.amazonaws.com/widget-weather/0.1.0/dist/current.html").value("threeDay","https://s3.amazonaws.com/widget-weather/0.1.0/dist/three-day.html").value("currentAndThreeDay","https://s3.amazonaws.com/widget-weather/0.1.0/dist/current-and-three-day.html"),angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json")),"undefined"==typeof config)var config={urlByName:decodeURI(decodeURIComponent("%68%74%74%70%3a%2f%2f%77%77%77%2e%74%69%6e%62%75%77%65%61%74%68%65%72%2e%63%6f%6d%2f%77%78%5f%66%65%65%64%2f%77%78%5f%63%75%72%72%65%6e%74%5f%65%78%74%65%6e%64%65%64%5f%62%79%5f%6e%61%6d%65%2e%70%68%70%3f%70%61%73%73%63%6f%64%65%3d%72%69%73%65%64%69%73%70%6c%61%79%25%37%43%64%6b%61%63%26%6d%65%74%72%69%63%3d%66%61%6c%73%65")),urlByLocation:decodeURI(decodeURIComponent("%68%74%74%70%3a%2f%2f%77%77%77%2e%74%69%6e%62%75%77%65%61%74%68%65%72%2e%63%6f%6d%2f%77%78%5f%66%65%65%64%2f%77%78%5f%63%75%72%72%65%6e%74%5f%65%78%74%65%6e%64%65%64%5f%62%79%5f%6c%61%74%6c%6f%6e%2e%70%68%70%3f%70%61%73%73%63%6f%64%65%3d%72%69%73%65%64%69%73%70%6c%61%79%25%37%43%64%6b%61%63%26%6d%65%74%72%69%63%3d%66%61%6c%73%65"))};angular.module("risevision.widget.weather.settings",["risevision.common.i18n","risevision.widget.weather.config","risevision.widget.common","risevision.widget.common.tooltip","risevision.widget.common.widget-button-toolbar","risevision.widget.common.url-field","risevision.widget.common.font-setting","risevision.widget.common.background-setting"]),angular.module("risevision.widget.common",[]),angular.module("risevision.widget.common").controller("settingsController",["$scope","settingsSaver","settingsGetter","settingsCloser",function(e,a,n,t){e.settings={params:{},additionalParams:{}},e.alerts=[],e.getAdditionalParam=function(a,n){var t=e.settings.additionalParams[a];return angular.isUndefined(t)?n:t},e.setAdditionalParam=function(a,n){e.settings.additionalParams[a]=n},e.loadAdditionalParams=function(){n.getAdditionalParams().then(function(a){e.settings.additionalParams=a,e.$broadcast("loadAdditionalParams",a)},function(e){alert(e)})},e.setAdditionalParams=function(a,n){e.settings.additionalParams[a]=n},e.saveSettings=function(){e.alerts=[],e.$broadcast("collectAdditionalParams"),a.saveSettings(e.settings).then(function(){},function(a){e.alerts=a.alerts})},e.closeSettings=function(){t.closeSettings().then(function(){},function(a){e.alerts=a.alerts})},e.settings.params=n.getParams(),e.loadAdditionalParams()}]).directive("scrollOnAlerts",function(){return{restrict:"A",scope:!1,link:function(e,a){e.$watchCollection("alerts",function(e,n){e.length>0&&0===n.length&&$("body").animate({scrollTop:a.offset().top},"fast")})}}}),angular.module("risevision.widget.common").constant("STORAGE_URL_BASE","storage.googleapis.com/risemedialibrary-").factory("commonSettings",["$log","STORAGE_URL_BASE",function(e,a){var n={getStorageUrlData:function(e){var n,t,o,i,r={};if(-1!==e.indexOf(a))n=e.split(a)[1],n=decodeURIComponent(n.slice(n.indexOf("/")+1)),t=n.split("/"),r.folder="undefined"!=typeof t[t.length-2]&&null!==t[t.length-2]?t[t.length-2]:"",r.fileName=t[t.length-1];else{o=e.split("?");for(var s=0;s<o.length;s++)if(i=o[s].split("="),"prefix"===i[0]){r.folder=decodeURIComponent(i[1]),r.fileName="";break}}return r}};return n}]),angular.module("risevision.widget.common").factory("gadgetsApi",["$window",function(e){return e.gadgets}]),angular.module("risevision.widget.common").service("i18nLoader",["$window","$q",function(e,a){var n=a.defer();e.i18n.init({fallbackLng:"en",resGetPath:"locales/__ns_____lng__.json"},function(){n.resolve(e.i18n)}),this.get=function(){return n.promise}}]),angular.module("risevision.widget.common").factory("imageValidator",["$q",function(e){var a={isImage:function(a){var n=e.defer(),t=new Image;return t.onload=function(){n.resolve(!0)},t.onerror=function(){n.resolve(!1)},t.src=a,n.promise}};return a}]),angular.module("risevision.widget.common").service("settingsSaver",["$q","$log","gadgetsApi","settingsParser",function(e,a,n,t){function o(e){var a=angular.copy(e);return delete a.params.id,delete a.params.companyId,delete a.params.rsW,delete a.params.rsH,a}this.saveSettings=function(i,r){var s=e.defer(),d=[],l="";i=o(i),r&&(d=r(i)),d.length>0&&(a.debug("Validation failed.",d),s.reject({alerts:d})),i.params.hasOwnProperty("layoutURL")&&(l+=i.params.layoutURL+"?",delete i.params.layoutURL),l+=t.encodeParams(i.params);var c=t.encodeAdditionalParams(i.additionalParams);return n.rpc.call("","rscmd_saveSettings",function(e){a.debug("encoded settings",JSON.stringify(e)),a.debug("Settings saved. ",i),s.resolve(e)},{params:l,additionalParams:c}),s.promise}}]).service("settingsGetter",["$q","gadgetsApi","$log","settingsParser","$window","defaultSettings",function(e,a,n,t,o,i){this.getAdditionalParams=function(){var o=e.defer(),r=i.additionalParams||{};return a.rpc.call("","rscmd_getAdditionalParams",function(e){e=e?t.parseAdditionalParams(e):{},n.debug("getAdditionalParams returns ",e),o.resolve(angular.extend(r,e))}),o.promise},this.getParams=function(){var e=i.params||{};return angular.extend(e,t.parseParams(o.location.search))}}]).service("settingsParser",[function(){function e(e){return 0===e.indexOf("up_")?e.slice(3):null}this.parseAdditionalParams=function(e){return e?JSON.parse(e):{}},this.encodeAdditionalParams=function(e){return JSON.stringify(e)},this.encodeParams=function(e){var a=[];for(var n in e)if(e.hasOwnProperty(n)){var t;t="object"==typeof e[n]?JSON.stringify(e[n]):e[n],a.push("up_"+encodeURIComponent(n)+"="+encodeURIComponent(t))}return a.join("&")},this.parseParams=function(a){"?"===a[0]&&(a=a.slice(1));for(var n={},t=a.split("&"),o=0;o<t.length;o++){var i=t[o].split("="),r=e(decodeURIComponent(i[0]));if(r)try{n[r]=JSON.parse(decodeURIComponent(i[1]))}catch(s){n[r]=decodeURIComponent(i[1])}}return n}}]).service("settingsCloser",["$q","$log","gadgetsApi",function(e,a,n){this.closeSettings=function(){var a=e.defer();return n.rpc.call("","rscmd_closeSettings",function(){a.resolve(!0)}),a.promise}}]).value("defaultSettings",{}),function(e){"use strict";e.module("risevision.widget.common.visualization",[]).factory("visualizationApi",["$q","$window",function(e,a){var n,t=e.defer(),o={get:function(){return n||(n=t.promise,a.google.visualization?t.resolve(a.google.visualization):a.google.setOnLoadCallback(function(){t.resolve(a.google.visualization)})),n}};return o}])}(angular),angular.module("risevision.widget.weather.settings").controller("weatherSettingsController",["$scope","current","threeDay","currentAndThreeDay",function(e,a,n,t){e.termsAccepted=!1,e.showCurrent=!0,e.showForecast=!1,e.showCustomAddress=!1,e.showCustomDescription=!1,e.showHumidity=!0,e.current=a,e.threeDay=n,e.currentAndThreeDay=t,e.$watch("settings.additionalParams.terms",function(a){void 0!==a&&(e.termsAccepted=a)}),e.$watch("settings.additionalParams.layoutURL",function(a){void 0!==a&&(e.settings.params.layoutURL=a)}),e.$watch("settings.additionalParams.layout",function(o){void 0!==o&&("current"===o?(e.showCurrent=!0,e.showForecast=!1,e.settings.params.layoutURL=a):"three-day"===o?(e.showCurrent=!1,e.showForecast=!0,e.settings.params.layoutURL=n):("current-and-three-day"===o||"custom"===o)&&(e.showCurrent=!0,e.showForecast=!0,e.settings.params.layoutURL="custom"===o?e.settings.additionalParams.layoutURL:t))}),e.$watch("settings.additionalParams.address",function(a){e.showCustomAddress="custom"===a?!0:!1}),e.$watch("settings.additionalParams.description",function(a){e.showCustomDescription="custom"===a?!0:!1}),e.$watch("settings.additionalParams.showHumidity",function(a){void 0!==a&&(e.showHumidity=a)})}]).value("defaultSettings",{params:{layoutURL:""},additionalParams:{terms:!1,layout:"current",currentTempFont:{size:"60",bold:!0},forecastTempFont:{},forecastDayFont:{bold:!0},address:"geolocation",customAddress:"",description:"service",customDescription:"",addressFont:{size:"24",bold:!0},showHumidity:!0,windSpeed:"kph",humidityFont:{},unit:"celsius",background:{}}}),function(){"use strict";angular.module("risevision.widget.common.widget-button-toolbar",["risevision.common.i18n"]).directive("widgetButtonToolbar",["$templateCache",function(e){return{restrict:"E",scope:{help:"@",contribute:"@",save:"&",cancel:"&",disableSave:"&"},template:e.get("_angular/widget-button-toolbar/widget-button-toolbar.html"),link:function(e,a,n){e.helpRef="",e.contributeRef="","undefined"!=typeof n.help&&""!==n.help&&(e.helpRef=n.help),"undefined"!=typeof n.contribute&&""!==n.contribute&&(e.contributeRef=n.contribute)}}}])}(),function(){try{app=angular.module("risevision.widget.common.widget-button-toolbar")}catch(e){app=angular.module("risevision.widget.common.widget-button-toolbar",[])}app.run(["$templateCache",function(e){"use strict";e.put("_angular/widget-button-toolbar/widget-button-toolbar.html",'<div class="btn-toolbar sticky-buttons">\n  <button id="save" class="btn btn-primary btn-fixed-width" type="button" ng-click="save()" ng-disabled="disableSave()">\n    <span>{{"common.save" | translate}}</span>\n    <i class="fa fa-white fa-check fa-lg icon-right"></i>\n  </button>\n  <button id="cancel" class="btn btn-default btn-fixed-width" type="button" ng-click="cancel()">\n    <span>{{"common.cancel" | translate}}</span>\n    <i class="fa fa-white fa-times fa-lg icon-right"></i>\n  </button>\n  <a type="button" class="btn btn-rv-help btn-fixed-width" target="_blank" href={{helpRef}} ng-if="helpRef !== \'\'">\n    <span>{{"common.help" | translate}}</span>\n    <i class="fa fa-question-circle fa-lg icon-right"></i>\n  </a>\n  <a type="button" class="btn btn-rv-help btn-fixed-width" target="_blank" href={{contributeRef}} ng-if="contributeRef !== \'\'">\n    <span>{{"common.contribute" | translate}}</span>\n    <i class="fa fa-github fa-lg icon-right"></i>\n  </a>\n</div>\n')}])}(),function(){"use strict";angular.module("risevision.widget.common.tooltip",["ui.bootstrap"]).directive("rvTooltip",[function(){return{restrict:"A",link:function(e,a){a.addClass("fa"),a.addClass("fa-question-circle"),a.addClass("fa-lg")}}}])}(),function(){"use strict";angular.module("risevision.widget.common.scroll-setting",["risevision.common.i18n","risevision.widget.common.tooltip"]).directive("scrollSetting",["$templateCache",function(e){return{restrict:"E",scope:{scroll:"="},template:e.get("_angular/scroll-setting/scroll-setting.html"),transclude:!1,link:function(e){e.defaultSetting={by:"none",speed:"medium",pause:5},e.defaults=function(e){if(e)for(var a=1,n=arguments.length;n>a;a++){var t=arguments[a];for(var o in t)void 0===e[o]&&(e[o]=t[o])}return e},e.$watch("scroll",function(a){e.defaults(a,e.defaultSetting)})}}}])}(),function(){try{app=angular.module("risevision.widget.common.scroll-setting")}catch(e){app=angular.module("risevision.widget.common.scroll-setting",[])}app.run(["$templateCache",function(e){"use strict";e.put("_angular/scroll-setting/scroll-setting.html",'<div class="section">\n  <h5>{{\'scroll.heading\' | translate}}</h5>\n  <div class="form-group">\n    <div class="row">\n      <div class="col-md-3">\n        <label>{{\'scroll.by.label\' | translate}}</label>\n        <select id="scroll-by" ng-model="scroll.by" class="form-control">\n          <option value="none">{{\'scroll.by.none\' | translate}}</option>\n          <option value="continuous">{{\'scroll.by.continuous\' | translate}}</option>\n          <option value="page">{{\'scroll.by.page\' | translate}}</option>\n        </select>\n      </div>\n    </div>\n  </div>\n  <div ng-show="scroll.by != \'none\'" class="more-scroll-options">\n    <div class="form-group">\n      <label for="scroll-speed">{{\'scroll.speed.label\' | translate}}</label>\n      <div class="row">\n        <div class="col-md-3">\n          <select id="scroll-speed" ng-model="scroll.speed" class="form-control">\n            <option value="slowest">{{\'scroll.speed.slowest\' | translate}}</option>\n            <option value="slow">{{\'scroll.speed.slow\' | translate}}</option>\n            <option value="medium">{{\'scroll.speed.medium\' | translate}}</option>\n            <option value="fast">{{\'scroll.speed.fast\' | translate}}</option>\n            <option value="fastest">{{\'scroll.speed.fastest\' | translate}}</option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class="form-group">\n      <label for="scroll-pause">\n        {{\'scroll.pause.label\' | translate}}\n      </label>\n      <span popover="{{\'scroll.pause.tooltip\' | translate}}"\n            popover-trigger="click" popover-placement="right" rv-tooltip></span>\n      <div class="row">\n        <div class="col-md-3">\n          <div class="input-group">\n            <input id="scroll-pause" type="number" ng-model="scroll.pause" class="form-control" />\n            <span class="input-group-addon">{{\'common.units.seconds\' | translate}}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n')}])}(),function(){"use strict";angular.module("risevision.widget.common.background-setting",["risevision.common.i18n","risevision.widget.common.color-picker"]).directive("backgroundSetting",["$templateCache",function(e){return{restrict:"E",scope:{background:"="},template:e.get("_angular/background-setting/background-setting.html"),link:function(e){e.defaultSetting={color:"transparent"},e.defaults=function(e){if(e)for(var a=1,n=arguments.length;n>a;a++){var t=arguments[a];for(var o in t)void 0===e[o]&&(e[o]=t[o])}return e},e.$watch("background",function(a){e.defaults(a,e.defaultSetting)})}}}])}(),function(){try{app=angular.module("risevision.widget.common.background-setting")}catch(e){app=angular.module("risevision.widget.common.background-setting",[])}app.run(["$templateCache",function(e){"use strict";e.put("_angular/background-setting/background-setting.html",'<div class="section">\n  <h5>{{"background.heading" | translate}}</h5>\n  <div class="form-group">\n    <label>{{"background.color.label" | translate}}  &nbsp;</label>\n    <div>\n      <input color-picker color="background.color" type="background">\n    </div>\n  </div>\n</div>\n')}])}();
//# sourceMappingURL=data:application/json;base64,